{"ast":null,"code":"var _jsxFileName = \"/Users/jasonlihuang/Documents/cs373-airpollution/frontend/src/pages/illnesses/Illnesses.js\";\nimport React, { Component } from 'react';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader, CardDeck, CardColumns, CardSubtitle, CardBody, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Col, Row, Pagination, DropdownButton, Dropdown } from 'react-bootstrap';\n\nconst fetch = require(\"node-fetch\");\n/**\nSources:\n\nPagination sources:\nhttps://github.com/react-bootstrap/pagination\nhttps://www.npmjs.com/package/react-ultimate-pagination\nhttps://codepen.io/joedazza/pen/BVXVej\n**/\n\n\nconst ENDPOINT = 'https://api.howsmyair.me/illness';\n\nconst buildOrder = (fieldname, direction) => {\n  return \"{%22field%22:%22\".concat(fieldname, \"%22,%22direction%22:%22\").concat(direction, \"%22}\");\n};\n\nconst buildFilter = (fieldname, operator, value) => {\n  return \"{%22name%22:%22\".concat(fieldname, \"%22,%22op%22:%22\").concat(operator, \"%22,%22val%22:%22\").concat(value, \"%22}\");\n};\n\nconst buildQuery = (model, page, filterObjs, orderObjs) => {\n  return \"https://api.howsmyair.me/\".concat(model, \"?page=\").concat(page, \"&q={%22filters%22:[\").concat(filterObjs, \"],%22order_by%22:[\").concat(orderObjs, \"]}\");\n};\n\nexport class Illnesses extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      num_results: null,\n      objects: [],\n      page: 1,\n      total_pages: null,\n      states: [],\n      time_zones: [],\n      current_contagious: \"None\",\n      current_lethality: \"None\",\n      current_treatable: \"None\",\n      sort_by: \"illness_name\",\n      display_sort: \"Illness\",\n      order: \"asc\",\n      display_order: \"Ascending\",\n      isloaded: false\n    };\n    this.getQuery = this.getQuery.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.getQuery());\n    fetch(this.getQuery()).then(res => res.json()).then(data => {\n      this.setState({\n        data: data,\n        num_results: data.num_results,\n        objects: data.objects,\n        page: data.page,\n        total_pages: data.total_pages,\n        isloaded: true\n      });\n    });\n  }\n\n  getQuery() {\n    let filterObjs = buildFilter(\"illness_name\", \"like\", \"%25%25\");\n    let orderObjs = buildOrder(\"illness_name\", \"asc\");\n\n    if (this.state.current_contagious != \"None\") {\n      filterObjs += \",\" + buildFilter(\"illness_contagious\", \"eq\", this.state.current_contagious);\n    }\n\n    if (this.state.current_lethality != \"None\") {\n      filterObjs += \",\" + buildFilter(\"illness_lethality\", \"eq\", this.state.current_lethality);\n    }\n\n    if (this.state.current_treatable != \"None\") {\n      filterObjs += \",\" + buildFilter(\"illness_treatable\", \"eq\", this.state.current_treatable);\n    }\n\n    orderObjs = buildOrder(this.state.sort_by, this.state.order);\n    return buildQuery(\"illness\", this.state.page, filterObjs, orderObjs);\n  }\n\n  render() {\n    if (this.state.isloaded) {\n      let span = 4;\n      let page = this.state.page;\n      let l = page - span / 2;\n      let r = page + span / 2;\n      let range = [];\n      /*If there aren't enough pages to have dynamically changing page values*/\n\n      if (this.state.total_pages < span) {\n        range = [...Array(this.state.total_pages + 1 - 1).keys()].map(i => i + 1);\n      } else if (page + span > this.state.total_pages) {\n        /*At the right bound*/\n        range = [...Array(this.state.total_pages - (this.state.total_pages - span)).keys()].map(i => this.state.total_pages - span + i + 1);\n      } else if (page - span < 0) {\n        /*At the left bound*/\n        range = [...Array(span + 1 - 1).keys()].map(i => i + 1);\n      } else {\n        /*At somewhere in between*/\n        range = [...Array(r + 1 - l - 1).keys()].map(i => i + l);\n      }\n\n      console.log(range);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, this.state.num_results, \" Illnesses\")), React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Filters\")), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Contagious\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_contagious: \"None\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"None\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_contagious: \"yes\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Contagious\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_contagious: \"no\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Non-contagious\")), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, this.state.current_contagious))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Treatable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_lethality: \"None\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"None\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_lethality: \"lethal\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Lethal\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_lethality: \"non-lethal\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Non-lethal\")), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, this.state.current_lethality))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Treatable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_treatable: \"None\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"None\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_treatable: \"yes\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Treatable\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_treatable: \"no\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Non-treatable\")), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, this.state.current_treatable))), React.createElement(\"h3\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Sort By\")), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: this.state.display_sort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"illness_name\",\n            display_sort: \"Illness\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Illness\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"illness_lethality\",\n            display_sort: \"Lethality\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Lethality\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"illness_contagious\",\n            display_sort: \"Contagious\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Contagious\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"illness_treatable\",\n            display_sort: \"Treatable\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Treatable\"))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: this.state.display_order,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            order: \"asc\",\n            display_order: \"Ascending\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Ascending\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            order: \"desc\",\n            display_order: \"Descending\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Descending\"))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Page \", this.state.page, \"/\", this.state.total_pages)), React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(Pagination, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(Pagination.First, {\n        onClick: e => this.setState({\n          page: 1,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), React.createElement(Pagination.Prev, {\n        disabled: this.state.page <= 0,\n        onClick: e => this.setState({\n          page: this.state.page - 1,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), range.map(page => React.createElement(Pagination.Item, {\n        active: page === this.state.page,\n        onClick: e => this.setState({\n          page: page,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, page)), React.createElement(Pagination.Next, {\n        disabled: this.state.page >= this.state.total_pages,\n        onClick: e => this.setState({\n          page: this.state.page + 1,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), React.createElement(Pagination.Last, {\n        onClick: e => this.setState({\n          page: this.state.total_pages,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      })))), Illnesscards(this.state.objects));\n    } else {\n      this.componentDidMount();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://i.makeagif.com/media/9-30-2017/bhAyTs.gif\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\n\nconst Illnesscards = illnesses => {\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"justify-content-md-center\",\n    className: \"spacing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, illnesses.map(illness => React.createElement(Col, {\n    className: \"spacing\",\n    lg: \"4\",\n    sm: \"6\",\n    xs: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    style: {\n      cursor: 'pointer'\n    },\n    href: \"/Illness/\" + illness.illness_name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, React.createElement(Card, {\n    body: true,\n    style: {\n      backgroundColor: '#00',\n      borderColor: '#2255',\n      height: '35rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(CardImg, {\n    style: {\n      maxHeight: '16rem'\n    },\n    src: illness.illness_image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }), React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, illness.illness_name)), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, \"Lethality: \", illness.illness_lethality, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }), \"Symptoms: \", illness.illness_symptoms, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }), \"Contagious: \", illness.illness_contagious, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }), \"Treatable: \", illness.illness_treatable))))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  })))));\n};","map":{"version":3,"sources":["/Users/jasonlihuang/Documents/cs373-airpollution/frontend/src/pages/illnesses/Illnesses.js"],"names":["React","Component","Jumbotron","Container","Card","Button","CardImg","CardTitle","CardText","CardHeader","CardDeck","CardColumns","CardSubtitle","CardBody","Form","FormGroup","Label","Input","FormText","Col","Row","Pagination","DropdownButton","Dropdown","fetch","require","ENDPOINT","buildOrder","fieldname","direction","buildFilter","operator","value","buildQuery","model","page","filterObjs","orderObjs","Illnesses","constructor","props","state","data","num_results","objects","total_pages","states","time_zones","current_contagious","current_lethality","current_treatable","sort_by","display_sort","order","display_order","isloaded","getQuery","bind","componentDidMount","console","log","then","res","json","setState","render","span","l","r","range","Array","keys","map","i","color","e","Illnesscards","illnesses","illness","cursor","illness_name","backgroundColor","borderColor","height","maxHeight","illness_image","illness_lethality","illness_symptoms","illness_contagious","illness_treatable"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText,\n        CardHeader,  CardDeck, CardColumns, CardSubtitle, CardBody,\n        Form,FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Col, Row, Pagination, DropdownButton, Dropdown } from 'react-bootstrap';\nconst fetch = require(\"node-fetch\");\n\n/**\nSources:\n\nPagination sources:\nhttps://github.com/react-bootstrap/pagination\nhttps://www.npmjs.com/package/react-ultimate-pagination\nhttps://codepen.io/joedazza/pen/BVXVej\n**/\n\nconst ENDPOINT = 'https://api.howsmyair.me/illness';\n\nconst buildOrder  = (fieldname,direction) => {\n    return `{%22field%22:%22${fieldname}%22,%22direction%22:%22${direction}%22}`\n}\n\nconst buildFilter = (fieldname,operator,value) => {\n    return `{%22name%22:%22${fieldname}%22,%22op%22:%22${operator}%22,%22val%22:%22${value}%22}`\n}\n\nconst buildQuery = (model,page,filterObjs,orderObjs) => {\n      return `https://api.howsmyair.me/${model}?page=${page}&q={%22filters%22:[${filterObjs}],%22order_by%22:[${orderObjs}]}`\n}\n\nexport class Illnesses extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      data : {},\n      num_results: null,\n      objects:[],\n      page: 1,\n      total_pages: null,\n      states : [],\n      time_zones : [],\n      current_contagious: \"None\",\n      current_lethality : \"None\",\n      current_treatable : \"None\",\n      sort_by : \"illness_name\",\n      display_sort : \"Illness\",\n      order : \"asc\",\n      display_order : \"Ascending\",\n      isloaded : false,\n    };\n        this.getQuery = this.getQuery.bind(this)\n        this.componentDidMount = this.componentDidMount.bind(this)\n  }\n\n    componentDidMount() {\n      console.log(this.getQuery())\n      fetch(this.getQuery())\n         .then(res => res.json())\n         .then(data => {\n          this.setState({\n            data : data,\n            num_results: data.num_results,\n            objects: data.objects,\n            page: data.page,\n            total_pages: data.total_pages,\n            isloaded : true,\n          })\n\n      })\n    };\n\n    getQuery(){\n\n      let filterObjs = buildFilter(\"illness_name\",\"like\",`%25%25`);\n      let orderObjs = buildOrder(\"illness_name\",\"asc\")\n\n      if (this.state.current_contagious != \"None\") {\n        filterObjs += \",\"+buildFilter(\"illness_contagious\",\"eq\",this.state.current_contagious)\n      }\n      if (this.state.current_lethality != \"None\") {\n        filterObjs += \",\"+buildFilter(\"illness_lethality\",\"eq\",this.state.current_lethality)\n      }\n      if (this.state.current_treatable != \"None\") {\n        filterObjs += \",\"+buildFilter(\"illness_treatable\",\"eq\",this.state.current_treatable)\n      }\n\n      orderObjs = buildOrder(this.state.sort_by,this.state.order)\n\n      return buildQuery(\"illness\",this.state.page,filterObjs,orderObjs);\n    }\n\n    render(){\n      if (this.state.isloaded){\n      let span = 4\n      let page = this.state.page\n      let l = page - (span / 2)\n      let r = page + (span / 2)\n      let range = []\n      /*If there aren't enough pages to have dynamically changing page values*/\n      if(this.state.total_pages < span) {\n        range = [...Array((this.state.total_pages + 1) - 1).keys()].map(i => i +1 )\n      } else if (page + span > this.state.total_pages) {\n        /*At the right bound*/\n        range = [...Array((this.state.total_pages) - (this.state.total_pages - span)).keys()].map(i => (this.state.total_pages - span) + i + 1)\n      } else if (page - span < 0) {\n        /*At the left bound*/\n        range = [...Array((span + 1) - 1).keys()].map(i => i + 1)\n      } else {\n        /*At somewhere in between*/\n        range = [...Array((r + 1) - l-1).keys()].map(i => i + l )\n      }\n      console.log(range)\n      return(\n        <div>\n          <br/>\n            <Row className=\"justify-content-md-center\">\n                <h1 style={{color: '#1976d2'}}>{this.state.num_results} Illnesses</h1>\n            </Row>\n            <Jumbotron>\n            <Row className=\"justify-content-md-center\">\n              <Col md=\"auto\">\n                <h3 style={{color: '#1976d2'}}>Filters</h3>\n              </Col>\n              <Col md=\"auto\">\n                <center>\n                  <DropdownButton id=\"dropdown-basic-button\" title=\"Contagious\">\n                    <Dropdown.Item onClick={() => {this.setState({ current_contagious : \"None\", page : 1, isloaded : false});}}>\n                      None\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_contagious : \"yes\", page : 1, isloaded : false});}}>\n                      Contagious\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_contagious : \"no\", page : 1, isloaded : false});}}>\n                      Non-contagious\n                    </Dropdown.Item>\n                  </DropdownButton>\n                  <h5 style={{color: '#1976d2'}}>{this.state.current_contagious}</h5>\n                </center>\n              </Col>\n              <Col md=\"auto\">\n                <center>\n                  <DropdownButton id=\"dropdown-basic-button\" title=\"Treatable\">\n                    <Dropdown.Item onClick={() => {this.setState({ current_lethality : \"None\", page : 1, isloaded : false});}}>\n                      None\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_lethality : \"lethal\", page : 1, isloaded : false});}}>\n                      Lethal\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_lethality : \"non-lethal\", page : 1, isloaded : false});}}>\n                      Non-lethal\n                    </Dropdown.Item>\n                  </DropdownButton>\n                  <h5 style={{color: '#1976d2'}}>{this.state.current_lethality}</h5>\n                </center>\n              </Col>\n              <Col md=\"auto\">\n                <center>\n                  <DropdownButton id=\"dropdown-basic-button\" title=\"Treatable\">\n                    <Dropdown.Item onClick={() => {this.setState({ current_treatable : \"None\", page : 1, isloaded : false});}}>\n                      None\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_treatable : \"yes\", page : 1, isloaded : false});}}>\n                      Treatable\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_treatable : \"no\", page : 1, isloaded : false});}}>\n                      Non-treatable\n                    </Dropdown.Item>\n                  </DropdownButton>\n                  <h5 style={{color: '#1976d2'}}>{this.state.current_treatable}</h5>\n                </center>\n              </Col>\n              <h3 style={{color: '#1976d2'}}><center>Sort By</center></h3>\n              <Col md=\"auto\">\n                  <DropdownButton id=\"dropdown-basic-button\" title={this.state.display_sort}>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"illness_name\", display_sort : \"Illness\", page : 1, isloaded : false});}}>\n                      Illness\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"illness_lethality\", display_sort : \"Lethality\", page : 1, isloaded : false});}}>\n                      Lethality\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"illness_contagious\", display_sort : \"Contagious\", page : 1, isloaded : false});}}>\n                      Contagious\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"illness_treatable\", display_sort : \"Treatable\", page : 1, isloaded : false});}}>\n                      Treatable\n                    </Dropdown.Item>\n                  </DropdownButton>\n              </Col>\n              <Col md=\"auto\">\n                  <DropdownButton id=\"dropdown-basic-button\" title = {this.state.display_order}>\n                    <Dropdown.Item onClick={() => {this.setState({ order : \"asc\", display_order : \"Ascending\", page : 1, isloaded : false});}}>\n                      Ascending\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ order : \"desc\", display_order : \"Descending\", page : 1, isloaded : false});}}>\n                      Descending\n                    </Dropdown.Item>\n                  </DropdownButton>\n              </Col>\n            </Row>\n            </Jumbotron>\n          <br/>\n          <Container>\n            <center><h4 style={{color: '#1976d2'}}>Page {this.state.page}/{this.state.total_pages}</h4></center>\n            <Row className=\"justify-content-md-center\">\n              <Pagination>\n                {/*First Page*/}\n                <Pagination.First\n                  onClick={e => this.setState({ page : 1, isloaded : false})}\n                />\n\n                {/*Previous Page*/}\n                <Pagination.Prev\n                  disabled={this.state.page <= 0}\n                  onClick={e => this.setState({ page : this.state.page -1 , isloaded : false})}\n                />\n\n                {/*Eveything in between - see block before return statement*/}\n                {range.map(page => (\n                  <Pagination.Item\n                    active={page === this.state.page}\n                    onClick={e => this.setState({ page : page , isloaded : false})}\n                  >\n                    {page}\n                  </Pagination.Item>\n                ))}\n\n                {/*Next Page*/}\n                <Pagination.Next\n                  disabled={this.state.page >= this.state.total_pages}\n                  onClick={e => this.setState({ page : this.state.page +1 , isloaded : false})}\n                />\n\n                {/*Last Page*/}\n                <Pagination.Last\n                  onClick={e => this.setState({ page : this.state.total_pages, isloaded : false})}\n                />\n              </Pagination>\n            </Row>\n           </Container>\n             {Illnesscards(this.state.objects)}\n        </div>\n      );\n    } else {\n      this.componentDidMount();\n      return (\n        <div>\n         <center><img src = \"https://i.makeagif.com/media/9-30-2017/bhAyTs.gif\"/></center>\n        </div>\n      );\n   }\n  }\n}\n\nconst Illnesscards = ( illnesses ) => {\n  return(\n  <Container>\n    <Row className=\"justify-content-md-center\" className=\"spacing\">\n      {illnesses.map((illness) => (\n         <Col className=\"spacing\" lg=\"4\" sm=\"6\" xs=\"12\">\n         <a style={{ cursor: 'pointer' }} href={\"/Illness/\" + illness.illness_name}>\n         <Card body style={{ backgroundColor: '#00', borderColor: '#2255', height: '35rem'}}>\n            <CardImg style={{ maxHeight: '16rem' }} src={illness.illness_image} />\n            <CardHeader>\n              {/* The dynamic link is arranged this way through the NavBar.js\n              and back to the Location component*/}\n              <h5>{illness.illness_name}</h5>\n            </CardHeader>\n            <CardBody>\n            <CardText>\n              <p>Lethality: {illness.illness_lethality}\n              <br/>Symptoms: {illness.illness_symptoms}\n              <br/>Contagious: {illness.illness_contagious}\n              <br/>Treatable: {illness.illness_treatable}\n              </p>\n            </CardText>\n            </CardBody>\n         </Card>\n         </a>\n         <p />\n         </Col>\n      ))}\n    </Row>\n  </Container>\n\n  )\n};\n"]},"metadata":{},"sourceType":"module"}