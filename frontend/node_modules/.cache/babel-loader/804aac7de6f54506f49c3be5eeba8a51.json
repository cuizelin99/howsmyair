{"ast":null,"code":"var _jsxFileName = \"/home/jasonsim/School/cs373-airpollution/frontend/src/pages/illnesses/IllnessItems.js\";\nimport React, { Component } from 'react';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader, CardDeck, CardColumns, CardSubtitle, CardBody, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Col, Row, Pagination, DropdownButton, Dropdown, Table } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Highlighter from 'react-highlight-words';\n\nconst fetch = require(\"node-fetch\");\n\nexport const Illnesscards = props => {\n  if (props != null && props.illnesses != null) {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      className: \"spacing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, props.illnesses.map(illness => React.createElement(Col, {\n      className: \"spacing\",\n      lg: \"4\",\n      sm: \"6\",\n      xs: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        cursor: 'pointer',\n        color: 'black'\n      },\n      href: \"/Illness/\" + illness.illness_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(Card, {\n      body: true,\n      style: {\n        borderColor: '#2255',\n        boxShadow: \"0px 3px 0px #14428E\",\n        height: '36rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(CardImg, {\n      style: {\n        maxHeight: '16rem'\n      },\n      src: illness.illness_image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      class: \"text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, illness.illness_name)), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Lethality: \", illness.illness_lethality, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), \"Symptoms: \", illness.illness_symptoms, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), \"Contagious: \", illness.illness_contagious, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), \"Treatable: \", illness.illness_treatable))))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })))));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"shit ain't loading\");\n  }\n};\nexport const IllnessTable = props => {\n  if (props.illnesses != null && props.illnesses != null && typeof props.searchstring != \"undefined\") {\n    return React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Illness\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Illness Description\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Lethality\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Symptoms\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Contagious\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Treatable\")), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, props.illnesses.map(illness => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Illness/\" + illness.illness_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Highlighter, {\n      highlightStyle: {\n        backgroundColor: 'lightblue'\n      },\n      searchWords: [props.searchstring],\n      autoEscape: true,\n      textToHighlight: illness.illness_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Illness/\" + illness.illness_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Highlighter, {\n      highlightStyle: {\n        backgroundColor: 'lightblue'\n      },\n      searchWords: [props.searchstring],\n      autoEscape: true,\n      textToHighlight: illness.illness_desc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, illness.illness_lethality)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Illness/\" + illness.illness_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Highlighter, {\n      highlightStyle: {\n        backgroundColor: 'lightblue'\n      },\n      searchWords: [props.searchstring],\n      autoEscape: true,\n      textToHighlight: illness.illness_symptoms,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, illness.illness_contagious)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, illness.illness_treatable))))));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"shit ain't loading\");\n  }\n};","map":{"version":3,"sources":["/home/jasonsim/School/cs373-airpollution/frontend/src/pages/illnesses/IllnessItems.js"],"names":["React","Component","Jumbotron","Container","Card","Button","CardImg","CardTitle","CardText","CardHeader","CardDeck","CardColumns","CardSubtitle","CardBody","Form","FormGroup","Label","Input","FormText","Col","Row","Pagination","DropdownButton","Dropdown","Table","Link","Highlighter","fetch","require","Illnesscards","props","illnesses","map","illness","cursor","color","illness_name","borderColor","boxShadow","height","maxHeight","illness_image","illness_lethality","illness_symptoms","illness_contagious","illness_treatable","IllnessTable","searchstring","backgroundColor","illness_desc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText,\n        CardHeader,  CardDeck, CardColumns, CardSubtitle, CardBody,\n        Form,FormGroup, Label, Input, FormText } from 'reactstrap';\nimport {Col, Row, Pagination, DropdownButton, Dropdown, Table} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Highlighter from 'react-highlight-words';\nconst fetch = require(\"node-fetch\");\n\nexport const Illnesscards = ( props ) => {\n  if(props != null && props.illnesses != null){\n    return(\n      <Container>\n        <Row className=\"justify-content-md-center\" className=\"spacing\">\n          {props.illnesses.map((illness) => (\n             <Col className=\"spacing\" lg=\"4\" sm=\"6\" xs=\"12\">\n             <a style={{ cursor: 'pointer', color: 'black' }} href={\"/Illness/\" + illness.illness_name}>\n             <Card body style={{ borderColor: '#2255', boxShadow: \"0px 3px 0px #14428E\", height: '36rem'}}>\n                <CardImg style={{ maxHeight: '16rem' }} src={illness.illness_image} />\n                <CardHeader>\n                  {/* The dynamic link is arranged this way through the NavBar.js\n                  and back to the Location component*/}\n                  <h5 class=\"text-primary\">{illness.illness_name}</h5>\n                </CardHeader>\n                <CardBody>\n                <CardText>\n                  <p>Lethality: {illness.illness_lethality}\n                  <br/>Symptoms: {illness.illness_symptoms}\n                  <br/>Contagious: {illness.illness_contagious}\n                  <br/>Treatable: {illness.illness_treatable}\n                  </p>\n                </CardText>\n                </CardBody>\n             </Card>\n             </a>\n             <p />\n             </Col>\n          ))}\n        </Row>\n      </Container>\n    )\n  } else {\n    return(<div>shit ain't loading</div>);\n  }\n}\n\n\nexport const IllnessTable = (props) => {\n  if(props.illnesses != null && props.illnesses != null && typeof props.searchstring != \"undefined\"){\n    return (\n      <Table striped bordered hover responsive >\n        <th><center>Illness</center></th>\n        <th><center>Illness Description</center></th>\n        <th><center>Lethality</center></th>\n        <th><center>Symptoms</center></th>\n        <th><center>Contagious</center></th>\n        <th><center>Treatable</center></th>\n        <tbody>\n        {props.illnesses.map((illness) => (\n          <tr>\n          <td>\n            <center>\n              <Link to={\"/Illness/\" + illness.illness_name}>\n                  <Highlighter\n                    highlightStyle={{backgroundColor: 'lightblue'}}\n                    searchWords={[props.searchstring]}\n                    autoEscape={true}\n                    textToHighlight= {illness.illness_name}\n                  />\n              </Link>\n            </center>\n          </td>\n          <td>\n            <center>\n              <Link to={\"/Illness/\" + illness.illness_name}>\n                  <Highlighter\n                    highlightStyle={{backgroundColor: 'lightblue'}}\n                    searchWords={[props.searchstring]}\n                    autoEscape={true}\n                    textToHighlight= {illness.illness_desc}\n                  />\n              </Link>\n            </center>\n          </td>\n          <td><center>{illness.illness_lethality}</center></td>\n          <td>\n            <center>\n              <Link to={\"/Illness/\" + illness.illness_name}>\n                  <Highlighter\n                    highlightStyle={{backgroundColor: 'lightblue'}}\n                    searchWords={[props.searchstring]}\n                    autoEscape={true}\n                    textToHighlight= {illness.illness_symptoms}\n                  />\n              </Link>          \n            </center>\n          </td>\n          <td><center>{illness.illness_contagious}</center></td>\n          <td><center>{illness.illness_treatable}</center></td>\n          </tr>\n        ))}\n        </tbody>\n      </Table>\n    );\n  } else {\n    return(<div>shit ain't loading</div>);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}