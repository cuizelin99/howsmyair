{"ast":null,"code":"var _jsxFileName = \"/Users/davidbomm/SWE/cs373-airpollution/frontend/src/visualizations/visual3.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nexport function getTotalEvents(data) {\n  var total = 0;\n\n  for (var i = 0; i < data.length; i++) {\n    total += data[i].value;\n  }\n\n  return total;\n}\n\nclass Pie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false\n    };\n  }\n\n  drawPieChart() {\n    // Define SVG attributes\n    var width = 600,\n        height = 600,\n        radius = 300; //alert(\"eventbrite found from prop\" + this.props.data[0].value);\n    // Use predefined D3 palette\n\n    var colors = d3.scale.category20c();\n    var totalValue = getTotalEvents(this.props.data); // Create a D3 layout that creates SVG arcs from the supplied data\n\n    var pieLayout = d3.layout.pie().value(function (d) {\n      return d.value;\n    }); // Create a D3 arc of the specified radius\n\n    var arc = d3.svg.arc().outerRadius(radius); // Create the SVG graphic\n\n    var svg = d3.select(\"pieChart\").append('svg').attr('width', width).attr('height', height);\n    const tip = d3Tip().attr('class', 'd3-tip').offset([-13, 0]).html(function (d) {\n      return d.data.label + \": <span style='color:orangered'>\" + Math.floor(d.data.value / totalValue * 100) + \"%</span>\";\n    });\n    svg.call(tip); // Create a group to hold the chart\n\n    svg.append('g') // Move the center of the chart to the center of the SVG\n    .attr('transform', 'translate(' + (width - radius) + ', ' + (height - radius) + ')') // Select the complement of paths relative to the data\n    .selectAll('path').data(pieLayout(this.props.data)).enter() // Add a group for each pie slice\n    .append('g').attr('class', 'slice').on('mouseover', tip.show).on('mouseout', tip.hide); // Add the pie slices\n\n    d3.selectAll('g.slice').append('path').attr('fill', function (d, i) {\n      return colors(i);\n    }).attr('d', arc); // Add the slice labels\n\n    d3.selectAll('g.slice').append('text').text(function (d, i) {\n      return d.data.label + ' (' + d.data.value + ')';\n    }).attr('font-size', '12').attr('text-anchor', 'middle').attr('fill', 'black').attr('transform', function (d) {\n      // Move the lable to the center of its slice\n      d.innerRadius = 0;\n      d.outerRadius = radius;\n      return 'translate(' + arc.centroid(d) + ')';\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.props.isLoaded && !this.state.isLoaded) {\n      this.drawPieChart();\n      this.setState({\n        isLoaded: true\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"pieChart\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Pie;","map":{"version":3,"sources":["/Users/davidbomm/SWE/cs373-airpollution/frontend/src/visualizations/visual3.js"],"names":["React","Component","d3","getTotalEvents","data","total","i","length","value","Pie","constructor","props","state","isLoaded","drawPieChart","width","height","radius","colors","scale","category20c","totalValue","pieLayout","layout","pie","d","arc","svg","outerRadius","select","append","attr","tip","d3Tip","offset","html","label","Math","floor","call","selectAll","enter","on","show","hide","text","innerRadius","centroid","componentDidUpdate","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\n\n\n\nexport function getTotalEvents (data)\n{\n  var total = 0;\n  for (var i = 0; i < data.length; i++)\n  {\n    total += data[i].value;\n  }\n  return total;\n}\n\n\nclass Pie extends Component\n{\n  constructor(props) {\n    super(props);\n    this.state =\n    {\n      isLoaded: false,\n    };\n  }\n\n  drawPieChart()\n  {\n        // Define SVG attributes\n    var width = 600,\n        height = 600,\n        radius = 300;\n      //alert(\"eventbrite found from prop\" + this.props.data[0].value);\n    // Use predefined D3 palette\n    var colors = d3.scale.category20c()\n\n    var totalValue = getTotalEvents(this.props.data);\n\n    // Create a D3 layout that creates SVG arcs from the supplied data\n    var pieLayout = d3.layout.pie()\n      .value(function(d) {\n        return d.value;\n      })\n\n    // Create a D3 arc of the specified radius\n    var arc = d3.svg.arc()\n      .outerRadius(radius)\n\n    // Create the SVG graphic\n    var svg = d3.select(\"pieChart\").append('svg')\n      .attr('width', width)\n      .attr('height', height)\n\n\n    const tip = d3Tip()\n      .attr('class', 'd3-tip')\n      .offset([-13, 0])\n      .html(function(d) {\n        return d.data.label + \": <span style='color:orangered'>\" + Math.floor((d.data.value / totalValue) * 100) + \"%</span>\";\n      });\n    svg.call(tip);\n\n    // Create a group to hold the chart\n    svg.append('g')\n      // Move the center of the chart to the center of the SVG\n      .attr('transform', 'translate(' + (width - radius) + ', ' + (height - radius) + ')')\n      // Select the complement of paths relative to the data\n      .selectAll('path').data(pieLayout(this.props.data)).enter()\n        // Add a group for each pie slice\n        .append('g')\n        .attr('class', 'slice')\n        .on('mouseover', tip.show)\n        .on('mouseout', tip.hide);\n\n    // Add the pie slices\n    d3.selectAll('g.slice')\n          .append('path')\n          .attr('fill', function(d, i) {\n            return colors(i);\n          })\n          .attr('d', arc)\n\n\n    // Add the slice labels\n    d3.selectAll('g.slice')\n          .append('text')\n          .text(function(d, i) {\n            return d.data.label + ' (' + d.data.value + ')';\n          })\n          .attr('font-size', '12')\n          .attr('text-anchor', 'middle')\n          .attr('fill', 'black')\n          .attr('transform', function(d){\n            // Move the lable to the center of its slice\n            d.innerRadius = 0;\n            d.outerRadius = radius;\n            return 'translate(' + arc.centroid(d) + ')'\n          })\n\n  }\n\n  componentDidUpdate()\n  {\n    if (this.props.isLoaded && !this.state.isLoaded)\n    {\n      this.drawPieChart();\n\n      this.setState({\n        isLoaded : true\n      });\n    }\n  }\n\n  render()\n  {\n    return (\n      <div>\n\n      <pieChart/>\n        <br/>\n      </div>\n    );\n  }\n}\n\nexport default Pie;\n"]},"metadata":{},"sourceType":"module"}