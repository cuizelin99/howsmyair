{"ast":null,"code":"var _jsxFileName = \"/Users/jasonlihuang/Documents/cs373-airpollution/frontend/src/pages/illnesses/IllnessInstance.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader, CardDeck, CardColumns, CardSubtitle, CardBody, NavLink, UncontrolledCarousel, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Image, Col, Row, ListGroup } from 'react-bootstrap';\nimport LocationInstance, { RelatedLocations } from '../locations/LocationInstance';\nimport PollutantInstance, { RelatedPollutants } from '../pollutants/PollutantInstance';\n\nconst fetch = require(\"node-fetch\");\n\nconst ENDPOINT = 'https://api.howsmyair.me/illness';\nexport class RelatedIllness extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {}\n    };\n  }\n\n  componentDidMount() {\n    // get illness\n    fetch(ENDPOINT + '/' + this.props.illness_name).then(res => res.json()).then(data => {\n      this.setState({\n        data: data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Card, {\n      body: true,\n      style: {\n        backgroundColor: '#00',\n        borderColor: '#2255',\n        width: '16rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        cursor: 'pointer'\n      },\n      href: \"/Illness/\" + this.state.data.illness_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.state.data.illness_name)), React.createElement(CardImg, {\n      style: {\n        maxHeight: '16rem'\n      },\n      src: this.state.data.illness_image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }))));\n  }\n\n}\nexport class Illness extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      isloaded: false,\n      related_locations: [],\n      related_pollutants: []\n    };\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    const key = this.props.match.params.key; // get location\n\n    fetch(ENDPOINT + '/' + key).then(res => res.json()).then(data => {\n      this.setState({\n        data: data,\n        isloaded: true,\n        related_locations: data.related_locations,\n        related_pollutants: data.related_pollutants\n      });\n    });\n  }\n\n  render() {\n    if (this.state.isloaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.state.data.illness_name), React.createElement(\"h6\", {\n        class: \"card-subtitle mb-2 text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.state.data.illness_desc), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(ListGroup, {\n        variant: \"flush\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Lethality: \", this.state.data.illness_lethality), React.createElement(ListGroup.Item, {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Symptoms: \", this.state.data.illness_symptoms), React.createElement(ListGroup.Item, {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Contagious: \", this.state.data.illness_contagious), React.createElement(ListGroup.Item, {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Treatable: \", this.state.data.illness_treatable))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        width: \"70%\",\n        src: this.state.data.illness_image,\n        alt: \"Italian Trulli\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }))))), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Related Locations\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        className: \"spacing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.state.related_locations.map(location => React.createElement(Col, {\n        className: \"spacing\",\n        lg: \"4\",\n        sm: \"6\",\n        xs: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(RelatedLocations, {\n        location_id: location.location_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }))))))), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Related Pollutants\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        className: \"spacing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, this.state.related_pollutants.map(pollutant => React.createElement(Col, {\n        className: \"spacing\",\n        lg: \"4\",\n        sm: \"6\",\n        xs: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(RelatedPollutants, {\n        pollutant_name: pollutant.pollutant_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }))))))));\n    } else {\n      this.componentDidMount();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://i.makeagif.com/media/9-30-2017/bhAyTs.gif\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/jasonlihuang/Documents/cs373-airpollution/frontend/src/pages/illnesses/IllnessInstance.js"],"names":["React","Component","Jumbotron","Container","Card","Button","CardImg","CardTitle","CardText","CardHeader","CardDeck","CardColumns","CardSubtitle","CardBody","NavLink","UncontrolledCarousel","Form","FormGroup","Label","Input","FormText","Image","Col","Row","ListGroup","LocationInstance","RelatedLocations","PollutantInstance","RelatedPollutants","fetch","require","ENDPOINT","RelatedIllness","constructor","props","state","data","componentDidMount","illness_name","then","res","json","setState","render","backgroundColor","borderColor","width","cursor","maxHeight","illness_image","Illness","isloaded","related_locations","related_pollutants","bind","key","match","params","color","illness_desc","illness_lethality","illness_symptoms","illness_contagious","illness_treatable","map","location","location_id","pollutant","pollutant_name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader,\n         CardDeck, CardColumns, CardSubtitle, CardBody , NavLink, UncontrolledCarousel,\n         Form,FormGroup, Label, Input, FormText} from 'reactstrap';\nimport { Image, Col, Row, ListGroup } from 'react-bootstrap';\nimport LocationInstance, {RelatedLocations} from '../locations/LocationInstance';\nimport PollutantInstance,{RelatedPollutants} from '../pollutants/PollutantInstance';\nconst fetch = require(\"node-fetch\");\n\n\nconst ENDPOINT = 'https://api.howsmyair.me/illness';\n\nexport class RelatedIllness extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n      data: {}\n    };\n  }\n\n  componentDidMount() {\n     // get illness\n     fetch(ENDPOINT + '/' + this.props.illness_name)\n        .then(res => res.json())\n        .then(data => { this.setState({\n           data: data\n        })\n     })\n   };\n\n  render() {\n     return (\n      <div>\n      <Card body style={{ backgroundColor: '#00', borderColor: '#2255', width:'16rem' }}>\n      <a style={{ cursor: 'pointer' }} href={\"/Illness/\" + this.state.data.illness_name}>\n         <CardHeader>\n           <h5>{this.state.data.illness_name}</h5>\n         </CardHeader>\n         <CardImg style={{ maxHeight: '16rem' }} src={this.state.data.illness_image} />\n      </a>\n      </Card>\n      </div>\n     );\n  }\n}\n\nexport class Illness extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        data: {},\n        isloaded : false,\n        related_locations: [],\n        related_pollutants: []\n      };\n      this.componentDidMount = this.componentDidMount.bind(this)\n    }\n\n   componentDidMount() {\n      const {key} = this.props.match.params;\n      // get location\n      fetch(ENDPOINT + '/' + key)\n         .then(res => res.json())\n         .then(data => { this.setState({\n            data: data,\n            isloaded : true,\n            related_locations : data.related_locations,\n            related_pollutants : data.related_pollutants\n         })\n      })\n    };\n\n   render() {\n      if (this.state.isloaded) {\n         return (\n           <div>\n             <Jumbotron>\n               <Container>\n               <Row>\n                 <Col>\n                 <h1 style={{color: '#1976d2'}}>{this.state.data.illness_name}</h1>\n                 <h6 class=\"card-subtitle mb-2 text-muted\">{this.state.data.illness_desc}</h6>\n                 <br/>\n                   <ListGroup variant=\"flush\" >\n                   <ListGroup.Item  style={{color: '#1976d2'}}>\n                     Lethality: {this.state.data.illness_lethality}\n                   </ListGroup.Item>\n                   <ListGroup.Item style={{color: '#1976d2'}}>\n                     Symptoms: {this.state.data.illness_symptoms}\n                   </ListGroup.Item>\n                   <ListGroup.Item style={{color: '#1976d2'}}>\n                     Contagious: {this.state.data.illness_contagious}\n                   </ListGroup.Item>\n                   <ListGroup.Item style={{color: '#1976d2'}}>\n                     Treatable: {this.state.data.illness_treatable}\n                   </ListGroup.Item>\n                 </ListGroup>\n                 </Col>\n                 <Col>\n                  <img width=\"70%\" src={this.state.data.illness_image} alt=\"Italian Trulli\"/>\n                 </Col>\n               </Row>\n               </Container>\n             </Jumbotron>\n\n             <Container>\n               <Row>\n                 <Col>\n                   <h1 style={{color: '#1976d2'}}>Related Locations</h1><br/>\n                   <Row className=\"justify-content-md-center\" className=\"spacing\">\n                   {this.state.related_locations.map((location) => (\n                      <Col className=\"spacing\" lg=\"4\" sm=\"6\" xs=\"12\">\n                         <RelatedLocations location_id={location.location_id} />\n                         <p />\n                     </Col>\n                   ))}\n                   </Row>\n                 </Col>\n               </Row>\n             </Container>\n             <Container>\n               <Row>\n                 <Col>\n                   <h1 style={{color: '#1976d2'}}>Related Pollutants</h1><br/>\n                   <Row className=\"justify-content-md-center\" className=\"spacing\">\n                   {this.state.related_pollutants.map((pollutant) => (\n                      <Col className=\"spacing\" lg=\"4\" sm=\"6\" xs=\"12\">\n                       <RelatedPollutants pollutant_name={pollutant.pollutant_name} />\n                       <p />\n                    </Col>\n                   ))}\n                   </Row>\n                 </Col>\n               </Row>\n             </Container>\n           </div>\n         );\n    } else {\n      this.componentDidMount();\n      return(\n        <div>\n         <center><img src = \"https://i.makeagif.com/media/9-30-2017/bhAyTs.gif\"/></center>\n        </div>\n      )\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}