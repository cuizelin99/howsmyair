{"ast":null,"code":"var _jsxFileName = \"/home/jasonsim/School/cs373-airpollution/frontend/src/pages/locations/LocationInstance.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader, CardDeck, CardColumns, CardSubtitle, CardBody, NavLink, UncontrolledCarousel, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Image, Col, Row, Pagination } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Link, Switch, BrowserHistory } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport ReactDOM from 'react-dom';\nimport Illnesses from '../illnesses/Illnesses';\nimport Pollutants from '../pollutants/Pollutants';\n\nconst fetch = require(\"node-fetch\");\n\nconst ENDPOINT = 'https://api.howsmyair.me/location';\nexport class RelatedLocations extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      eyeD: \"\",\n      location_url: null\n    };\n  }\n\n  componentDidMount() {\n    // get location\n    fetch(ENDPOINT + '/' + this.props.location_id).then(res => res.json()).then(data => {\n      this.setState({\n        data: data,\n        location_url: \"https://maps.googleapis.com/maps/api/staticmap?center=\" + data.latitude + \",\" + data.longitude + \"&zoom=12&size=400x400\" + \"&markers=color:green%7Clabel:G%7C\" + data.latitude + \",\" + data.longitude + \"&key=AIzaSyB-U0Z7cqufI-MHmRwfLmgqDCyQmOlIq48\"\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Card, {\n      body: true,\n      style: {\n        backgroundColor: '#00',\n        borderColor: '#2255',\n        height: '22rem',\n        width: '22rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        cursor: 'pointer'\n      },\n      href: \"/Location/\" + this.props.location_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.state.data.city), React.createElement(\"h6\", {\n      class: \"card-subtitle mb-2 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.data.state_name)), React.createElement(CardImg, {\n      style: {\n        maxHeight: '12rem'\n      },\n      src: this.state.location_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nclass LocationInstance extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      eyeD: \"\",\n      location_url: null,\n      related_illnesses: [],\n      related_pollutants: []\n    };\n  }\n\n  componentDidMount() {\n    // get location\n    fetch(ENDPOINT + '/' + this.props.location_id).then(res => res.json()).then(data => {\n      this.setState({\n        data: data,\n        location_url: \"https://maps.googleapis.com/maps/api/staticmap?center=\" + data.latitude + \",\" + data.longitude + \"&zoom=12&size=400x400\" + \"&markers=color:green%7Clabel:G%7C\" + data.latitude + \",\" + data.longitude + \"&key=AIzaSyB-U0Z7cqufI-MHmRwfLmgqDCyQmOlIq48\",\n        related_illnesses: data.related_illnesses,\n        related_pollutants: data.related_pollutants\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        cursor: 'pointer'\n      },\n      href: \"/Location/\" + this.state.data.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Card, {\n      body: true,\n      style: {\n        backgroundColor: '#00',\n        borderColor: '#2255',\n        height: '40rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(CardImg, {\n      src: \"https://maps.googleapis.com/maps/api/staticmap?center=\" + this.state.data.latitude + \",\" + this.state.data.longitude + \"&zoom=12&size=400x400\" + \"&markers=color:green%7Clabel:G%7C\" + this.state.data.latitude + \",\" + this.state.data.longitude + \"&key=AIzaSyB-U0Z7cqufI-MHmRwfLmgqDCyQmOlIq48\",\n      alt: \"Italian Trulli\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.state.data.city), React.createElement(\"h6\", {\n      class: \"card-subtitle mb-2 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, this.state.data.state_name)), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"County: \", this.state.data.county_name, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), \"Latitude: \", this.state.data.latitude, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), \"Longitude: \", this.state.data.longitude, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), \"Population: \", this.state.data.population, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), \"Density (per sq. mile): \", this.state.data.density, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), \"Time Zone: \", this.state.data.timezone))))));\n  }\n\n}\n\nexport default LocationInstance;","map":{"version":3,"sources":["/home/jasonsim/School/cs373-airpollution/frontend/src/pages/locations/LocationInstance.js"],"names":["React","Component","Jumbotron","Container","Card","Button","CardImg","CardTitle","CardText","CardHeader","CardDeck","CardColumns","CardSubtitle","CardBody","NavLink","UncontrolledCarousel","Form","FormGroup","Label","Input","FormText","Image","Col","Row","Pagination","BrowserRouter","Router","Route","Link","Switch","BrowserHistory","createBrowserHistory","ReactDOM","Illnesses","Pollutants","fetch","require","ENDPOINT","RelatedLocations","constructor","props","state","data","eyeD","location_url","componentDidMount","location_id","then","res","json","setState","latitude","longitude","render","backgroundColor","borderColor","height","width","cursor","city","state_name","maxHeight","LocationInstance","related_illnesses","related_pollutants","id","county_name","population","density","timezone"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader,\n         CardDeck, CardColumns, CardSubtitle, CardBody , NavLink, UncontrolledCarousel,\n         Form,FormGroup, Label, Input, FormText} from 'reactstrap';\nimport { Image, Col, Row, Pagination} from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Link , Switch,BrowserHistory } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport ReactDOM from 'react-dom';\nimport Illnesses from '../illnesses/Illnesses';\nimport Pollutants from '../pollutants/Pollutants';\nconst fetch = require(\"node-fetch\");\n\n\nconst ENDPOINT = 'https://api.howsmyair.me/location';\n\nexport class RelatedLocations extends Component {\n\n  constructor(props){\n    super(props);\n      this.state = {\n        data: {},\n        eyeD: \"\",\n        location_url : null\n      };\n  }\n\n  componentDidMount() {\n    // get location\n    fetch(ENDPOINT + '/' + this.props.location_id)\n       .then(res => res.json())\n       .then(data => { this.setState({\n          data : data,\n          location_url : \"https://maps.googleapis.com/maps/api/staticmap?center=\"+\n                          data.latitude+\",\"+data.longitude+\n                          \"&zoom=12&size=400x400\"+\n                          \"&markers=color:green%7Clabel:G%7C\"+\n                          data.latitude+\",\"+data.longitude +\n                          \"&key=AIzaSyB-U0Z7cqufI-MHmRwfLmgqDCyQmOlIq48\"\n       })\n    })    \n  }\n   render() {\n      return (\n        <div>\n          <Card body style={{ backgroundColor: '#00', borderColor: '#2255', height: '22rem', width:'22rem' }}>\n            <a style={{ cursor: 'pointer' }} href={\"/Location/\" + this.props.location_id}>\n               <CardHeader>\n                  <h5>{this.state.data.city}</h5>\n                  <h6 class = \"card-subtitle mb-2 text-muted\">{this.state.data.state_name}</h6>\n               </CardHeader>\n               <CardImg style={{ maxHeight: '12rem' }} src={this.state.location_url}/>\n            </a>\n          </Card>\n        </div>\n      );\n  }\n\n}\n\n\nclass LocationInstance extends Component {\n\n   constructor(props) {\n      super(props);\n      this.state = {\n        data: {},\n        eyeD: \"\",\n        location_url : null,\n        related_illnesses: [],\n        related_pollutants: []\n      };\n   }\n\n   componentDidMount() {\n      // get location\n      fetch(ENDPOINT + '/' + this.props.location_id)\n         .then(res => res.json())\n         .then(data => { this.setState({\n            data : data,\n            location_url : \"https://maps.googleapis.com/maps/api/staticmap?center=\"+\n                            data.latitude+\",\"+data.longitude+\n                            \"&zoom=12&size=400x400\"+\n                            \"&markers=color:green%7Clabel:G%7C\"+\n                            data.latitude+\",\"+data.longitude +\n                            \"&key=AIzaSyB-U0Z7cqufI-MHmRwfLmgqDCyQmOlIq48\",\n            related_illnesses : data.related_illnesses,\n            related_pollutants : data.related_pollutants\n         })\n      })\n   };\n   render() {\n      return (\n        <div>\n          <a style={{ cursor: 'pointer' }} href={\"/Location/\" + this.state.data.id}>\n          <Card body style={{ backgroundColor: '#00', borderColor: '#2255', height: '40rem' }}>\n          <CardImg src={\n             \"https://maps.googleapis.com/maps/api/staticmap?center=\"+\n                             this.state.data.latitude+\",\"+this.state.data.longitude+\n                             \"&zoom=12&size=400x400\"+\n                             \"&markers=color:green%7Clabel:G%7C\"+\n                             this.state.data.latitude+\",\"+this.state.data.longitude +\n                             \"&key=AIzaSyB-U0Z7cqufI-MHmRwfLmgqDCyQmOlIq48\"}\n\n                             alt=\"Italian Trulli\" />\n            <CardHeader>\n              {/* The dynamic link is arranged this way through the NavBar.js\n              and back to the Location component*/}\n              <h5>{this.state.data.city}</h5>\n              <h6 class = \"card-subtitle mb-2 text-muted\">{this.state.data.state_name}</h6>\n            </CardHeader>\n            <CardBody>\n            <CardText>\n              <p>\n              County: {this.state.data.county_name}\n              <br/>Latitude: {this.state.data.latitude}\n              <br/>Longitude: {this.state.data.longitude}\n              <br/>Population: {this.state.data.population}\n              <br/>Density (per sq. mile): {this.state.data.density}\n              <br/>Time Zone: {this.state.data.timezone}\n              </p>\n            </CardText>\n            </CardBody>\n         </Card>\n         </a>\n        </div>\n      );\n   }\n}\n\nexport default LocationInstance;\n"]},"metadata":{},"sourceType":"module"}