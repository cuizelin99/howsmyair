{"ast":null,"code":"var _jsxFileName = \"/Users/jasonlihuang/Documents/cs373-airpollution/frontend/src/pages/pollutants/PollutantInstance.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader, CardDeck, CardColumns, CardSubtitle, CardBody, NavLink, UncontrolledCarousel, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Image, Col, Row, ListGroup } from 'react-bootstrap';\nimport IllnessInstance, { RelatedIllness } from '../illnesses/IllnessInstance';\nimport LocationInstance, { RelatedLocations } from '../locations/LocationInstance';\n\nconst fetch = require(\"node-fetch\");\n\nconst ENDPOINT = 'https://api.howsmyair.me/pollutants';\nexport class RelatedPollutants extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {}\n    };\n  }\n\n  componentDidMount() {\n    // get location\n    fetch(ENDPOINT + '/' + this.props.pollutant_name).then(res => res.json()).then(data => {\n      this.setState({\n        data: data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Card, {\n      body: true,\n      style: {\n        backgroundColor: '#00',\n        borderColor: '#2255'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        cursor: 'pointer'\n      },\n      href: \"/Pollutant/\" + this.state.data.chemical_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.state.data.chemical_name)), React.createElement(CardImg, {\n      src: this.state.data.chemspider_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }))));\n  }\n\n}\nexport class Pollutant extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      isloaded: false,\n      related_illnesses: [],\n      related_locations: []\n    };\n  }\n\n  componentDidMount() {\n    const key = this.props.match.params.key; // get location\n\n    fetch(ENDPOINT + '/' + key).then(res => res.json()).then(data => {\n      this.setState({\n        data: data,\n        isloaded: true,\n        related_illnesses: data.related_illnesses,\n        related_locations: data.related_locations\n      });\n    });\n  }\n\n  render() {\n    if (this.state.isloaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, this.state.data.chemical_name), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        variant: \"flush\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Cancer Potency:\", this.state.data.inhalation_cancer_potency, \" \", this.state.data.inhalation_cancer_potency_units, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Source: \", this.state.data.inhalation_cancer_potency_source)), React.createElement(ListGroup.Item, {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Reference Concentration:\", this.state.data.inhalation_reference_concentration, \" \", this.state.data.inhalation_reference_concentration_units, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Source: \", this.state.data.inhalation_reference_concentration_source)), React.createElement(ListGroup.Item, {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"National Ambient Air Quality:\", this.state.data.national_ambient_air_quality_std, \" \", this.state.data.national_ambient_air_quality_std_units, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Source: \", this.state.data.national_ambient_air_quality_std_source)))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        className: \"spacing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        width: \"50%\",\n        src: this.state.data.chemspider_id,\n        alt: \"Italian Trulli\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }))))))), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Related Illnesses\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        className: \"spacing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, this.state.related_illnesses.map(illness => React.createElement(\"div\", {\n        class: \"col-sm-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(RelatedIllness, {\n        illness_name: illness.illness_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }))))))), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Related Locations\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        className: \"spacing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, this.state.related_locations.map(location => React.createElement(\"div\", {\n        class: \"col-sm-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(RelatedLocations, {\n        location_id: location.location_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }))))))));\n    } else {\n      this.componentDidMount();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://i.makeagif.com/media/9-30-2017/bhAyTs.gif\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      })));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/jasonlihuang/Documents/cs373-airpollution/frontend/src/pages/pollutants/PollutantInstance.js"],"names":["React","Component","Jumbotron","Container","Card","Button","CardImg","CardTitle","CardText","CardHeader","CardDeck","CardColumns","CardSubtitle","CardBody","NavLink","UncontrolledCarousel","Form","FormGroup","Label","Input","FormText","Image","Col","Row","ListGroup","IllnessInstance","RelatedIllness","LocationInstance","RelatedLocations","fetch","require","ENDPOINT","RelatedPollutants","constructor","props","state","data","componentDidMount","pollutant_name","then","res","json","setState","render","backgroundColor","borderColor","cursor","chemical_name","chemspider_id","Pollutant","isloaded","related_illnesses","related_locations","key","match","params","color","inhalation_cancer_potency","inhalation_cancer_potency_units","inhalation_cancer_potency_source","inhalation_reference_concentration","inhalation_reference_concentration_units","inhalation_reference_concentration_source","national_ambient_air_quality_std","national_ambient_air_quality_std_units","national_ambient_air_quality_std_source","map","illness","illness_name","location","location_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader,\n         CardDeck, CardColumns, CardSubtitle, CardBody , NavLink, UncontrolledCarousel,\n         Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Image, Col, Row, ListGroup } from 'react-bootstrap';\nimport IllnessInstance,{RelatedIllness} from '../illnesses/IllnessInstance';\nimport LocationInstance,{RelatedLocations} from '../locations/LocationInstance';\nconst fetch = require(\"node-fetch\");\n\n\nconst ENDPOINT = 'https://api.howsmyair.me/pollutants';\n\nexport class RelatedPollutants extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {}\n    };\n  }\n\n  componentDidMount() {\n    // get location\n    fetch(ENDPOINT + '/' + this.props.pollutant_name)\n        .then(res => res.json())\n        .then(data => { this.setState({\n          data: data\n      })\n    })\n  };\n\n  render() {\n    return (\n      <div>\n      <Card body style={{ backgroundColor: '#00', borderColor: '#2255'}}>\n      <a style={{ cursor: 'pointer' }} href={\"/Pollutant/\" + this.state.data.chemical_name}>\n         <CardHeader>\n           <h5>{this.state.data.chemical_name}</h5>\n         </CardHeader>\n         <CardImg src={this.state.data.chemspider_id} />\n      </a>\n      </Card>\n      </div>\n    );\n  }\n}\n\nexport class Pollutant extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        data: {},\n        isloaded : false,\n        related_illnesses: [],\n        related_locations: []\n      };\n    }\n\n   componentDidMount() {\n      const {key} = this.props.match.params;\n      // get location\n      fetch(ENDPOINT + '/' + key)\n         .then(res => res.json())\n         .then(data => { this.setState({\n            data: data,\n            isloaded : true,\n            related_illnesses : data.related_illnesses,\n            related_locations : data.related_locations\n         })\n      })\n    };\n\n   render() {\n    if (this.state.isloaded) {\n      return (\n        <div>\n          <Jumbotron>\n            <Container>\n            <h1 style={{color: '#1976d2'}}>{this.state.data.chemical_name}</h1>\n            <br/>\n            <Row>\n              <Col>\n              <ListGroup variant=\"flush\" >\n                <ListGroup.Item  style={{color: '#1976d2'}}>\n                  Cancer Potency:\n                  {this.state.data.inhalation_cancer_potency} {this.state.data.inhalation_cancer_potency_units}\n                  <br/><i>Source: {this.state.data.inhalation_cancer_potency_source}</i>\n                </ListGroup.Item>\n                <ListGroup.Item style={{color: '#1976d2'}}>\n                  Reference Concentration:\n                  {this.state.data.inhalation_reference_concentration} {this.state.data.inhalation_reference_concentration_units}\n                  <br/><i>Source: {this.state.data.inhalation_reference_concentration_source}</i>\n                </ListGroup.Item>\n                <ListGroup.Item style={{color: '#1976d2'}}>\n                  National Ambient Air Quality:\n                  {this.state.data.national_ambient_air_quality_std} {this.state.data.national_ambient_air_quality_std_units}\n                  <br/><i>Source: {this.state.data.national_ambient_air_quality_std_source}</i>\n                </ListGroup.Item>\n              </ListGroup>\n              </Col>\n              <Col>\n                <Card>\n                  <Row className=\"justify-content-md-center\" className=\"spacing\">\n                    <img width=\"50%\" src={this.state.data.chemspider_id} alt=\"Italian Trulli\"/>\n                  </Row>\n                </Card>\n              </Col>\n            </Row>\n            </Container>\n          </Jumbotron>\n          <Container>\n            <Row>\n              <Col>\n                <h1 style={{color: '#1976d2'}}>Related Illnesses</h1><br/>\n                <Row className=\"justify-content-md-center\" className=\"spacing\">\n                  {this.state.related_illnesses.map((illness) => (\n                     <div class=\"col-sm-3\">\n                        <RelatedIllness illness_name={illness.illness_name} />\n                        <p/>\n                     </div>\n                  ))}\n                </Row>\n              </Col>\n            </Row>\n          </Container>\n          <Container>\n            <Row>\n              <Col>\n                <h1 style={{color: '#1976d2'}}>Related Locations</h1><br/>\n                <Row className=\"justify-content-md-center\" className=\"spacing\">\n                  {this.state.related_locations.map((location) => (\n                     <div class=\"col-sm-3\">\n                        <RelatedLocations location_id={location.location_id} />\n                        <p/>\n                     </div>\n                  ))}\n                </Row>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      );\n    } else {\n      this.componentDidMount();\n      return(\n        <div>\n         <center><img src = \"https://i.makeagif.com/media/9-30-2017/bhAyTs.gif\"/></center>\n        </div>\n      )\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}