{"ast":null,"code":"var _jsxFileName = \"/Users/jasonlihuang/Documents/cs373-airpollution/frontend/src/visualizations/StateMap.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport uStates from './uStates';\nimport './StatesMap.css';\n\nclass StateMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: null,\n      isLoaded: false,\n      illnessStateDict: props.parkData,\n      pollutantStateDict: props.orgData,\n      first: props.first,\n      second: props.second\n    };\n    this.drawChart = this.drawChart.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoaded: true\n    });\n  }\n\n  drawChart() {\n    const _this$state = this.state,\n          illnessStateDict = _this$state.illnessStateDict,\n          pollutantStateDict = _this$state.pollutantStateDict,\n          first = _this$state.first,\n          second = _this$state.second;\n\n    function tooltipHtml(n, d) {\n      /* function to create html content string in tooltip div. */\n      return \"<h4>\" + n + \"</h4><table>\" + \"<tr><td>\" + first + \"</td><td>\" + d.parks + \"</td></tr>\" + \"<tr><td>\" + second + \"</td><td>\" + d.orgs + \"</td></tr>\" + \"</table>\";\n    }\n\n    var sampleData = {};\n    [\"HI\", \"AK\", \"FL\", \"SC\", \"GA\", \"AL\", \"NC\", \"TN\", \"RI\", \"CT\", \"MA\", \"ME\", \"NH\", \"VT\", \"NY\", \"NJ\", \"PA\", \"DE\", \"MD\", \"WV\", \"KY\", \"OH\", \"MI\", \"WY\", \"MT\", \"ID\", \"WA\", \"DC\", \"TX\", \"CA\", \"AZ\", \"NV\", \"UT\", \"CO\", \"NM\", \"OR\", \"ND\", \"SD\", \"NE\", \"IA\", \"MS\", \"IN\", \"IL\", \"MN\", \"WI\", \"MO\", \"AR\", \"OK\", \"KS\", \"LA\", \"VA\"].forEach(function (d) {\n      var ill = illnessStateDict[d];\n      var poll = pollutantStateDict[d];\n      sampleData[d] = {\n        parks: p,\n        orgs: o,\n        color: d3.interpolate(\"#c7eaab\", \"#164406\")((p + o) / 5)\n      };\n    });\n    /* draw states on id #statesvg */\n\n    uStates.draw(\"#statesvg\", sampleData, tooltipHtml);\n    d3.select(window.frameElement).style(\"height\", \"600px\");\n  }\n\n  render() {\n    if (this.state.isLoaded) {\n      this.drawChart();\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"tooltip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"svg\", {\n      width: \"960\",\n      height: \"600\",\n      id: \"statesvg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default StateMap;","map":{"version":3,"sources":["/Users/jasonlihuang/Documents/cs373-airpollution/frontend/src/visualizations/StateMap.js"],"names":["React","Component","d3","uStates","StateMap","constructor","props","state","status","isLoaded","illnessStateDict","parkData","pollutantStateDict","orgData","first","second","drawChart","bind","componentDidMount","setState","tooltipHtml","n","d","parks","orgs","sampleData","forEach","ill","poll","p","o","color","interpolate","draw","select","window","frameElement","style","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport * as d3 from \"d3\";\nimport uStates from './uStates';\nimport './StatesMap.css';\n\n\nclass StateMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: null,\n      isLoaded: false,\n      illnessStateDict: props.parkData,\n      pollutantStateDict: props.orgData,\n      first: props.first,\n      second: props.second,\n    };\n    this.drawChart = this.drawChart.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n        isLoaded: true,\n      });\n  }\n\n  drawChart() {\n    const { illnessStateDict, pollutantStateDict, first, second } = this.state;\n    function tooltipHtml(n, d){ /* function to create html content string in tooltip div. */\n      return \"<h4>\"+n+\"</h4><table>\"+\n        \"<tr><td>\" + (first) + \"</td><td>\"+(d.parks)+\"</td></tr>\"+\n        \"<tr><td>\" + (second) + \"</td><td>\"+(d.orgs)+\"</td></tr>\"+\n        \"</table>\";\n    }\n    var sampleData ={};\n    [\"HI\", \"AK\", \"FL\", \"SC\", \"GA\", \"AL\", \"NC\", \"TN\", \"RI\", \"CT\", \"MA\",\n    \"ME\", \"NH\", \"VT\", \"NY\", \"NJ\", \"PA\", \"DE\", \"MD\", \"WV\", \"KY\", \"OH\",\n    \"MI\", \"WY\", \"MT\", \"ID\", \"WA\", \"DC\", \"TX\", \"CA\", \"AZ\", \"NV\", \"UT\",\n    \"CO\", \"NM\", \"OR\", \"ND\", \"SD\", \"NE\", \"IA\", \"MS\", \"IN\", \"IL\", \"MN\",\n    \"WI\", \"MO\", \"AR\", \"OK\", \"KS\", \"LA\", \"VA\"]\n      .forEach(function(d){\n        var ill = illnessStateDict[d];\n        var poll = pollutantStateDict[d];\n\n        sampleData[d]={parks: p, orgs: o,\n                       color:d3.interpolate(\"#c7eaab\", \"#164406\")((p+o)/5)};\n      });\n\n    /* draw states on id #statesvg */\n    uStates.draw(\"#statesvg\", sampleData, tooltipHtml);\n\n    d3.select(window.frameElement).style(\"height\", \"600px\");\n  }\n\n  render() {\n    if(this.state.isLoaded){\n      this.drawChart();\n    }\n    return (\n      <div className=\"container\">\n        <div id=\"tooltip\"></div>\n        <svg width=\"960\" height=\"600\" id=\"statesvg\"></svg>\n      </div>\n    );\n\n  }\n}\n\nexport default StateMap;\n"]},"metadata":{},"sourceType":"module"}