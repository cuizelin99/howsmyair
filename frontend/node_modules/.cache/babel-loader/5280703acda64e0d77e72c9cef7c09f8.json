{"ast":null,"code":"var _jsxFileName = \"/Users/jasonlihuang/Documents/cs373-airpollution/frontend/src/pages/locations/LocationItems.js\";\nimport React, { Component } from 'react';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader, CardDeck, CardColumns, CardSubtitle, CardBody, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Col, Row, Pagination, DropdownButton, Dropdown, Table } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Highlighter from 'react-highlight-words';\n\nconst fetch = require(\"node-fetch\");\n\nexport const Locationcards = props => {\n  if (props != null && props.locations != null) {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      className: \"spacing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, props.locations.map(location => React.createElement(Col, {\n      className: \"spacing\",\n      lg: \"4\",\n      sm: \"6\",\n      xs: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(Card, {\n      body: true,\n      style: {\n        backgroundColor: '#00',\n        borderColor: '#2255',\n        boxShadow: \"0px 5px 0px #4060A8\",\n        minHeight: '38rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        cursor: 'pointer'\n      },\n      href: \"/Location/\" + location.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(CardImg, {\n      src: \"https://maps.googleapis.com/maps/api/staticmap?center=\" + location.latitude + \",\" + location.longitude + \"&zoom=12&size=400x400\" + \"&markers=color:green%7Clabel:G%7C\" + location.latitude + \",\" + location.longitude + \"&key=AIzaSyB-U0Z7cqufI-MHmRwfLmgqDCyQmOlIq48\",\n      alt: \"Italian Trulli\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, location.city), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, location.state_name)), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"County: \", location.county_name, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), \"Latitude: \", location.latitude, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), \"Longitude: \", location.longitude, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), \"Population: \", location.population, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), \"Density (per sq. mile): \", location.density, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), \"Time Zone: \", location.timezone)))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })))));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"shit ain't loading\");\n  }\n};\nexport const LocationTable = props => {\n  if (props.locations != null && props.locations != null && typeof props.searchstring != \"undefined\") {\n    return React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"City\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"County\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"State\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Time Zone\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Latitude\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Longitude\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Population\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Density per sq. mile\")), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, props.locations.map(location => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Location/\" + location.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Highlighter, {\n      highlightStyle: {\n        backgroundColor: 'lightblue'\n      },\n      searchWords: [props.searchstring],\n      autoEscape: true,\n      textToHighlight: location.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, location.county_name)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, location.state_name)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, location.timezone)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, location.latitude)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, location.longitude)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, location.population)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, location.density))))));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"shit ain't loading\");\n  }\n};","map":{"version":3,"sources":["/Users/jasonlihuang/Documents/cs373-airpollution/frontend/src/pages/locations/LocationItems.js"],"names":["React","Component","Jumbotron","Container","Card","Button","CardImg","CardTitle","CardText","CardHeader","CardDeck","CardColumns","CardSubtitle","CardBody","Form","FormGroup","Label","Input","FormText","Col","Row","Pagination","DropdownButton","Dropdown","Table","Link","Highlighter","fetch","require","Locationcards","props","locations","map","location","backgroundColor","borderColor","boxShadow","minHeight","cursor","id","latitude","longitude","city","state_name","county_name","population","density","timezone","LocationTable","searchstring"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText,\n        CardHeader,  CardDeck, CardColumns, CardSubtitle, CardBody,\n        Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport {Col, Row, Pagination, DropdownButton, Dropdown, Table} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Highlighter from 'react-highlight-words';\nconst fetch = require(\"node-fetch\");\n\nexport const Locationcards = ( props ) => {\n  if(props != null && props.locations != null){\n    return(\n      <Container>\n        <Row className=\"justify-content-md-center\" className=\"spacing\">\n        {props.locations.map((location) => (\n          <Col className=\"spacing\" lg=\"4\" sm=\"6\" xs=\"12\">\n          <Card body style={{ backgroundColor: '#00', borderColor: '#2255', boxShadow: \"0px 5px 0px #4060A8\", minHeight: '38rem' }}>\n          <a style={{ cursor: 'pointer' }} href={\"/Location/\" + location.id}>\n          <CardImg src={\n             \"https://maps.googleapis.com/maps/api/staticmap?center=\"+\n                             location.latitude+\",\"+location.longitude+\n                             \"&zoom=12&size=400x400\"+\n                             \"&markers=color:green%7Clabel:G%7C\"+\n                             location.latitude+\",\"+location.longitude +\n                             \"&key=AIzaSyB-U0Z7cqufI-MHmRwfLmgqDCyQmOlIq48\"}\n\n                             alt=\"Italian Trulli\" />\n            <CardHeader>\n              {/* The dynamic link is arranged this way through the NavBar.js\n              and back to the Location component*/}\n              <h5>{location.city}</h5>\n              <h6 >{location.state_name}</h6>\n            </CardHeader>\n            <CardBody>\n            <CardText>\n              County: {location.county_name}\n              <br/>Latitude: {location.latitude}\n              <br/>Longitude: {location.longitude}\n              <br/>Population: {location.population}\n              <br/>Density (per sq. mile): {location.density}\n              <br/>Time Zone: {location.timezone}\n            </CardText>\n            </CardBody>\n         </a>\n         </Card>\n          <p />\n          </Col>\n        ))}\n        </Row>\n      </Container>\n    )\n  } else {\n    return(<div>shit ain't loading</div>);\n  }\n};\n\nexport const LocationTable = (props) => {\n  if(props.locations != null && props.locations != null && typeof props.searchstring != \"undefined\"){\n    return (\n      <Table striped bordered hover responsive >\n        <th><center>City</center></th>\n        <th><center>County</center></th>\n        <th><center>State</center></th>\n        <th><center>Time Zone</center></th>\n        <th><center>Latitude</center></th>\n        <th><center>Longitude</center></th>\n        <th><center>Population</center></th>\n        <th><center>Density per sq. mile</center></th>\n        <tbody>\n        {props.locations.map((location) => (\n          <tr>\n          <td><center>\n              <Link to={\"/Location/\" + location.id}>\n                  <Highlighter\n                    highlightStyle={{backgroundColor: 'lightblue'}}\n                    searchWords={[props.searchstring]}\n                    autoEscape={true}\n                    textToHighlight= {location.city}\n                  />\n              </Link>\n            </center>\n          </td>\n          <td><center>{location.county_name}</center></td>\n          <td><center>{location.state_name}</center></td>\n          <td><center>{location.timezone}</center></td>\n          <td><center>{location.latitude}</center></td>\n          <td><center>{location.longitude}</center></td>\n          <td><center>{location.population}</center></td>\n          <td><center>{location.density}</center></td>\n          </tr>\n        ))}\n        </tbody>\n      </Table>\n    );\n  } else {\n    return(<div>shit ain't loading</div>);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}