{"ast":null,"code":"var _jsxFileName = \"/home/jasonsim/School/cs373-airpollution/frontend/src/pages/illnesses/IllnessInstance.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader, CardDeck, CardColumns, CardSubtitle, CardBody, NavLink, UncontrolledCarousel, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Image, Col, Row, Pagination } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Link, Switch, BrowserHistory } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { createUltimatePagination, ITEM_TYPES } from 'react-ultimate-pagination';\nimport ReactDOM from 'react-dom';\nconst ENDPOINT = 'https://api.howsmyair.me/illness';\n\nclass IllnessInstance extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      related_locations: [],\n      related_pollutants: []\n    };\n  }\n\n  componentDidMount() {\n    // get illness\n    fetch(ENDPOINT + '/' + this.props.illness_name).then(res => res.json()).then(data => {\n      this.setState({\n        data: data,\n        related_locations: data.related_locations,\n        related_pollutants: data.related_pollutants\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Card, {\n      body: true,\n      style: {\n        backgroundColor: '#00',\n        borderColor: '#2255'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(CardImg, {\n      src: this.state.data.illness_image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Illness/\" + this.state.data.illness_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.state.data.illness_name)), React.createElement(\"h6\", {\n      class: \"card-subtitle mb-2 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.state.data.illness_desc)), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Lethality: \", this.state.data.illness_lethality, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), \"Symptoms: \", this.state.data.illness_symptoms, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), \"Contagious: \", this.state.data.illness_contagious, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), \"Treatable: \", this.state.data.illness_treatable)))));\n  }\n\n}\n\nexport default IllnessInstance;","map":{"version":3,"sources":["/home/jasonsim/School/cs373-airpollution/frontend/src/pages/illnesses/IllnessInstance.js"],"names":["React","Component","Jumbotron","Container","Card","Button","CardImg","CardTitle","CardText","CardHeader","CardDeck","CardColumns","CardSubtitle","CardBody","NavLink","UncontrolledCarousel","Form","FormGroup","Label","Input","FormText","Image","Col","Row","Pagination","BrowserRouter","Router","Route","Link","Switch","BrowserHistory","createBrowserHistory","createUltimatePagination","ITEM_TYPES","ReactDOM","ENDPOINT","IllnessInstance","constructor","props","state","data","related_locations","related_pollutants","componentDidMount","fetch","illness_name","then","res","json","setState","render","backgroundColor","borderColor","illness_image","illness_desc","illness_lethality","illness_symptoms","illness_contagious","illness_treatable"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader,\n         CardDeck, CardColumns, CardSubtitle, CardBody , NavLink, UncontrolledCarousel,\n         Form,FormGroup, Label, Input, FormText} from 'reactstrap';\nimport { Image, Col, Row, Pagination} from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Link , Switch,BrowserHistory } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { createUltimatePagination, ITEM_TYPES } from 'react-ultimate-pagination';\nimport ReactDOM from 'react-dom';\n\n\nconst ENDPOINT = 'https://api.howsmyair.me/illness';\n\nclass IllnessInstance extends Component {\n\n   constructor(props) {\n     super(props);\n     this.state = {\n      data: {},\n      related_locations: [],\n      related_pollutants: []\n     };\n  }\n\n  componentDidMount() {\n     // get illness\n     fetch(ENDPOINT + '/' + this.props.illness_name)\n        .then(res => res.json())\n        .then(data => { this.setState({\n           data: data,\n           related_locations : data.related_locations,\n           related_pollutants : data.related_pollutants\n        })\n     })\n   };\n  render() {\n     return (\n      <div>\n      <Card body style={{ backgroundColor: '#00', borderColor: '#2255' }}>\n         <CardImg src={this.state.data.illness_image} />\n        <CardHeader>\n          {/* The dynamic link is arranged this way through the NavBar.js\n          and back to the Location component*/}\n          <h5><Link to={\"/Illness/\" + this.state.data.illness_name}>{this.state.data.illness_name}</Link></h5>\n          <h6 class=\"card-subtitle mb-2 text-muted\">{this.state.data.illness_desc}</h6>\n        </CardHeader>\n        <CardBody>\n        <CardText>\n          <p>Lethality: {this.state.data.illness_lethality}\n          <br/>Symptoms: {this.state.data.illness_symptoms}\n          <br/>Contagious: {this.state.data.illness_contagious}\n          <br/>Treatable: {this.state.data.illness_treatable}\n          </p>\n        </CardText>\n        </CardBody>\n     </Card>\n      </div>\n     );\n  }\n}\n\nexport default IllnessInstance;\n"]},"metadata":{},"sourceType":"module"}