{"ast":null,"code":"var _jsxFileName = \"/home/jasonsim/School/cs373-airpollution/frontend/src/pages/Search.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader, CardDeck, CardColumns, CardSubtitle, CardBody, NavLink, UncontrolledCarousel, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Image, Col, Row, Pagination, Nav, Tabs, Tab, DropdownButton, Dropdown, ButtonToolbar, Table } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Link, Switch, BrowserHistory } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { createUltimatePagination, ITEM_TYPES } from 'react-ultimate-pagination';\nimport ReactDOM from 'react-dom';\nimport Highlighter from 'react-highlight-words';\n/*\nhttps://stackoverflow.com/questions/35976167/find-unique-values-from-an-array-in-react-js\n*/\n\nexport class Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchstring: null\n    };\n  }\n\n  componentDidMount() {\n    const key = this.props.match.params;\n  }\n\n  render() {\n    const key = this.props.match.params.key;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      justify: \"center\",\n      style: {\n        color: \"blue\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Tab.Content, {\n      eventKey: \"location\",\n      title: \"Location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(LocationResults, {\n      fieldname: \"city\",\n      searchstring: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"illness\",\n      title: \"Illness\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(IllnessResults, {\n      fieldname: \"illness_desc\",\n      searchstring: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"pollutants\",\n      title: \"Pollutants\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(PollutantResults, {\n      fieldname: \"chemical_name\",\n      searchstring: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst buildOrder = (fieldname, direction) => {\n  return \"{%22field%22:%22\".concat(fieldname, \"%22,%22direction%22:%22\").concat(direction, \"%22}\");\n};\n\nconst buildFilter = (fieldname, operator, value) => {\n  return \"{%22name%22:%22\".concat(fieldname, \"%22,%22op%22:%22\").concat(operator, \"%22,%22val%22:%22\").concat(value, \"%22}\");\n};\n\nconst buildQuery = (model, page, filterObjs, orderObjs) => {\n  return \"https://api.howsmyair.me/\".concat(model, \"?page=\").concat(page, \"&q={%22filters%22:[\").concat(filterObjs, \"],%22order_by%22:[\").concat(orderObjs, \"]}\");\n};\n\nexport class LocationResults extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      num_results: null,\n      objects: [],\n      page: null,\n      total_pages: null,\n      states: [],\n      time_zones: [],\n      current_state: \"None\",\n      current_timezone: \"None\",\n      current_population: \"None\",\n      current_density: \"None\",\n      sort_by: \"city\",\n      display_sort: \"City\",\n      order: \"asc\",\n      display_order: \"Ascending\",\n      curent_page: 0,\n      isloaded: false\n    };\n    this.getUniqueStates = this.getUniqueStates.bind(this);\n    this.getTimeZones = this.getTimeZones.bind(this);\n    this.getLocationQuery = this.getLocationQuery.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.getLocationQuery());\n    fetch(this.getLocationQuery()).then(res => res.json()).then(data => {\n      this.setState({\n        data: data,\n        num_results: data.num_results,\n        objects: data.objects,\n        curent_page: data.page - 1,\n        page: data.page - 1,\n        total_pages: data.total_pages,\n        isloaded: true,\n        states: this.getUniqueStates(data.objects),\n        time_zones: this.getTimeZones(data.objects)\n      });\n    });\n  }\n\n  getLocationQuery() {\n    let filterObjs = buildFilter(\"city\", \"like\", \"%25\".concat(this.props.searchstring, \"%25\"));\n    let orderObjs = buildOrder(\"city\", \"asc\");\n\n    if (this.state.current_state != \"None\") {\n      filterObjs += \",\" + buildFilter(\"state_name\", \"eq\", this.state.current_state);\n    }\n\n    if (this.state.current_timezone != \"None\") {\n      filterObjs += \",\" + buildFilter(\"timezone\", \"eq\", this.state.current_timezone);\n    }\n\n    switch (this.state.current_population) {\n      case \"Small\":\n        filterObjs += \",\" + buildFilter(\"population\", \"le\", 500000);\n        break;\n\n      case \"Medium\":\n        filterObjs += \",\" + buildFilter(\"population\", \"ge\", 500000);\n        filterObjs += \",\" + buildFilter(\"population\", \"lt\", 1000000);\n        break;\n\n      case \"Large\":\n        filterObjs += \",\" + buildFilter(\"population\", \"ge\", 1000000);\n\n      default:\n        break;\n    }\n\n    switch (this.state.current_density) {\n      case \"Sparse\":\n        filterObjs += \",\" + buildFilter(\"density\", \"le\", 1000);\n        break;\n\n      case \"Medium\":\n        filterObjs += \",\" + buildFilter(\"density\", \"ge\", 1000);\n        filterObjs += \",\" + buildFilter(\"density\", \"lt\", 2000);\n        break;\n\n      case \"Dense\":\n        filterObjs += \",\" + buildFilter(\"density\", \"ge\", 2000);\n\n      default:\n        break;\n    }\n\n    orderObjs = buildOrder(this.state.sort_by, this.state.order);\n    return buildQuery(\"location\", this.state.curent_page + 1, filterObjs, orderObjs);\n  }\n\n  getUniqueStates(objArray) {\n    const uniqueVals = [];\n    objArray.map(obj => {\n      if (uniqueVals.indexOf(obj.state_name) === -1) {\n        uniqueVals.push(obj.state_name);\n      }\n\n      ;\n    });\n    return uniqueVals;\n  }\n\n  getTimeZones(objArray) {\n    const uniqueVals = [];\n    objArray.map(obj => {\n      if (uniqueVals.indexOf(obj.timezone) === -1) {\n        uniqueVals.push(obj.timezone);\n      }\n\n      ;\n    });\n    return uniqueVals;\n  }\n\n  render() {\n    if (this.state.isloaded) {\n      console.log(this.state.curent_page);\n      console.log(this.state.page);\n      console.log(this.state.total_pages);\n      console.log(this.state.num_results);\n      let span = 2;\n      let page = this.state.page;\n      let end = this.state.total_pages - 1;\n      let l = page - span / 2;\n      let r = page + span / 2;\n      let inbetween = [];\n\n      if (this.state.total_pages < span + 1) {\n        for (let p = 0; p < this.state.total_pages; p++) {\n          inbetween.push(React.createElement(Pagination.Item, {\n            active: p === page,\n            onClick: e => this.setState({\n              curent_page: p,\n              isloaded: false\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          }, p + 1));\n        }\n      } else if (page - span < 0) {\n        for (let p = 0; p <= span; p++) {\n          inbetween.push(React.createElement(Pagination.Item, {\n            active: p === page,\n            onClick: e => this.setState({\n              curent_page: p,\n              isloaded: false\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203\n            },\n            __self: this\n          }, p + 1));\n        }\n      } else if (page + span > end) {\n        for (let p = end - span; p <= end; p++) {\n          inbetween.push(React.createElement(Pagination.Item, {\n            active: p === page,\n            onClick: e => this.setState({\n              curent_page: p,\n              isloaded: false\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214\n            },\n            __self: this\n          }, p + 1));\n        }\n      } else {\n        for (let p = l < 0 ? 0 : l; p <= r && p <= end; p++) {\n          inbetween.push(React.createElement(Pagination.Item, {\n            active: p === page,\n            onClick: e => this.setState({\n              curent_page: p,\n              isloaded: false\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 225\n            },\n            __self: this\n          }, p + 1));\n        }\n      }\n\n      let page_results = \"\";\n\n      if (this.state.total_pages != 0) {\n        page_results = \"Page \" + (this.state.curent_page + 1) + \"/\" + this.state.total_pages;\n      } else {\n        page_results = \"No Search Results Found\";\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }), React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"Location Search Results for \\\"\", this.props.searchstring, \"\\\"\")), React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Filters\")), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"States\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_state: \"None\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"None\"), this.state.states.map(st => React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_state: st,\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, st))), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, this.state.current_state))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Time Zone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_timezone: \"None\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"None\"), this.state.time_zones.map(tz => React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_timezone: tz,\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, tz))), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, this.state.current_timezone))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Population\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_population: \"None\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"None\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_population: \"Small\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, \"Small\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_population: \"Medium\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"Medium\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_population: \"Large\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \"Large\")), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, this.state.current_population)))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Density\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_density: \"None\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, \"None\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_density: \"Sparse\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, \"Sparse\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_density: \"Medium\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, \"Medium\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_density: \"Dense\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, \"Dense\")), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, this.state.current_density)))), React.createElement(\"h3\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \"Sort By\")), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: this.state.display_sort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"city\",\n            display_sort: \"City\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, \"City\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"county_name\",\n            display_sort: \"County\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, \"County\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"state_name\",\n            display_sort: \"State\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, \"State\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"timezone\",\n            display_sort: \"Time Zone\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, \"Time Zone\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"latitude\",\n            display_sort: \"Latitude\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, \"Latitude\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"longitude\",\n            display_sort: \"Longitude\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, \"Longitude\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"population\",\n            display_sort: \"Population\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, \"Population\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"density\",\n            display_sort: \"Density\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, \"Density\"))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: this.state.display_order,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            order: \"asc\",\n            display_order: \"Ascending\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, \"Ascending\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            order: \"desc\",\n            display_order: \"Descending\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, \"Descending\"))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, page_results)), React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, React.createElement(Pagination, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, React.createElement(Pagination.First, {\n        onClick: e => this.setState({\n          curent_page: 0,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }), React.createElement(Pagination.Prev, {\n        disabled: this.state.page <= 0,\n        onClick: e => this.setState({\n          curent_page: this.state.page - 1,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }), inbetween, React.createElement(Pagination.Next, {\n        disabled: this.state.page >= this.state.total_pages - 1,\n        onClick: e => this.setState({\n          curent_page: this.state.page + 1,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }), React.createElement(Pagination.Last, {\n        onClick: e => this.setState({\n          curent_page: this.state.total_pages - 1,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      })))), React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, \"City\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, \"County\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, \"State\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, \"Time Zone\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, \"Latitude\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, \"Longitude\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, \"Population\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, \"Density per sq. mile\")), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, this.state.objects.map(location => React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/Location/\" + location.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, React.createElement(Highlighter, {\n        highlightStyle: {\n          backgroundColor: 'lightblue'\n        },\n        searchWords: [this.props.searchstring],\n        autoEscape: true,\n        textToHighlight: location.city,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      })))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, location.county_name)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }, location.state_name)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, location.timezone)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, location.latitude)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, location.longitude)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }, location.population)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }, location.density)))))));\n    } else {\n      this.componentDidMount();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://i.makeagif.com/media/9-30-2017/bhAyTs.gif\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\nexport default createUltimatePagination({\n  WrapperComponent: Pagination,\n  itemTypeToComponent: {\n    [ITEM_TYPES.PAGE]: ({\n      value,\n      isActive,\n      onClick\n    }) => React.createElement(Pagination.Item, {\n      active: isActive,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, value),\n    [ITEM_TYPES.ELLIPSIS]: ({\n      isActive,\n      onClick\n    }) => React.createElement(Pagination.Ellipsis, {\n      disabled: isActive,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }),\n    [ITEM_TYPES.FIRST_PAGE_LINK]: ({\n      isActive,\n      onClick\n    }) => React.createElement(Pagination.First, {\n      disabled: isActive,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }),\n    [ITEM_TYPES.PREVIOUS_PAGE_LINK]: ({\n      isActive,\n      onClick\n    }) => React.createElement(Pagination.Prev, {\n      disabled: isActive,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }),\n    [ITEM_TYPES.NEXT_PAGE_LINK]: ({\n      isActive,\n      onClick\n    }) => React.createElement(Pagination.Next, {\n      disabled: isActive,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }),\n    [ITEM_TYPES.LAST_PAGE_LINK]: ({\n      isActive,\n      onClick\n    }) => React.createElement(Pagination.Last, {\n      disabled: isActive,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    })\n  }\n});\nexport class IllnessResults extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      num_results: null,\n      objects: [],\n      page: null,\n      total_pages: null,\n      states: [],\n      time_zones: [],\n      current_contagious: \"None\",\n      current_lethality: \"None\",\n      current_treatable: \"None\",\n      sort_by: \"illness_name\",\n      display_sort: \"Illness\",\n      order: \"asc\",\n      display_order: \"Ascending\",\n      curent_page: 0,\n      isloaded: false\n    };\n    this.getQuery = this.getQuery.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.getQuery());\n    console.log(this.props.searchstring);\n    fetch(this.getQuery()).then(res => res.json()).then(data => {\n      this.setState({\n        data: data,\n        num_results: data.num_results,\n        objects: data.objects,\n        curent_page: data.page - 1,\n        page: data.page - 1,\n        total_pages: data.total_pages,\n        isloaded: true\n      });\n    });\n  }\n\n  getQuery() {\n    let filterObjs = buildFilter(\"illness_desc\", \"like\", \"%25\".concat(this.props.searchstring, \"%25\"));\n    let orderObjs = buildOrder(\"illness_name\", \"asc\");\n\n    if (this.state.current_contagious != \"None\") {\n      filterObjs += \",\" + buildFilter(\"illness_contagious\", \"eq\", this.state.current_contagious);\n    }\n\n    if (this.state.current_lethality != \"None\") {\n      filterObjs += \",\" + buildFilter(\"illness_lethality\", \"eq\", this.state.current_lethality);\n    }\n\n    if (this.state.current_treatable != \"None\") {\n      filterObjs += \",\" + buildFilter(\"illness_treatable\", \"eq\", this.state.current_treatable);\n    }\n\n    orderObjs = buildOrder(this.state.sort_by, this.state.order);\n    return buildQuery(\"illness\", this.state.curent_page + 1, filterObjs, orderObjs);\n  }\n\n  render() {\n    if (this.state.isloaded) {\n      let span = 4;\n      let page = this.state.page;\n      let end = this.state.total_pages - 1;\n      let l = page - span / 2;\n      let r = page + span / 2;\n      let inbetween = [];\n\n      if (this.state.total_pages < span + 1) {\n        for (let p = 0; p < this.state.total_pages; p++) {\n          inbetween.push(React.createElement(Pagination.Item, {\n            active: p === page,\n            onClick: e => this.setState({\n              curent_page: p,\n              isloaded: false\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 559\n            },\n            __self: this\n          }, p + 1));\n        }\n      } else if (page - span < 0) {\n        for (let p = 0; p <= span; p++) {\n          inbetween.push(React.createElement(Pagination.Item, {\n            active: p === page,\n            onClick: e => this.setState({\n              curent_page: p,\n              isloaded: false\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 570\n            },\n            __self: this\n          }, p + 1));\n        }\n      } else if (page + span > end) {\n        for (let p = end - span; p <= end; p++) {\n          inbetween.push(React.createElement(Pagination.Item, {\n            active: p === page,\n            onClick: e => this.setState({\n              curent_page: p,\n              isloaded: false\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 581\n            },\n            __self: this\n          }, p + 1));\n        }\n      } else {\n        for (let p = l < 0 ? 0 : l; p <= r && p <= end; p++) {\n          inbetween.push(React.createElement(Pagination.Item, {\n            active: p === page,\n            onClick: e => this.setState({\n              curent_page: p,\n              isloaded: false\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 592\n            },\n            __self: this\n          }, p + 1));\n        }\n      }\n\n      let page_results = \"\";\n\n      if (this.state.total_pages != 0) {\n        page_results = \"Page \" + (this.state.curent_page + 1) + \"/\" + this.state.total_pages;\n      } else {\n        page_results = \"No Search Results Found\";\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609\n        },\n        __self: this\n      }), React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611\n        },\n        __self: this\n      }, \"Illness Search Results for \\\"\", this.props.searchstring, \"\\\"\")), React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616\n        },\n        __self: this\n      }, \"Filters\")), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Contagious\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_contagious: \"None\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621\n        },\n        __self: this\n      }, \"None\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_contagious: \"yes\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624\n        },\n        __self: this\n      }, \"Yes\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_contagious: \"no\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627\n        },\n        __self: this\n      }, \"No\")), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631\n        },\n        __self: this\n      }, this.state.current_contagious))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Treatable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_lethality: \"None\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 637\n        },\n        __self: this\n      }, \"None\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_lethality: \"lethal\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640\n        },\n        __self: this\n      }, \"Yes\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_lethality: \"non-lethal\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643\n        },\n        __self: this\n      }, \"No\")), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647\n        },\n        __self: this\n      }, this.state.current_contagious))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Treatable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_treatable: \"None\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653\n        },\n        __self: this\n      }, \"None\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_treatable: \"yes\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656\n        },\n        __self: this\n      }, \"Yes\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_treatable: \"no\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659\n        },\n        __self: this\n      }, \"No\")), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 663\n        },\n        __self: this\n      }, this.state.current_treatable))), React.createElement(\"h3\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 666\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 666\n        },\n        __self: this\n      }, \"Sort By\")), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: this.state.display_sort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 668\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"illness_name\",\n            display_sort: \"Illness\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669\n        },\n        __self: this\n      }, \"Illness\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"illness_lethality\",\n            display_sort: \"Lethality\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672\n        },\n        __self: this\n      }, \"Lethality\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"illness_contagious\",\n            display_sort: \"Contagious\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675\n        },\n        __self: this\n      }, \"Contagious\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"illness_treatable\",\n            display_sort: \"Treatable\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678\n        },\n        __self: this\n      }, \"Treatable\"))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 683\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: this.state.display_order,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 684\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            order: \"asc\",\n            display_order: \"Ascending\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685\n        },\n        __self: this\n      }, \"Ascending\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            order: \"desc\",\n            display_order: \"Descending\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 688\n        },\n        __self: this\n      }, \"Descending\"))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 696\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 697\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 698\n        },\n        __self: this\n      }, page_results)), React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702\n        },\n        __self: this\n      }, React.createElement(Pagination, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 703\n        },\n        __self: this\n      }, React.createElement(Pagination.First, {\n        onClick: e => this.setState({\n          curent_page: 0,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 705\n        },\n        __self: this\n      }), React.createElement(Pagination.Prev, {\n        disabled: this.state.page <= 0,\n        onClick: e => this.setState({\n          curent_page: this.state.page - 1,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710\n        },\n        __self: this\n      }), inbetween, React.createElement(Pagination.Next, {\n        disabled: this.state.page >= this.state.total_pages - 1,\n        onClick: e => this.setState({\n          curent_page: this.state.page + 1,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 719\n        },\n        __self: this\n      }), React.createElement(Pagination.Last, {\n        onClick: e => this.setState({\n          curent_page: this.state.total_pages - 1,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725\n        },\n        __self: this\n      })))), React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 733\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 733\n        },\n        __self: this\n      }, \"Illness\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734\n        },\n        __self: this\n      }, \"Illness Description\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735\n        },\n        __self: this\n      }, \"Lethality\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 736\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 736\n        },\n        __self: this\n      }, \"Symptoms\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737\n        },\n        __self: this\n      }, \"Contagious\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738\n        },\n        __self: this\n      }, \"Treatable\")), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 739\n        },\n        __self: this\n      }, this.state.objects.map(illness => React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 741\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742\n        },\n        __self: this\n      }, illness.illness_name)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/Illness/\" + illness.illness_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 744\n        },\n        __self: this\n      }, React.createElement(Highlighter, {\n        highlightStyle: {\n          backgroundColor: 'lightblue'\n        },\n        searchWords: [this.props.searchstring],\n        autoEscape: true,\n        textToHighlight: illness.illness_desc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745\n        },\n        __self: this\n      })))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 754\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 754\n        },\n        __self: this\n      }, illness.illness_lethality)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755\n        },\n        __self: this\n      }, illness.illness_symptoms)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 756\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 756\n        },\n        __self: this\n      }, illness.illness_contagious)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 757\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 757\n        },\n        __self: this\n      }, illness.illness_treatable)))))));\n    } else {\n      this.componentDidMount();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 767\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 768\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://i.makeagif.com/media/9-30-2017/bhAyTs.gif\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 768\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\nexport class PollutantResults extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      num_results: null,\n      objects: [],\n      page: null,\n      total_pages: null,\n      states: [],\n      time_zones: [],\n      inhalation_cancer_potency: \"None\",\n      inhalation_cancer_potency_source: \"None\",\n      inhalation_cancer_potency_units: \"None\",\n      inhalation_reference_concentration: \"None\",\n      inhalation_reference_concentration_source: \"None\",\n      inhalation_reference_concentration_units: \"None\",\n      national_ambient_air_quality_std: \"None\",\n      national_ambient_air_quality_std_source: \"None\",\n      national_ambient_air_quality_std_units: \"None\",\n      cancer_potency_sources: [],\n      cancer_potency_units: [],\n      reference_concentration_source: [],\n      reference_concentration_units: [],\n      ambient_air_quality_std_source: [],\n      ambient_air_quality_std_units: [],\n      sort_by: \"chemical_name\",\n      display_sort: \"Chemical Name\",\n      order: \"asc\",\n      display_order: \"Ascending\",\n      curent_page: 0,\n      isloaded: false\n    };\n    this.getQuery = this.getQuery.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    let x = this.curent_page;\n    console.log(this.getQuery());\n    fetch(this.getQuery()).then(res => res.json()).then(data => {\n      this.setState({\n        data: data,\n        num_results: data.num_results,\n        objects: data.objects,\n        curent_page: data.page - 1,\n        page: data.page - 1,\n        total_pages: data.total_pages,\n        cancer_potency_sources: this.getcancer_potency_source(data.objects),\n        cancer_potency_units: this.getcancer_potency_units(data.objects),\n        reference_concentration_source: this.getreference_concentration_source(data.objects),\n        reference_concentration_units: this.getreference_concentration_units(data.objects),\n        ambient_air_quality_std_source: this.getair_quality_std_source(data.objects),\n        ambient_air_quality_std_units: this.getair_quality_std_units(data.objects),\n        isloaded: true\n      });\n    });\n    console.log(x);\n  }\n\n  getcancer_potency_source(objArray) {\n    const uniqueVals = [];\n    objArray.map(obj => {\n      if (uniqueVals.indexOf(obj.inhalation_cancer_potency_source) === -1) {\n        uniqueVals.push(obj.inhalation_cancer_potency_source);\n      }\n\n      ;\n    });\n    return uniqueVals;\n  }\n\n  getcancer_potency_units(objArray) {\n    const uniqueVals = [];\n    objArray.map(obj => {\n      if (uniqueVals.indexOf(obj.inhalation_cancer_potency_units) === -1) {\n        uniqueVals.push(obj.inhalation_cancer_potency_units);\n      }\n\n      ;\n    });\n    return uniqueVals;\n  }\n\n  getreference_concentration_source(objArray) {\n    const uniqueVals = [];\n    objArray.map(obj => {\n      if (uniqueVals.indexOf(obj.inhalation_reference_concentration_source) === -1) {\n        uniqueVals.push(obj.inhalation_reference_concentration_source);\n      }\n\n      ;\n    });\n    return uniqueVals;\n  }\n\n  getreference_concentration_units(objArray) {\n    const uniqueVals = [];\n    objArray.map(obj => {\n      if (uniqueVals.indexOf(obj.inhalation_reference_concentration_units) === -1) {\n        uniqueVals.push(obj.inhalation_reference_concentration_units);\n      }\n\n      ;\n    });\n    return uniqueVals;\n  }\n\n  getair_quality_std_source(objArray) {\n    const uniqueVals = [];\n    objArray.map(obj => {\n      if (uniqueVals.indexOf(obj.national_ambient_air_quality_std_source) === -1) {\n        uniqueVals.push(obj.national_ambient_air_quality_std_source);\n      }\n\n      ;\n    });\n    return uniqueVals;\n  }\n\n  getair_quality_std_units(objArray) {\n    const uniqueVals = [];\n    objArray.map(obj => {\n      if (uniqueVals.indexOf(obj.national_ambient_air_quality_std_units) === -1) {\n        uniqueVals.push(obj.national_ambient_air_quality_std_units);\n      }\n\n      ;\n    });\n    return uniqueVals;\n  }\n\n  getQuery() {\n    let filterObjs = buildFilter(\"chemical_name\", \"like\", \"%25\".concat(this.props.searchstring.toUpperCase(), \"%25\"));\n    let orderObjs = buildOrder(\"chemical_name\", \"asc\");\n\n    if (this.state.inhalation_cancer_potency_source != \"None\") {\n      filterObjs += \",\" + buildFilter(\"inhalation_cancer_potency_source\", \"eq\", this.state.inhalation_cancer_potency_source);\n    }\n\n    if (this.state.inhalation_cancer_potency_units != \"None\") {\n      filterObjs += \",\" + buildFilter(\"inhalation_cancer_potency_units\", \"eq\", this.state.inhalation_cancer_potency_units);\n    }\n\n    if (this.state.inhalation_reference_concentration_source != \"None\") {\n      filterObjs += \",\" + buildFilter(\"inhalation_reference_concentration_source\", \"eq\", this.state.inhalation_reference_concentration_source);\n    }\n\n    if (this.state.inhalation_reference_concentration_units != \"None\") {\n      filterObjs += \",\" + buildFilter(\"inhalation_reference_concentration_units\", \"eq\", this.state.inhalation_reference_concentration_units);\n    }\n\n    if (this.state.national_ambient_air_quality_std_source != \"None\") {\n      filterObjs += \",\" + buildFilter(\"national_ambient_air_quality_std_source\", \"eq\", this.state.national_ambient_air_quality_std_source);\n    }\n\n    if (this.state.national_ambient_air_quality_std_units != \"None\") {\n      filterObjs += \",\" + buildFilter(\"national_ambient_air_quality_std_units\", \"eq\", this.state.national_ambient_air_quality_std_units);\n    }\n\n    orderObjs = buildOrder(this.state.sort_by, this.state.order);\n    return buildQuery(\"pollutants\", this.state.curent_page + 1, filterObjs, orderObjs);\n  }\n\n  render() {\n    if (this.state.isloaded) {\n      console.log(this.state.curent_page);\n      console.log(this.state.page);\n      console.log(this.state.total_pages);\n      console.log(this.state.num_results);\n      let span = 4;\n      let page = this.state.page;\n      let end = this.state.total_pages - 1;\n      let l = page - span / 2;\n      let r = page + span / 2;\n      let inbetween = [];\n\n      if (this.state.total_pages < span + 1) {\n        for (let p = 0; p < this.state.total_pages; p++) {\n          inbetween.push(React.createElement(Pagination.Item, {\n            active: p === page,\n            onClick: e => this.setState({\n              curent_page: p,\n              isloaded: false\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 946\n            },\n            __self: this\n          }, p + 1));\n        }\n      } else if (page - span < 0) {\n        for (let p = 0; p <= span; p++) {\n          inbetween.push(React.createElement(Pagination.Item, {\n            active: p === page,\n            onClick: e => this.setState({\n              curent_page: p,\n              isloaded: false\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 957\n            },\n            __self: this\n          }, p + 1));\n        }\n      } else if (page + span > end) {\n        for (let p = end - span; p <= end; p++) {\n          inbetween.push(React.createElement(Pagination.Item, {\n            active: p === page,\n            onClick: e => this.setState({\n              curent_page: p,\n              isloaded: false\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 968\n            },\n            __self: this\n          }, p + 1));\n        }\n      } else {\n        for (let p = l < 0 ? 0 : l; p <= r && p <= end; p++) {\n          inbetween.push(React.createElement(Pagination.Item, {\n            active: p === page,\n            onClick: e => this.setState({\n              curent_page: p,\n              isloaded: false\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 979\n            },\n            __self: this\n          }, p + 1));\n        }\n      }\n\n      let page_results = \"\";\n\n      if (this.state.total_pages != 0) {\n        page_results = \"Page \" + (this.state.curent_page + 1) + \"/\" + this.state.total_pages;\n      } else {\n        page_results = \"No Search Results Found\";\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 995\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 996\n        },\n        __self: this\n      }), React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 997\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 998\n        },\n        __self: this\n      }, \"Chemical Pollutant Search Results for \\\"\", this.props.searchstring, \"\\\"\")), React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1000\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1001\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1002\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1003\n        },\n        __self: this\n      }, \"Filters\")), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1005\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1006\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Potency Source\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1007\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            inhalation_cancer_potency_source: \"None\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1008\n        },\n        __self: this\n      }, \"None\"), this.state.cancer_potency_sources.map(src => React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            inhalation_cancer_potency_source: src,\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1012\n        },\n        __self: this\n      }, src))), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1023\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1023\n        },\n        __self: this\n      }, this.state.inhalation_cancer_potency_source)))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1026\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1027\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Potency Units\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1028\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            inhalation_cancer_potency_units: \"None\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1029\n        },\n        __self: this\n      }, \"None\"), this.state.cancer_potency_units.map(unit => React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            inhalation_cancer_potency_units: unit,\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1033\n        },\n        __self: this\n      }, unit))), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1044\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1044\n        },\n        __self: this\n      }, this.state.inhalation_cancer_potency_units)))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1047\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1048\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Concentration Source\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1049\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            inhalation_reference_concentration_source: \"None\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1050\n        },\n        __self: this\n      }, \"None\"), this.state.reference_concentration_source.map(unit => React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            inhalation_reference_concentration_source: unit,\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1054\n        },\n        __self: this\n      }, unit))), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1065\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1065\n        },\n        __self: this\n      }, this.state.inhalation_reference_concentration_source)))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1068\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1069\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Concentration Units\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1070\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            inhalation_reference_concentration_units: \"None\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1071\n        },\n        __self: this\n      }, \"None\"), this.state.reference_concentration_units.map(unit => React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            inhalation_reference_concentration_units: unit,\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1075\n        },\n        __self: this\n      }, unit))), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1086\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1086\n        },\n        __self: this\n      }, this.state.inhalation_reference_concentration_units)))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1089\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1090\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Air Quality Source\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1091\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            national_ambient_air_quality_std_source: \"None\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1092\n        },\n        __self: this\n      }, \"None\"), this.state.ambient_air_quality_std_source.map(unit => React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            national_ambient_air_quality_std_source: unit,\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1096\n        },\n        __self: this\n      }, unit))), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1107\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1107\n        },\n        __self: this\n      }, this.state.national_ambient_air_quality_std_source)))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1110\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1111\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Air Quality Units\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1112\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            national_ambient_air_quality_std_units: \"None\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1113\n        },\n        __self: this\n      }, \"None\"), this.state.ambient_air_quality_std_units.map(unit => React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            national_ambient_air_quality_std_units: unit,\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1117\n        },\n        __self: this\n      }, unit))), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1128\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1128\n        },\n        __self: this\n      }, this.state.national_ambient_air_quality_std_units))))), React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1132\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1133\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1133\n        },\n        __self: this\n      }, \"Sort By\")), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1134\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: this.state.display_sort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1135\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"chemical_name\",\n            display_sort: \"Chemical Name\",\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1136\n        },\n        __self: this\n      }, \"Chemical Name\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"inhalation_cancer_potency\",\n            display_sort: \"Potency\",\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1139\n        },\n        __self: this\n      }, \"Potency\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"inhalation_reference_concentration\",\n            display_sort: \"Concentration\",\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1142\n        },\n        __self: this\n      }, \"Concentration\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"national_ambient_air_quality_std\",\n            display_sort: \"Standard\",\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1145\n        },\n        __self: this\n      }, \"Standard\"))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1150\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: this.state.display_order,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1151\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            order: \"asc\",\n            display_order: \"Ascending\",\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1152\n        },\n        __self: this\n      }, \"Ascending\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            order: \"desc\",\n            display_order: \"Descending\",\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1155\n        },\n        __self: this\n      }, \"Descending\"))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1162\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1163\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1164\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1165\n        },\n        __self: this\n      }, page_results)), React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1169\n        },\n        __self: this\n      }, React.createElement(Pagination, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1170\n        },\n        __self: this\n      }, React.createElement(Pagination.First, {\n        onClick: e => this.setState({\n          curent_page: 0,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1172\n        },\n        __self: this\n      }), React.createElement(Pagination.Prev, {\n        disabled: this.state.page <= 0,\n        onClick: e => this.setState({\n          curent_page: this.state.page - 1,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1177\n        },\n        __self: this\n      }), inbetween, React.createElement(Pagination.Next, {\n        disabled: this.state.page >= this.state.total_pages - 1,\n        onClick: e => this.setState({\n          curent_page: this.state.page + 1,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1186\n        },\n        __self: this\n      }), React.createElement(Pagination.Last, {\n        onClick: e => this.setState({\n          curent_page: this.state.total_pages - 1,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1192\n        },\n        __self: this\n      })))), React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1198\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1199\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1199\n        },\n        __self: this\n      }, \"Chemical Name\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1200\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1200\n        },\n        __self: this\n      }, \"Inhalation Cancer Potency\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1201\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1201\n        },\n        __self: this\n      }, \"Inhalation Cancer Source\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1202\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1202\n        },\n        __self: this\n      }, \"Inhalation Reference Concentration\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1203\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1203\n        },\n        __self: this\n      }, \"Inhalation Reference Source\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1204\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1204\n        },\n        __self: this\n      }, \"National Ambient Air Quality Standards\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1205\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1205\n        },\n        __self: this\n      }, \"National Ambient Air Quality Source\")), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1206\n        },\n        __self: this\n      }, this.state.objects.map(pollutant => React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1208\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1209\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1210\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/Pollutant/\" + pollutant.chemical_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1211\n        },\n        __self: this\n      }, React.createElement(Highlighter, {\n        highlightStyle: {\n          backgroundColor: 'lightblue'\n        },\n        searchWords: [this.props.searchstring],\n        autoEscape: true,\n        textToHighlight: pollutant.chemical_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1212\n        },\n        __self: this\n      })))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1221\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1221\n        },\n        __self: this\n      }, pollutant.inhalation_cancer_potency, \" \", pollutant.inhalation_cancer_potency_units)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1222\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1222\n        },\n        __self: this\n      }, pollutant.inhalation_cancer_potency_source)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1223\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1223\n        },\n        __self: this\n      }, pollutant.inhalation_reference_concentration, \" \", pollutant.inhalation_reference_concentration_units)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1224\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1224\n        },\n        __self: this\n      }, pollutant.inhalation_reference_concentration_source)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1225\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1225\n        },\n        __self: this\n      }, pollutant.national_ambient_air_quality_std, \" \", pollutant.national_ambient_air_quality_std_units)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1226\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1226\n        },\n        __self: this\n      }, pollutant.national_ambient_air_quality_std_source)))))));\n    } else {\n      this.componentDidMount();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1236\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1237\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://i.makeagif.com/media/9-30-2017/bhAyTs.gif\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1237\n        },\n        __self: this\n      })));\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/jasonsim/School/cs373-airpollution/frontend/src/pages/Search.js"],"names":["React","Component","useState","useEffect","Jumbotron","Container","Card","Button","CardImg","CardTitle","CardText","CardHeader","CardDeck","CardColumns","CardSubtitle","CardBody","NavLink","UncontrolledCarousel","Form","FormGroup","Label","Input","FormText","Image","Col","Row","Pagination","Nav","Tabs","Tab","DropdownButton","Dropdown","ButtonToolbar","Table","BrowserRouter","Router","Route","Link","Switch","BrowserHistory","createBrowserHistory","createUltimatePagination","ITEM_TYPES","ReactDOM","Highlighter","Search","constructor","props","state","searchstring","componentDidMount","key","match","params","render","color","buildOrder","fieldname","direction","buildFilter","operator","value","buildQuery","model","page","filterObjs","orderObjs","LocationResults","data","num_results","objects","total_pages","states","time_zones","current_state","current_timezone","current_population","current_density","sort_by","display_sort","order","display_order","curent_page","isloaded","getUniqueStates","bind","getTimeZones","getLocationQuery","console","log","fetch","then","res","json","setState","objArray","uniqueVals","map","obj","indexOf","state_name","push","timezone","span","end","l","r","inbetween","p","e","page_results","st","tz","location","id","backgroundColor","city","county_name","latitude","longitude","population","density","WrapperComponent","itemTypeToComponent","PAGE","isActive","onClick","ELLIPSIS","FIRST_PAGE_LINK","PREVIOUS_PAGE_LINK","NEXT_PAGE_LINK","LAST_PAGE_LINK","IllnessResults","current_contagious","current_lethality","current_treatable","getQuery","illness","illness_name","illness_desc","illness_lethality","illness_symptoms","illness_contagious","illness_treatable","PollutantResults","inhalation_cancer_potency","inhalation_cancer_potency_source","inhalation_cancer_potency_units","inhalation_reference_concentration","inhalation_reference_concentration_source","inhalation_reference_concentration_units","national_ambient_air_quality_std","national_ambient_air_quality_std_source","national_ambient_air_quality_std_units","cancer_potency_sources","cancer_potency_units","reference_concentration_source","reference_concentration_units","ambient_air_quality_std_source","ambient_air_quality_std_units","x","getcancer_potency_source","getcancer_potency_units","getreference_concentration_source","getreference_concentration_units","getair_quality_std_source","getair_quality_std_units","toUpperCase","src","unit","pollutant","chemical_name"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect  } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader,\n         CardDeck, CardColumns, CardSubtitle, CardBody , NavLink, UncontrolledCarousel,\n         Form,FormGroup, Label, Input, FormText} from 'reactstrap';\nimport { Image, Col, Row, Pagination, Nav, Tabs, Tab, DropdownButton, Dropdown, ButtonToolbar, Table} from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Link , Switch, BrowserHistory } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { createUltimatePagination, ITEM_TYPES } from 'react-ultimate-pagination';\nimport ReactDOM from 'react-dom';\nimport Highlighter from 'react-highlight-words';\n/*\nhttps://stackoverflow.com/questions/35976167/find-unique-values-from-an-array-in-react-js\n*/\n\nexport class Search extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      searchstring : null\n    };\n  }\n\n    componentDidMount() {\n      const key = this.props.match.params;\n    }\n\n  render(){\n    const {key} = this.props.match.params;\n    return(\n        <div>\n        {/*Make tabs not look shitty*/}\n        <Tabs justify = \"center\" style = {{color:\"blue\"}}>\n          <Tab.Content eventKey=\"location\" title=\"Location\" >\n            <LocationResults fieldname = \"city\" searchstring = {key}/>\n          </Tab.Content>\n          <Tab eventKey=\"illness\" title=\"Illness\">\n            <IllnessResults fieldname = \"illness_desc\" searchstring = {key}/>\n          </Tab>\n          <Tab eventKey=\"pollutants\" title=\"Pollutants\">\n            <PollutantResults fieldname = \"chemical_name\" searchstring = {key}/>\n          </Tab>\n          </Tabs>\n          </div>\n    );\n  }\n}\n\nconst buildOrder  = (fieldname,direction) => {\n    return `{%22field%22:%22${fieldname}%22,%22direction%22:%22${direction}%22}`\n}\n\nconst buildFilter = (fieldname,operator,value) => {\n    return `{%22name%22:%22${fieldname}%22,%22op%22:%22${operator}%22,%22val%22:%22${value}%22}`\n}\n\nconst buildQuery = (model,page,filterObjs,orderObjs) => {\n      return `https://api.howsmyair.me/${model}?page=${page}&q={%22filters%22:[${filterObjs}],%22order_by%22:[${orderObjs}]}`\n}\n\nexport class LocationResults extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      data : {},\n      num_results: null,\n      objects:[],\n      page: null,\n      total_pages: null,\n      states : [],\n      time_zones : [],\n      current_state: \"None\",\n      current_timezone : \"None\",\n      current_population : \"None\",\n      current_density : \"None\",\n      sort_by : \"city\",\n      display_sort : \"City\",\n      order : \"asc\",\n      display_order : \"Ascending\",\n      curent_page: 0,\n      isloaded : false\n    };\n        this.getUniqueStates = this.getUniqueStates.bind(this)\n        this.getTimeZones = this.getTimeZones.bind(this)\n        this.getLocationQuery = this.getLocationQuery.bind(this)\n        this.componentDidMount = this.componentDidMount.bind(this)\n\n  }\n\n    componentDidMount() {\n      console.log(this.getLocationQuery())\n      fetch(this.getLocationQuery())\n         .then(res => res.json())\n         .then(data => {\n          this.setState({\n            data : data,\n            num_results: data.num_results,\n            objects: data.objects,\n            curent_page: data.page-1,\n            page: data.page-1,\n            total_pages: data.total_pages,\n            isloaded : true,\n            states : this.getUniqueStates(data.objects),\n            time_zones : this.getTimeZones(data.objects)\n          })\n\n      })\n    };\n\n    getLocationQuery(){\n\n      let filterObjs = buildFilter(\"city\",\"like\",`%25${this.props.searchstring}%25`);\n      let orderObjs = buildOrder(\"city\",\"asc\")\n\n      if (this.state.current_state != \"None\") {\n        filterObjs += \",\"+buildFilter(\"state_name\",\"eq\",this.state.current_state)\n      }\n      if (this.state.current_timezone != \"None\") {\n        filterObjs += \",\"+buildFilter(\"timezone\",\"eq\",this.state.current_timezone)\n      }\n\n      switch(this.state.current_population){\n        case \"Small\":\n          filterObjs += \",\"+buildFilter(\"population\",\"le\",500000)\n          break;\n        case\"Medium\":\n          filterObjs += \",\"+buildFilter(\"population\",\"ge\",500000)\n          filterObjs += \",\"+buildFilter(\"population\",\"lt\",1000000)\n          break;\n        case\"Large\":\n          filterObjs += \",\"+buildFilter(\"population\",\"ge\",1000000)\n        default:\n          break;\n\n      }\n\n      switch(this.state.current_density){\n        case \"Sparse\":\n          filterObjs += \",\"+buildFilter(\"density\",\"le\",1000)\n          break;\n        case\"Medium\":\n          filterObjs += \",\"+buildFilter(\"density\",\"ge\",1000)\n          filterObjs += \",\"+buildFilter(\"density\",\"lt\",2000)\n          break;\n        case\"Dense\":\n          filterObjs += \",\"+buildFilter(\"density\",\"ge\",2000)\n        default:\n          break;\n      }\n      orderObjs = buildOrder(this.state.sort_by,this.state.order)\n\n      return buildQuery(\"location\",this.state.curent_page+1,filterObjs,orderObjs);\n    }\n\n    getUniqueStates(objArray){\n        const uniqueVals = [];\n        objArray.map( obj => {\n            if (uniqueVals.indexOf(obj.state_name) === -1) {\n                uniqueVals.push(obj.state_name)\n            };\n        });\n        return(uniqueVals);\n    }\n\n    getTimeZones(objArray){\n        const uniqueVals = [];\n        objArray.map( obj => {\n            if (uniqueVals.indexOf(obj.timezone) === -1) {\n                uniqueVals.push(obj.timezone)\n            };\n        });\n        return(uniqueVals);\n    }\n    render(){\n      if (this.state.isloaded){\n      console.log(this.state.curent_page)\n      console.log(this.state.page)\n      console.log(this.state.total_pages)\n      console.log(this.state.num_results)\n      let span = 2\n      let page = this.state.page\n      let end = this.state.total_pages - 1\n      let l = page - (span / 2)\n      let r = page + (span / 2)\n      let inbetween = [];\n\n      if (this.state.total_pages < span + 1){\n          for (let p = 0; p < this.state.total_pages; p++) {\n            inbetween.push(\n              <Pagination.Item\n                active={p === page}\n                onClick={e => this.setState({ curent_page : p , isloaded : false})}\n              >\n              {p + 1}\n              </Pagination.Item>\n            );\n          }\n      } else if (page-span < 0) {\n        for (let p = 0; p <= span; p++) {\n          inbetween.push(\n            <Pagination.Item\n              active={p === page}\n              onClick={e => this.setState({ curent_page : p , isloaded : false})}\n            >\n            {p + 1}\n            </Pagination.Item>\n          );\n        }\n      } else if (page + span > end) {\n          for (let p = end - span; p <= end ; p++) {\n            inbetween.push(\n              <Pagination.Item\n                active={p === page}\n              onClick={e => this.setState({ curent_page : p , isloaded : false})}\n              >\n              {p + 1}\n              </Pagination.Item>\n          );\n        }\n      } else {\n        for (let p = l < 0 ? 0 : l; p <= r && p <= end; p++) {\n          inbetween.push(\n            <Pagination.Item\n              active={p === page}\n              onClick={e => this.setState({ curent_page : p , isloaded : false})}\n            >\n            {p + 1}\n            </Pagination.Item>\n          );\n        }\n      }\n      let page_results =\"\"\n      if (this.state.total_pages != 0){\n        page_results = \"Page \" + (this.state.curent_page+1)+\"/\"+(this.state.total_pages)\n      } else {\n        page_results = \"No Search Results Found\"\n      }           \n      return(\n        <div>\n          <br/>\n            <Row className=\"justify-content-md-center\">\n                <h1 style={{color: '#1976d2'}}>Location Search Results for \"{this.props.searchstring}\"</h1>\n            </Row>\n            <Jumbotron>            \n            <Row className=\"justify-content-md-center\">\n              <Col md=\"auto\">\n                <h3 style={{color: '#1976d2'}}>Filters</h3>\n              </Col>\n              <Col md=\"auto\">\n                <center>\n                  <DropdownButton id=\"dropdown-basic-button\" title=\"States\">\n                      <Dropdown.Item onClick={() => {this.setState({current_state : \"None\", curent_page : 0,isloaded : false});}}>\n                        None\n                      </Dropdown.Item>\n                      {this.state.states.map( st => (\n                        <Dropdown.Item onClick={() => {\n                          this.setState({\n                            current_state : st,\n                            curent_page : 0,\n                            isloaded : false\n                          });\n                        }}>\n                        {st}\n                        </Dropdown.Item>\n                      ))}\n                  </DropdownButton>\n                  <h5 style={{color: '#1976d2'}}>{this.state.current_state}</h5>\n                </center>\n              </Col>\n              <Col md=\"auto\">\n                <center>\n                  <DropdownButton id=\"dropdown-basic-button\" title=\"Time Zone\">\n                    <Dropdown.Item onClick={() => {this.setState({current_timezone : \"None\", curent_page : 0,isloaded : false});}}>\n                      None\n                    </Dropdown.Item>\n                      {this.state.time_zones.map( tz => (\n                        <Dropdown.Item onClick={() => {\n                            this.setState({\n                              current_timezone : tz,\n                              curent_page : 0,\n                              isloaded : false\n                            });\n                        }}>\n                        {tz}\n                    </Dropdown.Item>\n                  ))}\n                  </DropdownButton>\n                  <h5 style={{color: '#1976d2'}}>{this.state.current_timezone}</h5>\n                </center>\n              </Col>\n              <Col md=\"auto\">\n                <center>\n                  <DropdownButton id=\"dropdown-basic-button\" title=\"Population\">\n                    <Dropdown.Item onClick={() => {this.setState({ current_population : \"None\", curent_page : 0, isloaded : false});}}>\n                      None\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_population : \"Small\", curent_page : 0, isloaded : false});}}>\n                      Small\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_population : \"Medium\", curent_page : 0, isloaded : false});}}>\n                      Medium\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_population : \"Large\", curent_page : 0, isloaded : false});}}>\n                      Large\n                    </Dropdown.Item>\n                  </DropdownButton>\n                <h5 style={{color: '#1976d2'}}><center>{this.state.current_population}</center></h5>\n                </center>\n              </Col>\n              <Col md=\"auto\">\n                <center>\n                  <DropdownButton id=\"dropdown-basic-button\" title=\"Density\">\n                    <Dropdown.Item onClick={() => {this.setState({ current_density : \"None\", curent_page : 0, isloaded : false});}}>\n                      None\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_density : \"Sparse\", curent_page : 0, isloaded : false});}}>\n                      Sparse\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_density : \"Medium\", curent_page : 0, isloaded : false});}}>\n                      Medium\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_density : \"Dense\", curent_page : 0, isloaded : false});}}>\n                      Dense\n                    </Dropdown.Item>\n                  </DropdownButton>\n                <h5 style={{color: '#1976d2'}}><center>{this.state.current_density}</center></h5>\n                </center>\n              </Col>\n                <h3 style={{color: '#1976d2'}}><center>Sort By</center></h3>\n              <Col md=\"auto\">\n                  <DropdownButton id=\"dropdown-basic-button\" title={this.state.display_sort}>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"city\", display_sort : \"City\", curent_page : 0, isloaded : false});}}>\n                      City\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"county_name\", display_sort : \"County\", curent_page : 0, isloaded : false});}}>\n                      County\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"state_name\", display_sort : \"State\", curent_page : 0, isloaded : false});}}>\n                      State\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"timezone\", display_sort : \"Time Zone\", curent_page : 0, isloaded : false});}}>\n                      Time Zone\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"latitude\", display_sort : \"Latitude\", curent_page : 0, isloaded : false});}}>\n                      Latitude\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"longitude\", display_sort : \"Longitude\", curent_page : 0, isloaded : false});}}>\n                      Longitude\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"population\", display_sort : \"Population\", curent_page : 0, isloaded : false});}}>\n                      Population\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"density\", display_sort : \"Density\", curent_page : 0, isloaded : false});}}>\n                      Density\n                    </Dropdown.Item>\n                  </DropdownButton>\n              </Col>\n              <Col md=\"auto\">\n                  <DropdownButton id=\"dropdown-basic-button\" title = {this.state.display_order}>\n                    <Dropdown.Item onClick={() => {this.setState({ order : \"asc\", display_order : \"Ascending\", curent_page : 0, isloaded : false});}}>\n                      Ascending\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ order : \"desc\", display_order : \"Descending\",curent_page : 0, isloaded : false});}}>\n                      Descending\n                    </Dropdown.Item>\n                  </DropdownButton>\n              </Col>\n            </Row>\n           </Jumbotron>\n\n          <br/>\n          <Container>\n           <center>\n            <h4 style={{color: '#1976d2'}}>\n            {page_results}\n           </h4>\n           </center>\n            <Row className=\"justify-content-md-center\">\n              <Pagination>\n                {/*First Page*/}\n                <Pagination.First\n                  onClick={e => this.setState({ curent_page : 0, isloaded : false})}\n                />\n\n                {/*Previous Page*/}\n                <Pagination.Prev\n                  disabled={this.state.page <= 0}\n                  onClick={e => this.setState({ curent_page : this.state.page -1 , isloaded : false})}\n                />\n\n                {/*Eveything in between - see block before return statement*/}\n                {inbetween}\n\n                {/*Next Page*/}\n                <Pagination.Next\n                  disabled={this.state.page >= this.state.total_pages - 1}\n                  onClick={e => this.setState({ curent_page : this.state.page +1 , isloaded : false})}\n                />\n\n                {/*Last Page*/}\n                <Pagination.Last\n                  onClick={e => this.setState({ curent_page : this.state.total_pages - 1 , isloaded : false})}\n                />\n              </Pagination>\n            </Row>\n           </Container>\n          <Table striped bordered hover responsive >\n            <th><center>City</center></th>\n            <th><center>County</center></th>\n            <th><center>State</center></th>\n            <th><center>Time Zone</center></th>\n            <th><center>Latitude</center></th>\n            <th><center>Longitude</center></th>\n            <th><center>Population</center></th>\n            <th><center>Density per sq. mile</center></th>\n            <tbody>\n            {this.state.objects.map((location) => (\n              <tr>\n              <td><center>\n                  <Link to={\"/Location/\" + location.id}>\n                      <Highlighter\n                        highlightStyle={{backgroundColor: 'lightblue'}}\n                        searchWords={[this.props.searchstring]}\n                        autoEscape={true}\n                        textToHighlight= {location.city}\n                      />\n                  </Link>\n                </center>\n              </td>\n              <td><center>{location.county_name}</center></td>\n              <td><center>{location.state_name}</center></td>\n              <td><center>{location.timezone}</center></td>\n              <td><center>{location.latitude}</center></td>\n              <td><center>{location.longitude}</center></td>\n              <td><center>{location.population}</center></td>\n              <td><center>{location.density}</center></td>\n              </tr>\n            ))}\n            </tbody>\n          </Table>\n        </div>\n      );\n    } else {\n      this.componentDidMount();\n      return (\n        <div>\n         <center><img src = \"https://i.makeagif.com/media/9-30-2017/bhAyTs.gif\"/></center>\n        </div>      );\n   }\n  }\n}\n\nexport default createUltimatePagination({\n  WrapperComponent: Pagination,\n  itemTypeToComponent: {\n    [ITEM_TYPES.PAGE]: ({value, isActive, onClick}) => (\n\n      <Pagination.Item active={isActive} onClick={onClick}>{value}</Pagination.Item>\n    ),\n    [ITEM_TYPES.ELLIPSIS]: ({ isActive, onClick }) => (\n      <Pagination.Ellipsis disabled={isActive} onClick={onClick} />\n    ),\n    [ITEM_TYPES.FIRST_PAGE_LINK]: ({ isActive, onClick }) => (\n      <Pagination.First disabled={isActive} onClick={onClick} />\n    ),\n    [ITEM_TYPES.PREVIOUS_PAGE_LINK]: ({ isActive, onClick }) => (\n      <Pagination.Prev disabled={isActive} onClick={onClick} />\n    ),\n    [ITEM_TYPES.NEXT_PAGE_LINK]: ({ isActive, onClick }) => (\n      <Pagination.Next disabled={isActive} onClick={onClick} />\n    ),\n    [ITEM_TYPES.LAST_PAGE_LINK]: ({ isActive, onClick }) => (\n      <Pagination.Last disabled={isActive} onClick={onClick} />\n    ),\n  },\n});\n\n\nexport class IllnessResults extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      data : {},\n      num_results: null,\n      objects:[],\n      page: null,\n      total_pages: null,\n      states : [],\n      time_zones : [],\n      current_contagious: \"None\",\n      current_lethality : \"None\",\n      current_treatable : \"None\",\n      sort_by : \"illness_name\",\n      display_sort : \"Illness\",\n      order : \"asc\",\n      display_order : \"Ascending\",\n      curent_page: 0,\n      isloaded : false\n  };\n    this.getQuery = this.getQuery.bind(this)\n    this.componentDidMount = this.componentDidMount.bind(this)\n   }\n\n   componentDidMount() {\n   console.log(this.getQuery())\n   console.log(this.props.searchstring)\n\n   fetch(this.getQuery())\n       .then(res => res.json())\n       .then(data => {\n        this.setState({\n         data : data,\n         num_results: data.num_results,\n         objects: data.objects,\n         curent_page: data.page-1,\n         page: data.page-1,\n         total_pages: data.total_pages,\n         isloaded : true,\n        })\n\n   })\n   };\n\n   getQuery(){\n\n   let filterObjs = buildFilter(\"illness_desc\",\"like\",`%25${this.props.searchstring}%25`);\n   let orderObjs = buildOrder(\"illness_name\",\"asc\")\n\n   if (this.state.current_contagious != \"None\") {\n     filterObjs += \",\"+buildFilter(\"illness_contagious\",\"eq\",this.state.current_contagious)\n   }\n   if (this.state.current_lethality != \"None\") {\n     filterObjs += \",\"+buildFilter(\"illness_lethality\",\"eq\",this.state.current_lethality)\n   }\n   if (this.state.current_treatable != \"None\") {\n     filterObjs += \",\"+buildFilter(\"illness_treatable\",\"eq\",this.state.current_treatable)\n   }\n\n   orderObjs = buildOrder(this.state.sort_by,this.state.order)\n\n   return buildQuery(\"illness\",this.state.curent_page+1,filterObjs,orderObjs);\n   }\n\n   render(){\n     if (this.state.isloaded) {\n     let span = 4\n     let page = this.state.page\n     let end = this.state.total_pages - 1\n     let l = page - (span / 2)\n     let r = page + (span / 2)\n     let inbetween = [];\n\n     if (this.state.total_pages < span + 1){\n         for (let p = 0; p < this.state.total_pages; p++) {\n           inbetween.push(\n             <Pagination.Item\n               active={p === page}\n               onClick={e => this.setState({ curent_page : p , isloaded : false})}\n             >\n             {p + 1}\n             </Pagination.Item>\n           );\n         }\n     } else if (page-span < 0) {\n      for (let p = 0; p <= span; p++) {\n         inbetween.push(\n           <Pagination.Item\n             active={p === page}\n             onClick={e => this.setState({ curent_page : p , isloaded : false})}\n           >\n           {p + 1}\n           </Pagination.Item>\n         );\n      }\n     } else if (page + span > end) {\n         for (let p = end - span; p <= end ; p++) {\n           inbetween.push(\n             <Pagination.Item\n               active={p === page}\n             onClick={e => this.setState({ curent_page : p , isloaded : false})}\n             >\n             {p + 1}\n             </Pagination.Item>\n         );\n      }\n     } else {\n      for (let p = l < 0 ? 0 : l; p <= r && p <= end; p++) {\n         inbetween.push(\n           <Pagination.Item\n             active={p === page}\n             onClick={e => this.setState({ curent_page : p , isloaded : false})}\n           >\n           {p + 1}\n           </Pagination.Item>\n         );\n      }\n     }\n     let page_results =\"\"\n     if (this.state.total_pages != 0){\n        page_results = \"Page \" + (this.state.curent_page+1)+\"/\"+(this.state.total_pages)\n     } else {\n        page_results = \"No Search Results Found\"\n     }     \n     return(\n      <div>\n         <br/>\n           <Row className=\"justify-content-md-center\">\n              <h1 style={{color: '#1976d2'}}>Illness Search Results for \"{this.props.searchstring}\"</h1>\n           </Row>\n           <Jumbotron>           \n           <Row className=\"justify-content-md-center\">\n             <Col md=\"auto\">\n               <h3 style={{color: '#1976d2'}}>Filters</h3>\n             </Col>\n             <Col md=\"auto\">\n               <center>\n                 <DropdownButton id=\"dropdown-basic-button\" title=\"Contagious\">\n                   <Dropdown.Item onClick={() => {this.setState({ current_contagious : \"None\", curent_page : 0, isloaded : false});}}>\n                     None\n                   </Dropdown.Item>\n                   <Dropdown.Item onClick={() => {this.setState({ current_contagious : \"yes\", curent_page : 0, isloaded : false});}}>\n                     Yes\n                   </Dropdown.Item>\n                   <Dropdown.Item onClick={() => {this.setState({ current_contagious : \"no\", curent_page : 0, isloaded : false});}}>\n                     No\n                   </Dropdown.Item>\n                 </DropdownButton>\n                 <h5 style={{color: '#1976d2'}}>{this.state.current_contagious}</h5>\n               </center>\n             </Col>\n             <Col md=\"auto\">\n               <center>\n                 <DropdownButton id=\"dropdown-basic-button\" title=\"Treatable\">\n                   <Dropdown.Item onClick={() => {this.setState({ current_lethality : \"None\", curent_page : 0, isloaded : false});}}>\n                     None\n                   </Dropdown.Item>\n                   <Dropdown.Item onClick={() => {this.setState({ current_lethality : \"lethal\", curent_page : 0, isloaded : false});}}>\n                     Yes\n                   </Dropdown.Item>\n                   <Dropdown.Item onClick={() => {this.setState({ current_lethality : \"non-lethal\", curent_page : 0, isloaded : false});}}>\n                     No\n                   </Dropdown.Item>\n                 </DropdownButton>\n                 <h5 style={{color: '#1976d2'}}>{this.state.current_contagious}</h5>\n               </center>\n             </Col>\n             <Col md=\"auto\">\n               <center>\n                 <DropdownButton id=\"dropdown-basic-button\" title=\"Treatable\">\n                   <Dropdown.Item onClick={() => {this.setState({ current_treatable : \"None\", curent_page : 0, isloaded : false});}}>\n                     None\n                   </Dropdown.Item>\n                   <Dropdown.Item onClick={() => {this.setState({ current_treatable : \"yes\", curent_page : 0, isloaded : false});}}>\n                     Yes\n                   </Dropdown.Item>\n                   <Dropdown.Item onClick={() => {this.setState({ current_treatable : \"no\", curent_page : 0, isloaded : false});}}>\n                     No\n                   </Dropdown.Item>\n                 </DropdownButton>\n                 <h5 style={{color: '#1976d2'}}>{this.state.current_treatable}</h5>\n               </center>\n             </Col>\n             <h3 style={{color: '#1976d2'}}><center>Sort By</center></h3>\n             <Col md=\"auto\">\n                 <DropdownButton id=\"dropdown-basic-button\" title={this.state.display_sort}>\n                   <Dropdown.Item onClick={() => {this.setState({ sort_by : \"illness_name\", display_sort : \"Illness\", curent_page : 0, isloaded : false});}}>\n                     Illness\n                   </Dropdown.Item>\n                   <Dropdown.Item onClick={() => {this.setState({ sort_by : \"illness_lethality\", display_sort : \"Lethality\", curent_page : 0, isloaded : false});}}>\n                     Lethality\n                   </Dropdown.Item>\n                   <Dropdown.Item onClick={() => {this.setState({ sort_by : \"illness_contagious\", display_sort : \"Contagious\", curent_page : 0, isloaded : false});}}>\n                     Contagious\n                   </Dropdown.Item>\n                   <Dropdown.Item onClick={() => {this.setState({ sort_by : \"illness_treatable\", display_sort : \"Treatable\", curent_page : 0, isloaded : false});}}>\n                     Treatable\n                   </Dropdown.Item>\n                 </DropdownButton>\n             </Col>\n             <Col md=\"auto\">\n                 <DropdownButton id=\"dropdown-basic-button\" title = {this.state.display_order}>\n                   <Dropdown.Item onClick={() => {this.setState({ order : \"asc\", display_order : \"Ascending\", curent_page : 0, isloaded : false});}}>\n                     Ascending\n                   </Dropdown.Item>\n                   <Dropdown.Item onClick={() => {this.setState({ order : \"desc\", display_order : \"Descending\", curent_page : 0, isloaded : false});}}>\n                     Descending\n                   </Dropdown.Item>\n                 </DropdownButton>\n             </Col>\n           </Row>\n           </Jumbotron>           \n         <br/>\n         <Container>\n            <center>\n            <h4 style={{color: '#1976d2'}}>\n            {page_results}\n            </h4>\n            </center>\n            <Row className=\"justify-content-md-center\">\n             <Pagination >\n                {/*First Page*/}\n                <Pagination.First\n                  onClick={e => this.setState({ curent_page : 0, isloaded : false})}\n                />\n\n                {/*Previous Page*/}\n                <Pagination.Prev\n                  disabled={this.state.page <= 0}\n                  onClick={e => this.setState({ curent_page : this.state.page -1 , isloaded : false})}\n                />\n\n                {/*Eveything in between - see block before return statement*/}\n                {inbetween}\n\n                {/*Next Page*/}\n                <Pagination.Next\n                  disabled={this.state.page >= this.state.total_pages - 1}\n                  onClick={e => this.setState({ curent_page : this.state.page +1 , isloaded : false})}\n                />\n\n                {/*Last Page*/}\n                <Pagination.Last\n                 onClick={e => this.setState({ curent_page : this.state.total_pages - 1 , isloaded : false})}\n                />\n              </Pagination>\n            </Row>\n          </Container>\n\n          <Table striped bordered hover responsive >\n            <th><center>Illness</center></th>\n            <th><center>Illness Description</center></th>\n            <th><center>Lethality</center></th>\n            <th><center>Symptoms</center></th>\n            <th><center>Contagious</center></th>\n            <th><center>Treatable</center></th>\n            <tbody>\n            {this.state.objects.map((illness) => (\n              <tr>\n              <td><center>{illness.illness_name}</center></td>\n              <td><center>\n                  <Link to={\"/Illness/\" + illness.illness_name}>\n                      <Highlighter\n                        highlightStyle={{backgroundColor: 'lightblue'}}\n                        searchWords={[this.props.searchstring]}\n                        autoEscape={true}\n                        textToHighlight= {illness.illness_desc}\n                      />\n                  </Link>\n                </center>\n              </td>\n              <td><center>{illness.illness_lethality}</center></td>\n              <td><center>{illness.illness_symptoms}</center></td>\n              <td><center>{illness.illness_contagious}</center></td>\n              <td><center>{illness.illness_treatable}</center></td>\n              </tr>\n            ))}\n            </tbody>\n          </Table>\n        </div>\n      );\n    } else {\n      this.componentDidMount();\n      return (\n        <div>\n         <center><img src = \"https://i.makeagif.com/media/9-30-2017/bhAyTs.gif\"/></center>\n        </div>\n\n      );\n   }\n  }\n}\n\n\nexport class PollutantResults extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      data : {},\n      num_results: null,\n      objects:[],\n      page: null,\n      total_pages: null,\n      states : [],\n      time_zones : [],\n      inhalation_cancer_potency : \"None\",\n      inhalation_cancer_potency_source : \"None\",\n      inhalation_cancer_potency_units : \"None\",\n      inhalation_reference_concentration : \"None\",\n      inhalation_reference_concentration_source : \"None\",\n      inhalation_reference_concentration_units : \"None\",\n      national_ambient_air_quality_std : \"None\",\n      national_ambient_air_quality_std_source : \"None\",\n      national_ambient_air_quality_std_units : \"None\",\n      cancer_potency_sources : [],\n      cancer_potency_units : [],\n      reference_concentration_source : [],\n      reference_concentration_units : [],\n      ambient_air_quality_std_source : [],\n      ambient_air_quality_std_units : [],\n      sort_by : \"chemical_name\",\n      display_sort : \"Chemical Name\",\n      order : \"asc\",\n      display_order : \"Ascending\",\n      curent_page: 0,\n      isloaded : false,\n    };\n        this.getQuery = this.getQuery.bind(this)\n        this.componentDidMount = this.componentDidMount.bind(this)\n  }\n\n    componentDidMount() {\n      let x = this.curent_page\n      console.log(this.getQuery())\n      fetch(this.getQuery())\n         .then(res => res.json())\n         .then(data => {\n          this.setState({\n            data : data,\n            num_results: data.num_results,\n            objects: data.objects,\n            curent_page: data.page-1,\n            page: data.page-1,\n            total_pages: data.total_pages,\n            cancer_potency_sources : this.getcancer_potency_source(data.objects),\n            cancer_potency_units : this.getcancer_potency_units(data.objects),\n            reference_concentration_source : this.getreference_concentration_source(data.objects),\n            reference_concentration_units : this.getreference_concentration_units(data.objects),\n            ambient_air_quality_std_source : this.getair_quality_std_source(data.objects),\n            ambient_air_quality_std_units : this.getair_quality_std_units(data.objects),\n            isloaded : true,\n          })\n\n      })\n      console.log(x) \n    };\n\n    getcancer_potency_source(objArray){\n        const uniqueVals = [];\n        objArray.map( obj => {\n            if (uniqueVals.indexOf(obj.inhalation_cancer_potency_source) === -1) {\n                uniqueVals.push(obj.inhalation_cancer_potency_source)\n            };\n        });\n        return(uniqueVals);\n    }\n\n    getcancer_potency_units(objArray){\n        const uniqueVals = [];\n        objArray.map( obj => {\n            if (uniqueVals.indexOf(obj.inhalation_cancer_potency_units) === -1) {\n                uniqueVals.push(obj.inhalation_cancer_potency_units)\n            };\n        });\n        return(uniqueVals);\n    }\n\n    getreference_concentration_source(objArray){\n        const uniqueVals = [];\n        objArray.map( obj => {\n            if (uniqueVals.indexOf(obj.inhalation_reference_concentration_source) === -1) {\n                uniqueVals.push(obj.inhalation_reference_concentration_source)\n            };\n        });\n        return(uniqueVals);\n    }\n\n    getreference_concentration_units(objArray){\n        const uniqueVals = [];\n        objArray.map( obj => {\n            if (uniqueVals.indexOf(obj.inhalation_reference_concentration_units) === -1) {\n                uniqueVals.push(obj.inhalation_reference_concentration_units)\n            };\n        });\n        return(uniqueVals);\n    }\n\n    getair_quality_std_source(objArray){\n        const uniqueVals = [];\n        objArray.map( obj => {\n            if (uniqueVals.indexOf(obj.national_ambient_air_quality_std_source) === -1) {\n                uniqueVals.push(obj.national_ambient_air_quality_std_source)\n            };\n        });\n        return(uniqueVals);\n    }\n\n    getair_quality_std_units(objArray){\n        const uniqueVals = [];\n        objArray.map( obj => {\n            if (uniqueVals.indexOf(obj.national_ambient_air_quality_std_units) === -1) {\n                uniqueVals.push(obj.national_ambient_air_quality_std_units)\n            };\n        });\n        return(uniqueVals);\n    }\n\n    getQuery(){\n\n      let filterObjs = buildFilter(\"chemical_name\",\"like\",`%25${this.props.searchstring.toUpperCase()}%25`);\n      let orderObjs = buildOrder(\"chemical_name\",\"asc\")\n\n      if (this.state.inhalation_cancer_potency_source != \"None\") {\n        filterObjs += \",\"+buildFilter(\"inhalation_cancer_potency_source\",\"eq\",this.state.inhalation_cancer_potency_source)\n      }\n      if (this.state.inhalation_cancer_potency_units != \"None\") {\n        filterObjs += \",\"+buildFilter(\"inhalation_cancer_potency_units\",\"eq\",this.state.inhalation_cancer_potency_units)\n      }\n      if (this.state.inhalation_reference_concentration_source != \"None\") {\n        filterObjs += \",\"+buildFilter(\"inhalation_reference_concentration_source\",\"eq\",this.state.inhalation_reference_concentration_source)\n      }\n      if (this.state.inhalation_reference_concentration_units != \"None\") {\n        filterObjs += \",\"+buildFilter(\"inhalation_reference_concentration_units\",\"eq\",this.state.inhalation_reference_concentration_units)\n      }\n      if (this.state.national_ambient_air_quality_std_source != \"None\") {\n        filterObjs += \",\"+buildFilter(\"national_ambient_air_quality_std_source\",\"eq\",this.state.national_ambient_air_quality_std_source)\n      }\n      if (this.state.national_ambient_air_quality_std_units != \"None\") {\n        filterObjs += \",\"+buildFilter(\"national_ambient_air_quality_std_units\",\"eq\",this.state.national_ambient_air_quality_std_units)\n      }\n\n      orderObjs = buildOrder(this.state.sort_by,this.state.order)\n\n      return buildQuery(\"pollutants\",this.state.curent_page+1,filterObjs,orderObjs);\n    }\n\n    render(){\n      if (this.state.isloaded){\n      console.log(this.state.curent_page)\n      console.log(this.state.page)\n      console.log(this.state.total_pages)\n      console.log(this.state.num_results)\n      let span = 4\n      let page = this.state.page\n      let end = this.state.total_pages - 1\n      let l = page - (span / 2)\n      let r = page + (span / 2)\n      let inbetween = [];\n\n      if (this.state.total_pages < span + 1){\n          for (let p = 0; p < this.state.total_pages; p++) {\n            inbetween.push(\n              <Pagination.Item\n                active={p === page}\n                onClick={e => this.setState({ curent_page : p , isloaded : false})}\n              >\n              {p + 1}\n              </Pagination.Item>\n            );\n          }\n      } else if (page-span < 0) {\n        for (let p = 0; p <= span; p++) {\n          inbetween.push(\n            <Pagination.Item\n              active={p === page}\n              onClick={e => this.setState({ curent_page : p , isloaded : false})}\n            >\n            {p + 1}\n            </Pagination.Item>\n          );\n        }\n      } else if (page + span > end) {\n          for (let p = end - span; p <= end ; p++) {\n            inbetween.push(\n              <Pagination.Item\n                active={p === page}\n              onClick={e => this.setState({ curent_page : p , isloaded : false})}\n              >\n              {p + 1}\n              </Pagination.Item>\n          );\n        }\n      } else {\n        for (let p = l < 0 ? 0 : l; p <= r && p <= end; p++) {\n          inbetween.push(\n            <Pagination.Item\n              active={p === page}\n              onClick={e => this.setState({ curent_page : p , isloaded : false})}\n            >\n            {p + 1}\n            </Pagination.Item>\n          );\n        }\n      }\n      let page_results =\"\"\n      if (this.state.total_pages != 0){\n        page_results = \"Page \" + (this.state.curent_page+1)+\"/\"+(this.state.total_pages)\n      } else {\n        page_results = \"No Search Results Found\"\n      }      \n      return(\n        <div>\n          <br/>\n            <Row className=\"justify-content-md-center\">\n                <h1 style={{color: '#1976d2'}}>Chemical Pollutant Search Results for \"{this.props.searchstring}\"</h1>\n            </Row>\n            <Jumbotron>            \n            <Row className=\"justify-content-md-center\">\n              <Col md=\"auto\">\n                <h3 style={{color: '#1976d2'}}>Filters</h3>\n              </Col>\n              <Col md=\"auto\">\n                <center>\n                  <DropdownButton id=\"dropdown-basic-button\" title=\"Potency Source\">\n                      <Dropdown.Item onClick={() => {this.setState({inhalation_cancer_potency_source : \"None\", curent_page : 0 ,isloaded : false});}}>\n                        None\n                      </Dropdown.Item>\n                      {this.state.cancer_potency_sources.map( src => (\n                        <Dropdown.Item onClick={() => {\n                          this.setState({\n                            inhalation_cancer_potency_source : src,\n                            curent_page : 0,                            \n                            isloaded : false\n                          });\n                        }}>\n                        {src}\n                        </Dropdown.Item>\n                      ))}\n                  </DropdownButton>\n                  <h5 style={{color: '#1976d2'}}><center>{this.state.inhalation_cancer_potency_source}</center></h5>\n                  </center>\n                </Col>\n                <Col md=\"auto\">\n                 <center>\n                  <DropdownButton id=\"dropdown-basic-button\" title=\"Potency Units\">\n                      <Dropdown.Item onClick={() => {this.setState({inhalation_cancer_potency_units : \"None\", curent_page : 0,isloaded : false});}}>\n                        None\n                      </Dropdown.Item>\n                      {this.state.cancer_potency_units.map( unit => (\n                        <Dropdown.Item onClick={() => {\n                          this.setState({\n                            inhalation_cancer_potency_units : unit,\n                            curent_page : 0,                                                        \n                            isloaded : false\n                          });\n                        }}>\n                        {unit}\n                        </Dropdown.Item>\n                      ))}\n                  </DropdownButton>\n                  <h5 style={{color: '#1976d2'}}><center>{this.state.inhalation_cancer_potency_units}</center></h5>                  \n                  </center>\n                </Col>\n                <Col md=\"auto\">\n                 <center>\n                  <DropdownButton id=\"dropdown-basic-button\" title=\"Concentration Source\">\n                      <Dropdown.Item onClick={() => {this.setState({inhalation_reference_concentration_source : \"None\", curent_page : 0,isloaded : false});}}>\n                        None\n                      </Dropdown.Item>\n                      {this.state.reference_concentration_source.map( unit => (\n                        <Dropdown.Item onClick={() => {\n                          this.setState({\n                            inhalation_reference_concentration_source : unit,\n                            curent_page : 0,                                                        \n                            isloaded : false\n                          });\n                        }}>\n                        {unit}\n                        </Dropdown.Item>\n                      ))}\n                  </DropdownButton>\n                  <h5 style={{color: '#1976d2'}}><center>{this.state.inhalation_reference_concentration_source}</center></h5>                                    \n                  </center>\n                </Col>\n                <Col md=\"auto\">\n                 <center>\n                  <DropdownButton id=\"dropdown-basic-button\" title=\"Concentration Units\">\n                      <Dropdown.Item onClick={() => {this.setState({inhalation_reference_concentration_units : \"None\", curent_page : 0,isloaded : false});}}>\n                        None\n                      </Dropdown.Item>\n                      {this.state.reference_concentration_units.map( unit => (\n                        <Dropdown.Item onClick={() => {\n                          this.setState({\n                            inhalation_reference_concentration_units : unit,\n                            curent_page : 0,                                                        \n                            isloaded : false\n                          });\n                        }}>\n                        {unit}\n                        </Dropdown.Item>\n                      ))}\n                  </DropdownButton>\n                  <h5 style={{color: '#1976d2'}}><center>{this.state.inhalation_reference_concentration_units}</center></h5>                                                      \n                  </center>\n                </Col>\n                <Col md=\"auto\">\n                 <center>\n                  <DropdownButton id=\"dropdown-basic-button\" title=\"Air Quality Source\">\n                      <Dropdown.Item onClick={() => {this.setState({national_ambient_air_quality_std_source : \"None\", curent_page : 0,isloaded : false});}}>\n                        None\n                      </Dropdown.Item>\n                      {this.state.ambient_air_quality_std_source.map( unit => (\n                        <Dropdown.Item onClick={() => {\n                          this.setState({\n                            national_ambient_air_quality_std_source : unit,\n                            curent_page : 0,                                                        \n                            isloaded : false\n                          });\n                        }}>\n                        {unit}\n                        </Dropdown.Item>\n                      ))}\n                  </DropdownButton>\n                  <h5 style={{color: '#1976d2'}}><center>{this.state.national_ambient_air_quality_std_source}</center></h5>                                                                        \n                  </center>\n                </Col>\n                <Col md=\"auto\">\n                 <center>\n                  <DropdownButton id=\"dropdown-basic-button\" title=\"Air Quality Units\">\n                      <Dropdown.Item onClick={() => {this.setState({national_ambient_air_quality_std_units : \"None\", curent_page : 0,isloaded : false});}}>\n                        None\n                      </Dropdown.Item>\n                      {this.state.ambient_air_quality_std_units.map( unit => (\n                        <Dropdown.Item onClick={() => {\n                          this.setState({\n                            national_ambient_air_quality_std_units : unit,\n                            curent_page : 0,                                                        \n                            isloaded : false\n                          });\n                        }}>\n                        {unit}\n                        </Dropdown.Item>\n                      ))}\n                  </DropdownButton>\n                  <h5 style={{color: '#1976d2'}}><center>{this.state.national_ambient_air_quality_std_units}</center></h5>                                                                                          \n                  </center>\n                </Col>\n               </Row>\n               <Row className=\"justify-content-md-center\">\n              <h3 style={{color: '#1976d2'}}><center>Sort By</center></h3>\n              <Col md=\"auto\">\n                  <DropdownButton id=\"dropdown-basic-button\" title={this.state.display_sort}>\n                   <Dropdown.Item onClick={() => {this.setState({ sort_by : \"chemical_name\", display_sort : \"Chemical Name\", isloaded : false});}}>\n                      Chemical Name\n                   </Dropdown.Item>\n                   <Dropdown.Item onClick={() => {this.setState({ sort_by : \"inhalation_cancer_potency\", display_sort : \"Potency\", isloaded : false});}}>\n                      Potency\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"inhalation_reference_concentration\", display_sort : \"Concentration\", isloaded : false});}}>\n                      Concentration\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"national_ambient_air_quality_std\", display_sort : \"Standard\", isloaded : false});}}>\n                      Standard\n                    </Dropdown.Item>\n                  </DropdownButton>\n              </Col>\n              <Col md=\"auto\">\n                  <DropdownButton id=\"dropdown-basic-button\" title = {this.state.display_order}>\n                    <Dropdown.Item onClick={() => {this.setState({ order : \"asc\", display_order : \"Ascending\", isloaded : false});}}>\n                      Ascending\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ order : \"desc\", display_order : \"Descending\", isloaded : false});}}>\n                      Descending\n                    </Dropdown.Item>\n                  </DropdownButton>\n              </Col>\n            </Row>\n            </Jumbotron>            \n          <br/>\n          <Container>\n            <center>\n              <h4 style={{color: '#1976d2'}}>\n                {page_results}\n              </h4>\n            </center>\n            <Row className=\"justify-content-md-center\">\n              <Pagination>\n                {/*First Page*/}\n                <Pagination.First\n                  onClick={e => this.setState({ curent_page : 0, isloaded : false})}\n                />\n\n                {/*Previous Page*/}\n                <Pagination.Prev\n                  disabled={this.state.page <= 0}\n                  onClick={e => this.setState({ curent_page : this.state.page -1 , isloaded : false})}\n                />\n\n                {/*Eveything in between - see block before return statement*/}\n                {inbetween}\n\n                {/*Next Page*/}\n                <Pagination.Next\n                  disabled={this.state.page >= this.state.total_pages - 1}\n                  onClick={e => this.setState({ curent_page : this.state.page +1 , isloaded : false})}\n                />\n\n                {/*Last Page*/}\n                <Pagination.Last\n                  onClick={e => this.setState({ curent_page : this.state.total_pages - 1 , isloaded : false})}\n                />\n              </Pagination>\n            </Row>\n           </Container>\n          <Table striped bordered hover responsive >\n            <th><center>Chemical Name</center></th>\n            <th><center>Inhalation Cancer Potency</center></th>\n            <th><center>Inhalation Cancer Source</center></th>\n            <th><center>Inhalation Reference Concentration</center></th>\n            <th><center>Inhalation Reference Source</center></th>\n            <th><center>National Ambient Air Quality Standards</center></th>\n            <th><center>National Ambient Air Quality Source</center></th>            \n            <tbody>\n            {this.state.objects.map((pollutant) => (\n              <tr>\n              <td>\n                <center>\n                  <Link to={\"/Pollutant/\" + pollutant.chemical_name}>\n                      <Highlighter\n                        highlightStyle={{backgroundColor: 'lightblue'}}\n                        searchWords={[this.props.searchstring]}\n                        autoEscape={true}\n                        textToHighlight= {pollutant.chemical_name}\n                      />\n                  </Link>                                    \n                </center>\n              </td>\n              <td><center>{pollutant.inhalation_cancer_potency} {pollutant.inhalation_cancer_potency_units}</center></td>\n              <td><center>{pollutant.inhalation_cancer_potency_source}</center></td>\n              <td><center>{pollutant.inhalation_reference_concentration} {pollutant.inhalation_reference_concentration_units}</center></td>\n              <td><center>{pollutant.inhalation_reference_concentration_source}</center></td>\n              <td><center>{pollutant.national_ambient_air_quality_std} {pollutant.national_ambient_air_quality_std_units}</center></td>\n              <td><center>{pollutant.national_ambient_air_quality_std_source}</center></td>              \n              </tr>\n            ))}\n            </tbody>\n          </Table>\n        </div>\n      );\n    } else {\n      this.componentDidMount();\n      return (\n        <div>\n         <center><img src = \"https://i.makeagif.com/media/9-30-2017/bhAyTs.gif\"/></center>\n        </div>\n      );\n   }\n  }\n}"]},"metadata":{},"sourceType":"module"}