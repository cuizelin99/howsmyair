{"ast":null,"code":"var _jsxFileName = \"/Users/davidbomm/SWE/cs373-airpollution/frontend/src/pages/Search.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader, CardDeck, CardColumns, CardSubtitle, CardBody, NavLink, UncontrolledCarousel, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Image, Col, Row, Pagination, Nav, Tabs, Tab, DropdownButton, Dropdown, ButtonToolbar, Table } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Link, Switch, BrowserHistory } from 'react-router-dom';\nimport { Locations, LocationsController } from './locations/Locations';\nimport { LocationTable } from './locations/LocationItems';\nimport { Illnesses, IllnessesController } from './illnesses/Illnesses';\nimport { IllnessTable } from './illnesses/IllnessItems';\nimport { Pollutants, PollutantsController } from './pollutants/Pollutants';\nimport { PollutantTable } from './pollutants/PollutantItems';\nimport { createBrowserHistory } from 'history';\nimport ReactDOM from 'react-dom';\nimport Highlighter from 'react-highlight-words';\n/*\nhttps://stackoverflow.com/questions/35976167/find-unique-values-from-an-array-in-react-js\n*/\n\nexport class Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchstring: null\n    };\n  }\n\n  componentDidMount() {\n    const key = this.props.match.params;\n  }\n\n  render() {\n    const key = this.props.match.params.key;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      justify: \"center\",\n      style: {\n        color: \"blue\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Tab.Content, {\n      eventKey: \"location\",\n      title: \"Location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(LocationResults, {\n      fieldname: \"city\",\n      searchstring: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"illness\",\n      title: \"Illness\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(IllnessResults, {\n      fieldname: \"illness_desc\",\n      searchstring: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"pollutants\",\n      title: \"Pollutants\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(PollutantResults, {\n      fieldname: \"chemical_name\",\n      searchstring: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }))));\n  }\n\n}\nexport class LocationResults extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setLocations = objects => {\n      this.setState({\n        locations: objects\n      });\n    };\n\n    this.state = {\n      searchfield: \"city\",\n      searchfieldDisplay: \"City\",\n      locations: null\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isloaded: true\n    });\n  }\n\n  render() {\n    // really hacky but it works for calling back without infinite looping\n    if (this.state.isloaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"row\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Select Search Field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            searchfield: \"city\",\n            searchfieldDisplay: \"City\",\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"City\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            searchfield: \"county_name\",\n            searchfieldDisplay: \"County\",\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"County\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            searchfield: \"state_name\",\n            searchfieldDisplay: \"State\",\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"State\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            searchfield: \"timezone\",\n            searchfieldDisplay: \"Time Zone\",\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"TimeZone\")), React.createElement(\"h6\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \" \", this.state.searchfieldDisplay, \" \"))), React.createElement(LocationsController, {\n        setObjects: this.setLocations,\n        searchfield: this.state.searchfield,\n        searchstring: this.props.searchstring,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(LocationTable, {\n        locations: this.state.locations,\n        searchstring: this.props.searchstring,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })));\n    } else {\n      this.componentDidMount();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      });\n    }\n  }\n\n}\nexport class IllnessResults extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setIllnesses = objects => {\n      this.setState({\n        illnesses: objects\n      });\n    };\n\n    this.state = {\n      searchfield: \"illness_name\",\n      searchfieldDisplay: \"Name\",\n      illnesses: null\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isloaded: true\n    });\n  }\n\n  render() {\n    // really hacky but it works for calling back without infinite looping\n    if (this.state.isloaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"row\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Select Search Field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            searchfield: \"illness_name\",\n            searchfieldDisplay: \"Name\",\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            searchfield: \"illness_symptoms\",\n            searchfieldDisplay: \"Symptoms\",\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Symptoms\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            searchfield: \"illness_desc\",\n            searchfieldDisplay: \"Description\",\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Description\")), React.createElement(\"h6\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \" \", this.state.searchfieldDisplay, \" \"))), React.createElement(IllnessesController, {\n        setObjects: this.setIllnesses,\n        searchfield: this.state.searchfield,\n        searchstring: this.props.searchstring,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(IllnessTable, {\n        illnesses: this.state.illnesses,\n        searchstring: this.props.searchstring,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      })));\n    } else {\n      this.componentDidMount();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      });\n    }\n  }\n\n}\nexport class PollutantResults extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setPollutants = objects => {\n      this.setState({\n        pollutants: objects\n      });\n    };\n\n    this.state = {\n      pollutants: null\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isloaded: true\n    });\n  }\n\n  render() {\n    // really hacky but it works for calling back without infinite looping\n    if (this.state.Objects == null) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(PollutantsController, {\n        setObjects: this.setPollutants,\n        searchstring: this.props.searchstring.toUpperCase(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(PollutantTable, {\n        pollutants: this.state.pollutants,\n        searchstring: this.props.searchstring.toUpperCase(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(PollutantsController, {\n        setObjects: null,\n        searchstring: this.props.searchstring.toUpperCase(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(PollutantTable, {\n        pollutants: this.state.pollutants,\n        searchstring: this.props.searchstring.toUpperCase(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      })));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/davidbomm/SWE/cs373-airpollution/frontend/src/pages/Search.js"],"names":["React","Component","useState","useEffect","Jumbotron","Container","Card","Button","CardImg","CardTitle","CardText","CardHeader","CardDeck","CardColumns","CardSubtitle","CardBody","NavLink","UncontrolledCarousel","Form","FormGroup","Label","Input","FormText","Image","Col","Row","Pagination","Nav","Tabs","Tab","DropdownButton","Dropdown","ButtonToolbar","Table","BrowserRouter","Router","Route","Link","Switch","BrowserHistory","Locations","LocationsController","LocationTable","Illnesses","IllnessesController","IllnessTable","Pollutants","PollutantsController","PollutantTable","createBrowserHistory","ReactDOM","Highlighter","Search","constructor","props","state","searchstring","componentDidMount","key","match","params","render","color","LocationResults","setLocations","objects","setState","locations","searchfield","searchfieldDisplay","isloaded","IllnessResults","setIllnesses","illnesses","PollutantResults","setPollutants","pollutants","Objects","toUpperCase"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect  } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader,\n         CardDeck, CardColumns, CardSubtitle, CardBody , NavLink, UncontrolledCarousel,\n         Form,FormGroup, Label, Input, FormText} from 'reactstrap';\nimport { Image, Col, Row, Pagination, Nav, Tabs, Tab, DropdownButton, Dropdown, ButtonToolbar, Table} from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Link , Switch, BrowserHistory } from 'react-router-dom';\nimport { Locations, LocationsController } from './locations/Locations'\nimport { LocationTable } from './locations/LocationItems'\nimport { Illnesses, IllnessesController } from './illnesses/Illnesses'\nimport { IllnessTable } from './illnesses/IllnessItems'\nimport { Pollutants, PollutantsController } from './pollutants/Pollutants'\nimport { PollutantTable } from './pollutants/PollutantItems'\n\nimport { createBrowserHistory } from 'history';\nimport ReactDOM from 'react-dom';\nimport Highlighter from 'react-highlight-words';\n/*\nhttps://stackoverflow.com/questions/35976167/find-unique-values-from-an-array-in-react-js\n*/\n\nexport class Search extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      searchstring : null\n    };\n  }\n\n    componentDidMount() {\n      const key = this.props.match.params;\n    }\n\n  render(){\n    const {key} = this.props.match.params;\n    return(\n        <div>\n        {/*Make tabs not look shitty*/}\n        <Tabs justify = \"center\" style = {{color:\"blue\"}}>\n          <Tab.Content eventKey=\"location\" title=\"Location\" >\n            <LocationResults fieldname = \"city\" searchstring = {key}/>\n          </Tab.Content>\n          <Tab eventKey=\"illness\" title=\"Illness\">\n            <IllnessResults fieldname = \"illness_desc\" searchstring = {key}/>\n          </Tab>\n          <Tab eventKey=\"pollutants\" title=\"Pollutants\">\n            <PollutantResults fieldname = \"chemical_name\" searchstring = {key}/>\n          </Tab>\n          </Tabs>\n          </div>\n    );\n  }\n}\n\nexport class LocationResults extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchfield : \"city\",\n      searchfieldDisplay : \"City\",\n      locations : null\n    }\n  }\n\n  componentDidMount(){\n    this.setState({\n      isloaded: true,\n    })\n  }\n\n  setLocations = (objects) => {\n    this.setState({\n      locations : objects,\n    })\n  }\n  render(){\n    // really hacky but it works for calling back without infinite looping\n    if (this.state.isloaded){\n      return(\n        <div>\n          <br/>\n          <row>\n            <center>\n              <DropdownButton id=\"dropdown-basic-button\" title=\"Select Search Field\">\n                <Dropdown.Item onClick={() => {this.setState({ searchfield : \"city\", searchfieldDisplay : \"City\", isloaded : false});}}>\n                  City\n                </Dropdown.Item>\n                <Dropdown.Item onClick={() => {this.setState({ searchfield : \"county_name\", searchfieldDisplay : \"County\", isloaded : false});}}>\n                  County\n                </Dropdown.Item>\n                <Dropdown.Item onClick={() => {this.setState({ searchfield : \"state_name\", searchfieldDisplay : \"State\", isloaded : false});}}>\n                  State\n                </Dropdown.Item>\n                <Dropdown.Item onClick={() => {this.setState({ searchfield : \"timezone\", searchfieldDisplay : \"Time Zone\", isloaded : false});}}>\n                  TimeZone\n                </Dropdown.Item>\n              </DropdownButton>\n              <h6 style={{color: '#1976d2'}}> {this.state.searchfieldDisplay} </h6>        \n            </center>            \n          </row>            \n          <LocationsController setObjects = {this.setLocations} searchfield = {this.state.searchfield} searchstring = {this.props.searchstring}>\n            <LocationTable locations = {this.state.locations} searchstring = {this.props.searchstring}/>\n          </LocationsController>\n        </div>\n      );            \n    } else {\n      this.componentDidMount();\n      return(\n        <div/>\n      );\n    }\n  }\n}\n\nexport class IllnessResults extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchfield : \"illness_name\",\n      searchfieldDisplay : \"Name\",      \n      illnesses : null,\n    }\n  }\n\n  componentDidMount(){\n    this.setState({\n      isloaded: true\n    })\n  }\n\n  setIllnesses = (objects) => {\n    this.setState({\n      illnesses : objects,\n    })\n  }\n\n  render(){\n    // really hacky but it works for calling back without infinite looping\n    if(this.state.isloaded){\n      return(\n        <div>\n          <br/>\n          <row>\n            <center>\n              <DropdownButton id=\"dropdown-basic-button\" title=\"Select Search Field\">\n                <Dropdown.Item onClick={() => {this.setState({ searchfield : \"illness_name\", searchfieldDisplay : \"Name\", isloaded : false});}}>\n                  Name\n                </Dropdown.Item>\n                <Dropdown.Item onClick={() => {this.setState({ searchfield : \"illness_symptoms\", searchfieldDisplay : \"Symptoms\", isloaded : false});}}>\n                  Symptoms\n                </Dropdown.Item>\n                <Dropdown.Item onClick={() => {this.setState({ searchfield : \"illness_desc\", searchfieldDisplay : \"Description\", isloaded : false});}}>\n                  Description\n                </Dropdown.Item>\n              </DropdownButton>\n              <h6 style={{color: '#1976d2'}}> {this.state.searchfieldDisplay} </h6>        \n            </center>            \n          </row>        \n          <IllnessesController setObjects = {this.setIllnesses} searchfield = {this.state.searchfield} searchstring = {this.props.searchstring}>\n            <IllnessTable illnesses = {this.state.illnesses} searchstring = {this.props.searchstring}/>\n          </IllnessesController>\n        </div>\n      );      \n    } else {\n      this.componentDidMount();      \n      return(\n        <div/>\n      );\n    }\n  }\n}\n\nexport class PollutantResults extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pollutants : null,\n    }\n  }\n\n  componentDidMount(){\n    this.setState({\n      isloaded: true\n    })\n  }\n\n  setPollutants = (objects) => {\n    this.setState({\n      pollutants : objects,\n    })\n  }\n\n  render(){\n    // really hacky but it works for calling back without infinite looping\n    if(this.state.Objects == null){\n      return(\n        <div>\n          <PollutantsController setObjects = {this.setPollutants} searchstring = {this.props.searchstring.toUpperCase()}>\n            <PollutantTable pollutants = {this.state.pollutants} searchstring = {this.props.searchstring.toUpperCase()}/>\n          </PollutantsController>\n        </div>\n      );      \n    } else {\n      return(\n        <div>\n          <PollutantsController setObjects = {null} searchstring = {this.props.searchstring.toUpperCase()}>\n            <PollutantTable pollutants = {this.state.pollutants} searchstring = {this.props.searchstring.toUpperCase()}/>\n          </PollutantsController>\n        </div>\n      );\n    }\n  }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}