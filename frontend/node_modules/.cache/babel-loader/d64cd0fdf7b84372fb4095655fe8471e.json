{"ast":null,"code":"var _jsxFileName = \"/Users/jasonlihuang/Documents/cs373-airpollution/frontend/src/visualizations/visual2.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nclass USMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.drawChart = this.drawChart.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('/api/getD3').then(response => response.json()).then(data => {\n      this.state['states'] = data;\n      console.log(this.state);\n      this.setState({});\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  drawChart(states) {\n    var map = {\n      'Alabama': 'AL',\n      'Alaska': 'AK',\n      'Arizona': 'AZ',\n      'Arkansas': 'AR',\n      'California': 'CA',\n      'Colorado': 'CO',\n      'Connecticut': 'CT',\n      'Delaware': 'DE',\n      'Florida': 'FL',\n      'Georgia': 'GA',\n      'Hawaii': 'HI',\n      'Idaho': 'ID',\n      'Illinois': 'IL',\n      'Indiana': 'IN',\n      'Iowa': 'IA',\n      'Kansas': 'KS',\n      'Kentucky': 'KY',\n      'Louisiana': 'LA',\n      'Maine': 'ME',\n      'Maryland': 'MD',\n      'Massachusetts': 'MA',\n      'Michigan': 'MI',\n      'Minnesota': 'MN',\n      'Mississippi': 'MS',\n      'Missouri': 'MO',\n      'Montana': 'MT',\n      'Nebraska': 'NE',\n      'Nevada': 'NV',\n      'New Hampshire': 'NH',\n      'New Jersey': 'NJ',\n      'New Mexico': 'NM',\n      'New York': 'NY',\n      'North Carolina': 'NC',\n      'North Dakota': 'ND',\n      'Ohio': 'OH',\n      'Oklahoma': 'OK',\n      'Oregon': 'OR',\n      'Pennsylvania': 'PA',\n      'Rhode Island': 'RI',\n      'South Carolina': 'SC',\n      'South Dakota': 'SD',\n      'Tennessee': 'TN',\n      'Texas': 'TX',\n      'Utah': 'UT',\n      'Vermont': 'VT',\n      'Virginia': 'VA',\n      'Washington': 'WA',\n      'West Virginia': 'WV',\n      'Wisconsin': 'WI',\n      'Wyoming': 'WY'\n    };\n\n    function tooltipHtml(data) {\n      /* function to create html content string in tooltip div. */\n      return \"<h4>\" + data + \"</h4><table>\" + \"<tr><td>\" + \"Production:  \" + \"</td><td>\" + states[map[data]] + \"</td></tr>\" + \"</table>\";\n    }\n\n    var sampleData = {};\n    [\"HI\", \"AK\", \"FL\", \"SC\", \"GA\", \"AL\", \"NC\", \"TN\", \"RI\", \"CT\", \"MA\", \"ME\", \"NH\", \"VT\", \"NY\", \"NJ\", \"PA\", \"DE\", \"MD\", \"WV\", \"KY\", \"OH\", \"MI\", \"WY\", \"MT\", \"ID\", \"WA\", \"DC\", \"TX\", \"CA\", \"AZ\", \"NV\", \"UT\", \"CO\", \"NM\", \"OR\", \"ND\", \"SD\", \"NE\", \"IA\", \"MS\", \"IN\", \"IL\", \"MN\", \"WI\", \"MO\", \"AR\", \"OK\", \"KS\", \"LA\", \"VA\"].forEach(function (d) {\n      var p = 1;\n\n      if (states === undefined) {\n        var x = 1;\n      } else {\n        p = states[d];\n        sampleData[d] = {\n          parks: p,\n          color: d3.interpolate(\"white\", \"black\")(p / 897)\n        };\n      }\n    });\n    /* draw states on id #statesvg */\n\n    uStates.draw(\"#statesvg\", sampleData, tooltipHtml);\n    d3.select(window.frameElement).style(\"height\", \"600px\");\n  }\n\n  render() {\n    var s = this.state['states'];\n    this.drawChart(s);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      style: {\n        padding: '2rem 25rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Energy Production by state\"), React.createElement(\"div\", {\n      id: \"tooltip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"svg\", {\n      width: \"960\",\n      height: \"600\",\n      id: \"statesvg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default StateMap;","map":{"version":3,"sources":["/Users/jasonlihuang/Documents/cs373-airpollution/frontend/src/visualizations/visual2.js"],"names":["React","Component","d3","USMap","constructor","props","state","drawChart","bind","componentDidMount","fetch","then","response","json","data","console","log","setState","catch","e","states","map","tooltipHtml","sampleData","forEach","d","p","undefined","x","parks","color","interpolate","uStates","draw","select","window","frameElement","style","render","s","padding","StateMap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;AAGA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC5BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACD;;AAEAC,EAAAA,iBAAiB,GAAG;AAEjBC,IAAAA,KAAK,CACH,YADG,CAAL,CAGGC,IAHH,CAGQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHpB,EAIGF,IAJH,CAIQG,IAAI,IAAI;AACV,WAAKR,KAAL,CAAW,QAAX,IAAuBQ,IAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAjB;AACA,WAAKW,QAAL,CAAc,EAAd;AAEH,KATH,EAUGC,KAVH,CAUSC,CAAC,IAAI;AACRJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,CAAZ;AACH,KAZH;AAeH;;AAEDZ,EAAAA,SAAS,CAACa,MAAD,EAAS;AAEhB,QAAIC,GAAG,GAAG;AACR,iBAAW,IADH;AAER,gBAAU,IAFF;AAGR,iBAAW,IAHH;AAIR,kBAAY,IAJJ;AAKR,oBAAc,IALN;AAMR,kBAAY,IANJ;AAOR,qBAAe,IAPP;AAQR,kBAAY,IARJ;AASR,iBAAW,IATH;AAUR,iBAAW,IAVH;AAWR,gBAAU,IAXF;AAYR,eAAS,IAZD;AAaR,kBAAY,IAbJ;AAcR,iBAAW,IAdH;AAeR,cAAQ,IAfA;AAgBR,gBAAU,IAhBF;AAiBR,kBAAY,IAjBJ;AAkBR,mBAAa,IAlBL;AAmBR,eAAS,IAnBD;AAoBR,kBAAY,IApBJ;AAqBR,uBAAiB,IArBT;AAsBR,kBAAY,IAtBJ;AAuBR,mBAAa,IAvBL;AAwBR,qBAAe,IAxBP;AAyBR,kBAAY,IAzBJ;AA0BR,iBAAW,IA1BH;AA2BR,kBAAY,IA3BJ;AA4BR,gBAAU,IA5BF;AA6BR,uBAAiB,IA7BT;AA8BR,oBAAc,IA9BN;AA+BR,oBAAc,IA/BN;AAgCR,kBAAY,IAhCJ;AAiCR,wBAAkB,IAjCV;AAkCR,sBAAgB,IAlCR;AAmCR,cAAQ,IAnCA;AAoCR,kBAAY,IApCJ;AAqCR,gBAAU,IArCF;AAsCR,sBAAgB,IAtCR;AAuCR,sBAAgB,IAvCR;AAwCR,wBAAkB,IAxCV;AAyCR,sBAAgB,IAzCR;AA0CR,mBAAa,IA1CL;AA2CR,eAAS,IA3CD;AA4CR,cAAQ,IA5CA;AA6CR,iBAAW,IA7CH;AA8CR,kBAAY,IA9CJ;AA+CR,oBAAc,IA/CN;AAgDR,uBAAiB,IAhDT;AAiDR,mBAAa,IAjDL;AAkDR,iBAAW;AAlDH,KAAV;;AAqDF,aAASC,WAAT,CAAqBR,IAArB,EAA0B;AAAE;AAC1B,aAAO,SAAOA,IAAP,GAAY,cAAZ,GACL,UADK,GACS,eADT,GAC4B,WAD5B,GACyCM,MAAM,CAACC,GAAG,CAACP,IAAD,CAAJ,CAD/C,GAC4D,YAD5D,GAEL,UAFF;AAGD;;AAEC,QAAIS,UAAU,GAAE,EAAhB;AACA,KAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EACA,IADA,EACM,IADN,EACY,IADZ,EACkB,IADlB,EACwB,IADxB,EAC8B,IAD9B,EACoC,IADpC,EAC0C,IAD1C,EACgD,IADhD,EACsD,IADtD,EAC4D,IAD5D,EAEA,IAFA,EAEM,IAFN,EAEY,IAFZ,EAEkB,IAFlB,EAEwB,IAFxB,EAE8B,IAF9B,EAEoC,IAFpC,EAE0C,IAF1C,EAEgD,IAFhD,EAEsD,IAFtD,EAE4D,IAF5D,EAGA,IAHA,EAGM,IAHN,EAGY,IAHZ,EAGkB,IAHlB,EAGwB,IAHxB,EAG8B,IAH9B,EAGoC,IAHpC,EAG0C,IAH1C,EAGgD,IAHhD,EAGsD,IAHtD,EAG4D,IAH5D,EAIA,IAJA,EAIM,IAJN,EAIY,IAJZ,EAIkB,IAJlB,EAIwB,IAJxB,EAI8B,IAJ9B,EAIoC,IAJpC,EAKGC,OALH,CAKW,UAASC,CAAT,EAAW;AAClB,UAAIC,CAAC,GAAG,CAAR;;AAEA,UAAGN,MAAM,KAAKO,SAAd,EAAwB;AACtB,YAAIC,CAAC,GAAG,CAAR;AACD,OAFD,MAGI;AAEFF,QAAAA,CAAC,GAAGN,MAAM,CAACK,CAAD,CAAV;AACAF,QAAAA,UAAU,CAACE,CAAD,CAAV,GAAc;AAACI,UAAAA,KAAK,EAAEH,CAAR;AACZI,UAAAA,KAAK,EAAC5B,EAAE,CAAC6B,WAAH,CAAe,OAAf,EAAwB,OAAxB,EAAiCL,CAAC,GAAC,GAAnC;AADM,SAAd;AAED;AAEF,KAlBH;AAoBA;;AACAM,IAAAA,OAAO,CAACC,IAAR,CAAa,WAAb,EAA0BV,UAA1B,EAAsCD,WAAtC;AAEApB,IAAAA,EAAE,CAACgC,MAAH,CAAUC,MAAM,CAACC,YAAjB,EAA+BC,KAA/B,CAAqC,QAArC,EAA+C,OAA/C;AAGD;;AAIDC,EAAAA,MAAM,GAAG;AAEP,QAAIC,CAAC,GAAG,KAAKjC,KAAL,CAAW,QAAX,CAAR;AACA,SAAKC,SAAL,CAAegC,CAAf;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAC;AAAT,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAEE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAK,MAAA,KAAK,EAAC,KAAX;AAAiB,MAAA,MAAM,EAAC,KAAxB;AAA8B,MAAA,EAAE,EAAC,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAQD;;AAnI2B;;AAqI9B,eAAeC,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\n\nclass USMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n    this.drawChart = this.drawChart.bind(this);\n  }\n\n   componentDidMount() {\n\n      fetch(\n        '/api/getD3'\n        )\n        .then(response => response.json())\n        .then(data => {\n            this.state['states'] = data\n            console.log(this.state)\n            this.setState({});\n\n        })\n        .catch(e => {\n            console.log(e);\n        })\n\n\n  }\n\n  drawChart(states) {\n\n    var map = {\n      'Alabama': 'AL',\n      'Alaska': 'AK',\n      'Arizona': 'AZ',\n      'Arkansas': 'AR',\n      'California': 'CA',\n      'Colorado': 'CO',\n      'Connecticut': 'CT',\n      'Delaware': 'DE',\n      'Florida': 'FL',\n      'Georgia': 'GA',\n      'Hawaii': 'HI',\n      'Idaho': 'ID',\n      'Illinois': 'IL',\n      'Indiana': 'IN',\n      'Iowa': 'IA',\n      'Kansas': 'KS',\n      'Kentucky': 'KY',\n      'Louisiana': 'LA',\n      'Maine': 'ME',\n      'Maryland': 'MD',\n      'Massachusetts': 'MA',\n      'Michigan': 'MI',\n      'Minnesota': 'MN',\n      'Mississippi': 'MS',\n      'Missouri': 'MO',\n      'Montana': 'MT',\n      'Nebraska': 'NE',\n      'Nevada': 'NV',\n      'New Hampshire': 'NH',\n      'New Jersey': 'NJ',\n      'New Mexico': 'NM',\n      'New York': 'NY',\n      'North Carolina': 'NC',\n      'North Dakota': 'ND',\n      'Ohio': 'OH',\n      'Oklahoma': 'OK',\n      'Oregon': 'OR',\n      'Pennsylvania': 'PA',\n      'Rhode Island': 'RI',\n      'South Carolina': 'SC',\n      'South Dakota': 'SD',\n      'Tennessee': 'TN',\n      'Texas': 'TX',\n      'Utah': 'UT',\n      'Vermont': 'VT',\n      'Virginia': 'VA',\n      'Washington': 'WA',\n      'West Virginia': 'WV',\n      'Wisconsin': 'WI',\n      'Wyoming': 'WY',\n  }\n\n  function tooltipHtml(data){ /* function to create html content string in tooltip div. */\n    return \"<h4>\"+data+\"</h4><table>\"+\n      \"<tr><td>\" + (\"Production:  \") + \"</td><td>\"+(states[map[data]])+\"</td></tr>\"+\n      \"</table>\";\n  }\n\n    var sampleData ={};\n    [\"HI\", \"AK\", \"FL\", \"SC\", \"GA\", \"AL\", \"NC\", \"TN\", \"RI\", \"CT\", \"MA\",\n    \"ME\", \"NH\", \"VT\", \"NY\", \"NJ\", \"PA\", \"DE\", \"MD\", \"WV\", \"KY\", \"OH\",\n    \"MI\", \"WY\", \"MT\", \"ID\", \"WA\", \"DC\", \"TX\", \"CA\", \"AZ\", \"NV\", \"UT\",\n    \"CO\", \"NM\", \"OR\", \"ND\", \"SD\", \"NE\", \"IA\", \"MS\", \"IN\", \"IL\", \"MN\",\n    \"WI\", \"MO\", \"AR\", \"OK\", \"KS\", \"LA\", \"VA\"]\n      .forEach(function(d){\n        var p = 1;\n\n        if(states === undefined){\n          var x = 1;\n        }\n        else{\n\n          p = states[d]\n          sampleData[d]={parks: p,\n            color:d3.interpolate(\"white\", \"black\")(p/897)};\n        }\n\n      });\n\n    /* draw states on id #statesvg */\n    uStates.draw(\"#statesvg\", sampleData, tooltipHtml);\n\n    d3.select(window.frameElement).style(\"height\", \"600px\");\n\n\n  }\n\n\n\n  render() {\n\n    var s = this.state['states']\n    this.drawChart(s);\n\n    return (\n      <div className=\"container\">\n        <h5 style={{padding:'2rem 25rem'}}>Energy Production by state</h5>\n        <div id=\"tooltip\"></div>\n        <svg width=\"960\" height=\"600\" id=\"statesvg\"></svg>\n      </div>\n    );\n\n  }\n}\nexport default StateMap;\n"]},"metadata":{},"sourceType":"module"}