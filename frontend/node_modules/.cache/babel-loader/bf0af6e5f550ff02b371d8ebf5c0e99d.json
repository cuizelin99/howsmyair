{"ast":null,"code":"var _jsxFileName = \"/home/jasonsim/School/cs373-airpollution/frontend/src/pages/illnesses/IllnessInstance.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader, CardDeck, CardColumns, CardSubtitle, CardBody, NavLink, UncontrolledCarousel, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Image, Col, Row, Pagination } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Link, Switch, BrowserHistory } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { createUltimatePagination, ITEM_TYPES } from 'react-ultimate-pagination';\nimport ReactDOM from 'react-dom';\n\nconst fetch = require(\"node-fetch\");\n\nconst ENDPOINT = 'https://api.howsmyair.me/illness';\nexport class RelatedIllness extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {}\n    };\n  }\n\n  componentDidMount() {\n    // get illness\n    fetch(ENDPOINT + '/' + this.props.illness_name).then(res => res.json()).then(data => {\n      this.setState({\n        data: data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Card, {\n      body: true,\n      style: {\n        backgroundColor: '#00',\n        borderColor: '#2255',\n        height: '22srem',\n        width: '22rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        cursor: 'pointer'\n      },\n      href: \"/Illness/\" + this.state.data.illness_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.state.data.illness_name)), React.createElement(CardImg, {\n      style: {\n        maxHeight: '16rem'\n      },\n      src: this.state.data.illness_image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nclass IllnessInstance extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      related_locations: [],\n      related_pollutants: []\n    };\n  }\n\n  componentDidMount() {\n    // get illness\n    fetch(ENDPOINT + '/' + this.props.illness_name).then(res => res.json()).then(data => {\n      this.setState({\n        data: data,\n        related_locations: data.related_locations,\n        related_pollutants: data.related_pollutants\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        cursor: 'pointer'\n      },\n      href: \"/Illness/\" + this.state.data.illness_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Card, {\n      body: true,\n      style: {\n        backgroundColor: '#00',\n        borderColor: '#2255',\n        height: '40rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(CardImg, {\n      style: {\n        maxHeight: '16rem'\n      },\n      src: this.state.data.illness_image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.data.illness_name)), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Lethality: \", this.state.data.illness_lethality, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), \"Symptoms: \", this.state.data.illness_symptoms, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), \"Contagious: \", this.state.data.illness_contagious, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), \"Treatable: \", this.state.data.illness_treatable))))));\n  }\n\n}\n\nexport default IllnessInstance;","map":{"version":3,"sources":["/home/jasonsim/School/cs373-airpollution/frontend/src/pages/illnesses/IllnessInstance.js"],"names":["React","Component","Jumbotron","Container","Card","Button","CardImg","CardTitle","CardText","CardHeader","CardDeck","CardColumns","CardSubtitle","CardBody","NavLink","UncontrolledCarousel","Form","FormGroup","Label","Input","FormText","Image","Col","Row","Pagination","BrowserRouter","Router","Route","Link","Switch","BrowserHistory","createBrowserHistory","createUltimatePagination","ITEM_TYPES","ReactDOM","fetch","require","ENDPOINT","RelatedIllness","constructor","props","state","data","componentDidMount","illness_name","then","res","json","setState","render","backgroundColor","borderColor","height","width","cursor","maxHeight","illness_image","IllnessInstance","related_locations","related_pollutants","illness_lethality","illness_symptoms","illness_contagious","illness_treatable"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kCAAP;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,IAA/B,EAAqCC,MAArC,EAA6CC,OAA7C,EAAsDC,SAAtD,EAAiEC,QAAjE,EAA2EC,UAA3E,EACSC,QADT,EACmBC,WADnB,EACgCC,YADhC,EAC8CC,QAD9C,EACyDC,OADzD,EACkEC,oBADlE,EAESC,IAFT,EAEcC,SAFd,EAEyBC,KAFzB,EAEgCC,KAFhC,EAEuCC,QAFvC,QAEsD,YAFtD;AAGA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,GAArB,EAA0BC,UAA1B,QAA2C,iBAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,EAAgDC,MAAhD,EAAuDC,cAAvD,QAA6E,kBAA7E;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,wBAAT,EAAmCC,UAAnC,QAAqD,2BAArD;AACA,OAAOC,QAAP,MAAqB,WAArB;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,YAAD,CAArB;;AAGA,MAAMC,QAAQ,GAAG,kCAAjB;AAEA,OAAO,MAAMC,cAAN,SAA6BrC,SAA7B,CAAuC;AAE5CsC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACbC,MAAAA,IAAI,EAAE;AADO,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AACjB;AACAR,IAAAA,KAAK,CAACE,QAAQ,GAAG,GAAX,GAAiB,KAAKG,KAAL,CAAWI,YAA7B,CAAL,CACIC,IADJ,CACSC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADhB,EAEIF,IAFJ,CAESH,IAAI,IAAI;AAAE,WAAKM,QAAL,CAAc;AAC3BN,QAAAA,IAAI,EAAEA;AADqB,OAAd;AAGlB,KALD;AAMD;;AAEFO,EAAAA,MAAM,GAAG;AACN,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAE,KAAnB;AAA0BC,QAAAA,WAAW,EAAE,OAAvC;AAAgDC,QAAAA,MAAM,EAAE,QAAxD;AAAkEC,QAAAA,KAAK,EAAC;AAAxE,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAV;AAAiC,MAAA,IAAI,EAAE,cAAc,KAAKb,KAAL,CAAWC,IAAX,CAAgBE,YAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKH,KAAL,CAAWC,IAAX,CAAgBE,YAArB,CADF,CADH,EAIG,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAEW,QAAAA,SAAS,EAAE;AAAb,OAAhB;AAAwC,MAAA,GAAG,EAAE,KAAKd,KAAL,CAAWC,IAAX,CAAgBc,aAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJH,CADA,CADA,CADD;AAYF;;AAhC2C;;AAmC9C,MAAMC,eAAN,SAA8BxD,SAA9B,CAAwC;AAErCsC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,IAAI,EAAE,EADM;AAEZgB,MAAAA,iBAAiB,EAAE,EAFP;AAGZC,MAAAA,kBAAkB,EAAE;AAHR,KAAb;AAKF;;AAEDhB,EAAAA,iBAAiB,GAAG;AACjB;AACAR,IAAAA,KAAK,CAACE,QAAQ,GAAG,GAAX,GAAiB,KAAKG,KAAL,CAAWI,YAA7B,CAAL,CACIC,IADJ,CACSC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADhB,EAEIF,IAFJ,CAESH,IAAI,IAAI;AAAE,WAAKM,QAAL,CAAc;AAC3BN,QAAAA,IAAI,EAAEA,IADqB;AAE3BgB,QAAAA,iBAAiB,EAAGhB,IAAI,CAACgB,iBAFE;AAG3BC,QAAAA,kBAAkB,EAAGjB,IAAI,CAACiB;AAHC,OAAd;AAKlB,KAPD;AAQD;;AACFV,EAAAA,MAAM,GAAG;AACN,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAG,MAAA,KAAK,EAAE;AAAEK,QAAAA,MAAM,EAAE;AAAV,OAAV;AAAiC,MAAA,IAAI,EAAE,cAAc,KAAKb,KAAL,CAAWC,IAAX,CAAgBE,YAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,KAAK,EAAE;AAAEM,QAAAA,eAAe,EAAE,KAAnB;AAA0BC,QAAAA,WAAW,EAAE,OAAvC;AAAgDC,QAAAA,MAAM,EAAE;AAAxD,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAEG,QAAAA,SAAS,EAAE;AAAb,OAAhB;AAAwC,MAAA,GAAG,EAAE,KAAKd,KAAL,CAAWC,IAAX,CAAgBc,aAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADL,EAEG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKf,KAAL,CAAWC,IAAX,CAAgBE,YAArB,CAHF,CAFH,EAOG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAe,KAAKH,KAAL,CAAWC,IAAX,CAAgBkB,iBAA/B,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,gBACgB,KAAKnB,KAAL,CAAWC,IAAX,CAAgBmB,gBADhC,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,kBAEkB,KAAKpB,KAAL,CAAWC,IAAX,CAAgBoB,kBAFlC,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,iBAGiB,KAAKrB,KAAL,CAAWC,IAAX,CAAgBqB,iBAHjC,CADF,CADA,CAPH,CADA,CADA,CADD;AAuBF;;AA9CqC;;AAiDxC,eAAeN,eAAf","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader,\n         CardDeck, CardColumns, CardSubtitle, CardBody , NavLink, UncontrolledCarousel,\n         Form,FormGroup, Label, Input, FormText} from 'reactstrap';\nimport { Image, Col, Row, Pagination} from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Link , Switch,BrowserHistory } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { createUltimatePagination, ITEM_TYPES } from 'react-ultimate-pagination';\nimport ReactDOM from 'react-dom';\nconst fetch = require(\"node-fetch\");\n\n\nconst ENDPOINT = 'https://api.howsmyair.me/illness';\n\nexport class RelatedIllness extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n      data: {}\n    };\n  }\n\n  componentDidMount() {\n     // get illness\n     fetch(ENDPOINT + '/' + this.props.illness_name)\n        .then(res => res.json())\n        .then(data => { this.setState({\n           data: data\n        })\n     })\n   };\n\n  render() {\n     return (\n      <div>\n      <Card body style={{ backgroundColor: '#00', borderColor: '#2255', height: '22srem', width:'22rem' }}>\n      <a style={{ cursor: 'pointer' }} href={\"/Illness/\" + this.state.data.illness_name}>\n         <CardHeader>\n           <h5>{this.state.data.illness_name}</h5>\n         </CardHeader>\n         <CardImg style={{ maxHeight: '16rem' }} src={this.state.data.illness_image} />\n      </a>\n      </Card>\n      </div>\n     );\n  }\n}\n\nclass IllnessInstance extends Component {\n\n   constructor(props) {\n     super(props);\n     this.state = {\n      data: {},\n      related_locations: [],\n      related_pollutants: []\n     };\n  }\n\n  componentDidMount() {\n     // get illness\n     fetch(ENDPOINT + '/' + this.props.illness_name)\n        .then(res => res.json())\n        .then(data => { this.setState({\n           data: data,\n           related_locations : data.related_locations,\n           related_pollutants : data.related_pollutants\n        })\n     })\n   };\n  render() {\n     return (\n      <div>\n      <a style={{ cursor: 'pointer' }} href={\"/Illness/\" + this.state.data.illness_name}>\n      <Card body style={{ backgroundColor: '#00', borderColor: '#2255', height: '40rem' }}>\n           <CardImg style={{ maxHeight: '16rem' }} src={this.state.data.illness_image} />\n         <CardHeader>\n           {/* The dynamic link is arranged this way through the NavBar.js\n           and back to the Location component*/}\n           <h5>{this.state.data.illness_name}</h5>\n         </CardHeader>\n         <CardBody>\n         <CardText>\n           <p>Lethality: {this.state.data.illness_lethality}\n           <br/>Symptoms: {this.state.data.illness_symptoms}\n           <br/>Contagious: {this.state.data.illness_contagious}\n           <br/>Treatable: {this.state.data.illness_treatable}\n           </p>\n         </CardText>\n         </CardBody>\n      </Card>\n      </a>\n      </div>\n     );\n  }\n}\n\nexport default IllnessInstance;\n"]},"metadata":{},"sourceType":"module"}