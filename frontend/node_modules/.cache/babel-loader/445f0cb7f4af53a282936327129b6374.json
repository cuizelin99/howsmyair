{"ast":null,"code":"var _jsxFileName = \"/Users/jasonlihuang/Documents/cs373-airpollution/frontend/src/pages/pollutants/PollutantItems.js\";\nimport React, { Component } from 'react';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader, CardDeck, CardColumns, CardSubtitle, CardBody, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Col, Row, Pagination, DropdownButton, Dropdown, Table } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Highlighter from 'react-highlight-words';\nimport { setUnknownAttributes } from './Pollutants';\n\nconst fetch = require(\"node-fetch\");\n\nexport const Pollutantcards = props => {\n  console.log(props.searchstring);\n\n  if (props != null && props.pollutants != null) {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      className: \"spacing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, props.pollutants.map(pollutant => React.createElement(Col, {\n      className: \"spacing\",\n      lg: \"4\",\n      sm: \"6\",\n      xs: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        cursor: 'pointer'\n      },\n      href: \"/Pollutant/\" + pollutant.chemical_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Card, {\n      body: true,\n      style: {\n        backgroundColor: '#00',\n        borderColor: '#2255',\n        height: '42rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(CardImg, {\n      src: pollutant.chemspider_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, pollutant.chemical_name)), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Cancer Potency\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), \"Potency: \", setUnknownAttributes(pollutant.inhalation_cancer_potency), \" \", pollutant.inhalation_cancer_potency_units, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), \"Source: \", setUnknownAttributes(pollutant.inhalation_cancer_potency_source), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Inhalation Reference Concentration\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), \"Concentration: \", setUnknownAttributes(pollutant.inhalation_reference_concentration), \" \", pollutant.inhalation_reference_concentration_units, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), \"Source: \", setUnknownAttributes(pollutant.inhalation_reference_concentration_source), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"National Ambient Air Quality\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), \"Standard: \", setUnknownAttributes(pollutant.national_ambient_air_quality_std), \" \", pollutant.national_ambient_air_quality_std_units, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), \"Source: \", setUnknownAttributes(pollutant.national_ambient_air_quality_std_source))))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })))));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"shit ain't loading\");\n  }\n};\nexport const PollutantTable = props => {\n  if (props.pollutants != null && props.pollutants != null && typeof props.searchstring != \"undefined\") {\n    return React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Chemical Name\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Inhalation Cancer Potency\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Inhalation Cancer Source\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Inhalation Reference Concentration\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Inhalation Reference Source\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"National Ambient Air Quality Standards\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"National Ambient Air Quality Source\")), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, props.pollutants.map(pollutant => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Pollutant/\" + pollutant.chemical_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Highlighter, {\n      highlightStyle: {\n        backgroundColor: 'lightblue'\n      },\n      searchWords: [props.searchstring],\n      autoEscape: true,\n      textToHighlight: pollutant.chemical_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, pollutant.inhalation_cancer_potency, \" \", pollutant.inhalation_cancer_potency_units)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, pollutant.inhalation_cancer_potency_source)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, pollutant.inhalation_reference_concentration, \" \", pollutant.inhalation_reference_concentration_units)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, pollutant.inhalation_reference_concentration_source)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, pollutant.national_ambient_air_quality_std, \" \", pollutant.national_ambient_air_quality_std_units)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, pollutant.national_ambient_air_quality_std_source))))));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"shit ain't loading\");\n  }\n};","map":{"version":3,"sources":["/Users/jasonlihuang/Documents/cs373-airpollution/frontend/src/pages/pollutants/PollutantItems.js"],"names":["React","Component","Jumbotron","Container","Card","Button","CardImg","CardTitle","CardText","CardHeader","CardDeck","CardColumns","CardSubtitle","CardBody","Form","FormGroup","Label","Input","FormText","Col","Row","Pagination","DropdownButton","Dropdown","Table","Link","Highlighter","setUnknownAttributes","fetch","require","Pollutantcards","props","console","log","searchstring","pollutants","map","pollutant","cursor","chemical_name","backgroundColor","borderColor","height","chemspider_id","inhalation_cancer_potency","inhalation_cancer_potency_units","inhalation_cancer_potency_source","inhalation_reference_concentration","inhalation_reference_concentration_units","inhalation_reference_concentration_source","national_ambient_air_quality_std","national_ambient_air_quality_std_units","national_ambient_air_quality_std_source","PollutantTable"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, \n        CardHeader,  CardDeck, CardColumns, CardSubtitle, CardBody,\n        Form,FormGroup, Label, Input, FormText } from 'reactstrap';\nimport {Col, Row, Pagination, DropdownButton, Dropdown, Table} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Highlighter from 'react-highlight-words';\nimport { setUnknownAttributes } from './Pollutants'  \n\nconst fetch = require(\"node-fetch\");\n\nexport const Pollutantcards = ( props ) => {\n  console.log(props.searchstring)\n  if(props != null && props.pollutants != null){\n    return(\n      <Container>\n        <Row className=\"justify-content-md-center\" className=\"spacing\">\n          {props.pollutants.map((pollutant) => (\n             <Col className=\"spacing\" lg=\"4\" sm=\"6\" xs=\"12\">\n             <a style={{ cursor: 'pointer' }} href={\"/Pollutant/\" + pollutant.chemical_name}>\n             <Card body style={{ backgroundColor: '#00', borderColor: '#2255', height: '42rem' }}>\n               <CardImg src = {pollutant.chemspider_id}/>\n               <CardHeader>\n                 {/* The dynamic link is arranged this way through the NavBar.js\n                 and back to the Location component*/}\n                 <h5>{pollutant.chemical_name}</h5>\n               </CardHeader>\n               <CardBody>\n               <CardText>\n                 <b>Cancer Potency</b>\n                 <br/>Potency: {setUnknownAttributes(pollutant.inhalation_cancer_potency)} {pollutant.inhalation_cancer_potency_units}\n                 <br/>Source: {setUnknownAttributes(pollutant.inhalation_cancer_potency_source)}\n                 <br/><b>Inhalation Reference Concentration</b>\n                 <br/>Concentration: {setUnknownAttributes(pollutant.inhalation_reference_concentration)} {pollutant.inhalation_reference_concentration_units}\n                 <br/>Source: {setUnknownAttributes(pollutant.inhalation_reference_concentration_source)}\n                 <br/><b>National Ambient Air Quality</b>\n                 <br/>Standard: {setUnknownAttributes(pollutant.national_ambient_air_quality_std)} {pollutant.national_ambient_air_quality_std_units}\n                 <br/>Source: {setUnknownAttributes(pollutant.national_ambient_air_quality_std_source)}\n               </CardText>\n               </CardBody>\n            </Card>\n            </a>\n           <p />\n           </Col>\n          ))}\n        </Row>\n      </Container>\n    )\n  } else {\n    return(<div>shit ain't loading</div>);\n  }\n};\n\n\nexport const PollutantTable = (props) => {\n  if(props.pollutants != null && props.pollutants != null && typeof props.searchstring != \"undefined\"){\n    return (\n      <Table striped bordered hover responsive >\n        <th><center>Chemical Name</center></th>\n        <th><center>Inhalation Cancer Potency</center></th>\n        <th><center>Inhalation Cancer Source</center></th>\n        <th><center>Inhalation Reference Concentration</center></th>\n        <th><center>Inhalation Reference Source</center></th>\n        <th><center>National Ambient Air Quality Standards</center></th>\n        <th><center>National Ambient Air Quality Source</center></th>            \n        <tbody>\n        {props.pollutants.map((pollutant) => (\n          <tr>\n          <td>\n            <center>\n              <Link to={\"/Pollutant/\" + pollutant.chemical_name}>\n                  <Highlighter\n                    highlightStyle={{backgroundColor: 'lightblue'}}\n                    searchWords={[props.searchstring]}\n                    autoEscape={true}\n                    textToHighlight= {pollutant.chemical_name}\n                  />\n              </Link>                                    \n            </center>\n          </td>\n          <td><center>{pollutant.inhalation_cancer_potency} {pollutant.inhalation_cancer_potency_units}</center></td>\n          <td><center>{pollutant.inhalation_cancer_potency_source}</center></td>\n          <td><center>{pollutant.inhalation_reference_concentration} {pollutant.inhalation_reference_concentration_units}</center></td>\n          <td><center>{pollutant.inhalation_reference_concentration_source}</center></td>\n          <td><center>{pollutant.national_ambient_air_quality_std} {pollutant.national_ambient_air_quality_std_units}</center></td>\n          <td><center>{pollutant.national_ambient_air_quality_std_source}</center></td>              \n          </tr>\n        ))}\n        </tbody>\n      </Table>\n    );\n  } else {\n    return(<div>shit ain't loading</div>);    \n  }\n}"]},"metadata":{},"sourceType":"module"}