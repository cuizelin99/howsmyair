{"ast":null,"code":"var _jsxFileName = \"/Users/jasonlihuang/Documents/cs373-airpollution/frontend/src/pages/locations/Locations.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader, CardDeck, CardColumns, CardSubtitle, CardBody, NavLink, UncontrolledCarousel, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Image, Col, Row, Pagination, DropdownButton, Dropdown } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Link, Switch, BrowserHistory } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { createUltimatePagination, ITEM_TYPES } from 'react-ultimate-pagination';\nimport ReactDOM from 'react-dom';\nimport Illnesses from '../illnesses/Illnesses';\nimport Pollutants from '../pollutants/Pollutants';\nimport PollutantInstance from '../pollutants/PollutantInstance';\nimport IllnessInstance from '../illnesses/IllnessInstance';\n/**\nSources:\n\nPagination sources:\nhttps://github.com/react-bootstrap/pagination\nhttps://www.npmjs.com/package/react-ultimate-pagination\nhttps://codepen.io/joedazza/pen/BVXVej\n**/\n\nconst ENDPOINT = 'https://api.howsmyair.me/location';\nexport class Location extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      location_url: null,\n      related_illnesses: [],\n      related_pollutants: []\n    };\n  }\n\n  componentDidMount() {\n    const key = this.props.match.params.key; // get location\n\n    fetch(ENDPOINT + '/' + key).then(res => res.json()).then(data => {\n      this.setState({\n        data: data,\n        location_url: \"https://maps.googleapis.com/maps/api/staticmap?center=\" + data.latitude + \",\" + data.longitude + \"&zoom=12&size=400x400\" + \"&markers=color:green%7Clabel:G%7C\" + data.latitude + \",\" + data.longitude + \"&key=AIzaSyB-U0Z7cqufI-MHmRwfLmgqDCyQmOlIq48\",\n        related_illnesses: data.related_illnesses,\n        related_pollutants: data.related_pollutants\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.data.city), React.createElement(\"h2\", {\n      class: \"card-subtitle mb-2 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.data.state_name), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), \"County: \", this.state.data.county_name, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), \"Latitude: \", this.state.data.latitude, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), \"Longitude: \", this.state.data.longitude, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), \"Population: \", this.state.data.population, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), \"Density (per sq. mile): \", this.state.data.density, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), \"Time Zone: \", this.state.data.timezone), React.createElement(\"img\", {\n      src: this.state.location_url,\n      alt: \"Italian Trulli\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \" Related Illnesses \"), this.state.related_illnesses.map(illness => React.createElement(CardColumns, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(IllnessInstance, {\n      illness_name: illness.illness_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))))), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \" Related Polluants \"), this.state.related_pollutants.map(pollutant => React.createElement(CardColumns, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(PollutantInstance, {\n      pollutant_name: pollutant.pollutant_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }))))));\n  }\n\n}\nexport class Locations extends Component {\n  /* This right here is like object attributes */\n  constructor(props) {\n    super(props);\n    this.state = {\n      num_results: null,\n      objects: [],\n      page: null,\n      total_pages: null,\n      req: null,\n      filter_query: null,\n      sort_query: null,\n      is_loaded: false\n    };\n    this.filter = this.filter.bind(this);\n  }\n  /* When the component is loaded, here's init */\n\n\n  componentDidMount() {\n    fetch(ENDPOINT).then(res => res.json()).then(data => {\n      this.setState({\n        num_results: data.num_results,\n        objects: data.objects,\n        page: data.page - 1,\n        total_pages: data.total_pages,\n        is_loaded: true\n      });\n    });\n  }\n  /*\n  This portion of our code was taken from the following repository:\n  https://gitlab.com/stubbsnc/globalantidote/blob/production/dynamic-site/src/pages/locations.js\n  */\n\n\n  makeURL() {\n    var sort_query = this.state.sort_query;\n    var filter_query = this.state.filter_query;\n\n    if (sort_query == null && filter_query == null) {\n      return ENDPOINT + \"?page=\" + this.state.cur_page;\n    } else if (sort_query != null && filter_query == null) {\n      return ENDPOINT + \"?q={\" + this.state.sort_query + \"}&page=\" + this.state.cur_page;\n    } else if (sort_query == null && filter_query != null) {\n      return ENDPOINT + \"?q={\" + this.state.filter_query + \"}&page=\" + this.state.cur_page;\n    } else {\n      return ENDPOINT + \"?q={\" + this.state.sort_query + \",\" + this.state.filter_query + \"}&page=\" + this.state.cur_page;\n    }\n  }\n\n  filter() {\n    this.setState({\n      filter_query: \"filters\\\"\\:[{\\\"name\\\"\\:\\\"city\\\",\\\"op\\\":\\\"eq\\\",\\\"val\\\"\\:\\\"Rochester\\'}]\",\n      is_loaded: false\n    });\n  }\n  /* Here's how we are going to handle clicks for pagination\n     Really only two things about the current state changes:\n     the current page numbers, and the results shown\n  */\n\n\n  handleClick(e, index) {\n    e.preventDefault();\n    fetch(ENDPOINT + \"?page=\" + (index + 1)).then(res => res.json()).then(data => {\n      this.setState({\n        num_results: data.num_results,\n        objects: data.objects,\n        page: data.page - 1,\n        total_pages: data.total_pages\n      });\n    });\n  }\n  /* Here's how the Locations Page is rendered*/\n\n  /* Source: looking at example of pagination for Global Antidote\n     https://gitlab.com/stubbsnc/globalantidote/blob/production/dynamic-site/src/pages*/\n\n\n  render() {\n    if (this.state.is_loaded) {\n      let span = 4;\n      let page = this.state.page;\n      let end = this.state.total_pages - 1;\n      let l = page - span / 2;\n      let r = page + span / 2;\n      let inbetween = [];\n\n      if (page - span < 0) {\n        for (let p = 0; p <= span; p++) {\n          inbetween.push(React.createElement(Pagination.Item, {\n            active: p === page,\n            onClick: e => this.handleClick(e, p),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 206\n            },\n            __self: this\n          }, p + 1));\n        }\n      } else if (page + span > end) {\n        for (let p = end - span; p <= end; p++) {\n          inbetween.push(React.createElement(Pagination.Item, {\n            active: p === page,\n            onClick: e => this.handleClick(e, p),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 217\n            },\n            __self: this\n          }, p + 1));\n        }\n      } else {\n        for (let p = l < 0 ? 0 : l; p <= r && p <= end; p++) {\n          inbetween.push(React.createElement(Pagination.Item, {\n            active: p === page,\n            onClick: e => this.handleClick(e, p),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 228\n            },\n            __self: this\n          }, p + 1));\n        }\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Locations\"), this.state.num_results, \" Results, Page \", this.state.page + 1, \" / \", this.state.total_pages), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Population\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: this.filter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"Greater than 100,000\"), React.createElement(Dropdown.Item, {\n        href: \"#/action-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"Less than 100,000\"))), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(Pagination, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(Pagination.First, {\n        onClick: e => this.handleClick(e, 0),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), React.createElement(Pagination.Prev, {\n        disabled: this.state.page <= 0,\n        onClick: e => this.handleClick(e, this.state.page - 1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }), inbetween, React.createElement(Pagination.Next, {\n        disabled: this.state.page >= this.state.total_pages - 1,\n        onClick: e => this.handleClick(e, this.state.page + 1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }), React.createElement(Pagination.Last, {\n        onClick: e => this.handleClick(e, this.state.total_pages - 1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      })))), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        className: \"spacing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, this.state.objects.map(location => React.createElement(Col, {\n        className: \"spacing\",\n        lg: \"4\",\n        sm: \"6\",\n        xs: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(Card, {\n        body: true,\n        style: {\n          backgroundColor: '#00',\n          borderColor: '#2255'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(CardImg, {\n        src: \"https://maps.googleapis.com/maps/api/staticmap?center=\" + location.latitude + \",\" + location.longitude + \"&zoom=12&size=400x400\" + \"&markers=color:green%7Clabel:G%7C\" + location.latitude + \",\" + location.longitude + \"&key=AIzaSyB-U0Z7cqufI-MHmRwfLmgqDCyQmOlIq48\",\n        alt: \"Italian Trulli\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }), React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/Location/\" + location.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, location.city)), React.createElement(\"h6\", {\n        class: \"card-subtitle mb-2 text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, location.state_name)), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(CardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"County: \", location.county_name, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }), \"Latitude: \", location.latitude, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }), \"Longitude: \", location.longitude, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }), \"Population: \", location.population, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }), \"Density (per sq. mile): \", location.density, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }), \"Time Zone: \", location.timezone)))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }))))));\n    }\n  }\n\n}\nexport default createUltimatePagination({\n  WrapperComponent: Pagination,\n  itemTypeToComponent: {\n    [ITEM_TYPES.PAGE]: ({\n      value,\n      isActive,\n      onClick\n    }) => React.createElement(Pagination.Item, {\n      active: isActive,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, value),\n    [ITEM_TYPES.ELLIPSIS]: ({\n      isActive,\n      onClick\n    }) => React.createElement(Pagination.Ellipsis, {\n      disabled: isActive,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }),\n    [ITEM_TYPES.FIRST_PAGE_LINK]: ({\n      isActive,\n      onClick\n    }) => React.createElement(Pagination.First, {\n      disabled: isActive,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }),\n    [ITEM_TYPES.PREVIOUS_PAGE_LINK]: ({\n      isActive,\n      onClick\n    }) => React.createElement(Pagination.Prev, {\n      disabled: isActive,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }),\n    [ITEM_TYPES.NEXT_PAGE_LINK]: ({\n      isActive,\n      onClick\n    }) => React.createElement(Pagination.Next, {\n      disabled: isActive,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }),\n    [ITEM_TYPES.LAST_PAGE_LINK]: ({\n      isActive,\n      onClick\n    }) => React.createElement(Pagination.Last, {\n      disabled: isActive,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    })\n  }\n});","map":{"version":3,"sources":["/Users/jasonlihuang/Documents/cs373-airpollution/frontend/src/pages/locations/Locations.js"],"names":["React","Component","Jumbotron","Container","Card","Button","CardImg","CardTitle","CardText","CardHeader","CardDeck","CardColumns","CardSubtitle","CardBody","NavLink","UncontrolledCarousel","Form","FormGroup","Label","Input","FormText","Image","Col","Row","Pagination","DropdownButton","Dropdown","BrowserRouter","Router","Route","Link","Switch","BrowserHistory","createBrowserHistory","createUltimatePagination","ITEM_TYPES","ReactDOM","Illnesses","Pollutants","PollutantInstance","IllnessInstance","ENDPOINT","Location","constructor","props","state","data","location_url","related_illnesses","related_pollutants","componentDidMount","key","match","params","fetch","then","res","json","setState","latitude","longitude","render","city","state_name","county_name","population","density","timezone","map","illness","illness_name","pollutant","pollutant_name","Locations","num_results","objects","page","total_pages","req","filter_query","sort_query","is_loaded","filter","bind","makeURL","cur_page","handleClick","e","index","preventDefault","span","end","l","r","inbetween","p","push","location","backgroundColor","borderColor","id","WrapperComponent","itemTypeToComponent","PAGE","value","isActive","onClick","ELLIPSIS","FIRST_PAGE_LINK","PREVIOUS_PAGE_LINK","NEXT_PAGE_LINK","LAST_PAGE_LINK"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader,\n         CardDeck, CardColumns, CardSubtitle, CardBody , NavLink, UncontrolledCarousel,\n         Form,FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Image, Col, Row, Pagination, DropdownButton, Dropdown } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Link , Switch,BrowserHistory } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { createUltimatePagination, ITEM_TYPES } from 'react-ultimate-pagination';\nimport ReactDOM from 'react-dom';\nimport Illnesses from '../illnesses/Illnesses';\nimport Pollutants from '../pollutants/Pollutants';\nimport PollutantInstance from '../pollutants/PollutantInstance';\nimport IllnessInstance from '../illnesses/IllnessInstance';\n\n/**\nSources:\n\nPagination sources:\nhttps://github.com/react-bootstrap/pagination\nhttps://www.npmjs.com/package/react-ultimate-pagination\nhttps://codepen.io/joedazza/pen/BVXVej\n**/\n\nconst ENDPOINT = 'https://api.howsmyair.me/location';\n\nexport class Location extends Component {\n\n   constructor(props) {\n      super(props);\n      this.state = {\n        data: {},\n        location_url : null,\n        related_illnesses: [],\n        related_pollutants: []\n      };\n   }\n\n   componentDidMount() {\n\n      const {key} = this.props.match.params;\n\n      // get location\n      fetch(ENDPOINT + '/' + key)\n         .then(res => res.json())\n         .then(data => { this.setState({\n            data: data,\n            location_url : \"https://maps.googleapis.com/maps/api/staticmap?center=\"+\n                            data.latitude+\",\"+data.longitude+\n                            \"&zoom=12&size=400x400\"+\n                            \"&markers=color:green%7Clabel:G%7C\"+\n                            data.latitude+\",\"+data.longitude +\n                            \"&key=AIzaSyB-U0Z7cqufI-MHmRwfLmgqDCyQmOlIq48\",\n            related_illnesses : data.related_illnesses,\n            related_pollutants : data.related_pollutants\n         })\n      })\n   };\n\n   render() {\n      return (\n        <div>\n            <Container>\n            <p>\n            <br/>\n            <h1>{this.state.data.city}</h1>\n            <h2 class = \"card-subtitle mb-2 text-muted\">{this.state.data.state_name}</h2>\n            <br/>\n            County: {this.state.data.county_name}\n            <br/>Latitude: {this.state.data.latitude}\n            <br/>Longitude: {this.state.data.longitude}\n            <br/>Population: {this.state.data.population}\n            <br/>Density (per sq. mile): {this.state.data.density}\n            <br/>Time Zone: {this.state.data.timezone}\n            </p>\n            <img src={this.state.location_url} alt=\"Italian Trulli\"/>\n            </Container>\n\n            {/*related illnessess*/}\n            <Container>\n            <Jumbotron>\n            <h6> Related Illnesses </h6>\n            {this.state.related_illnesses.map((illness) => (\n               <CardColumns>\n                  <IllnessInstance illness_name={illness.illness_name} />\n               </CardColumns>\n            ))}\n            </Jumbotron>\n            </Container>\n\n            {/*related pollutants*/}\n            <Container>\n            <Jumbotron>\n            <h6> Related Polluants </h6>\n            {this.state.related_pollutants.map((pollutant) => (\n               <CardColumns>\n                 <PollutantInstance pollutant_name={pollutant.pollutant_name} />\n              </CardColumns>\n            ))}\n            </Jumbotron>\n            </Container>\n        </div>\n      );\n   }\n}\n\nexport class Locations extends Component {\n\n   /* This right here is like object attributes */\n  constructor(props) {\n    super(props);\n    this.state = {\n      num_results: null,\n      objects: [],\n      page: null,\n      total_pages: null,\n      req : null,\n      filter_query : null,\n      sort_query : null,\n      is_loaded: false\n   };\n\n    this.filter = this.filter.bind(this);\n   }\n\n\n\n\n  /* When the component is loaded, here's init */\n  componentDidMount() {\n    fetch(ENDPOINT)\n       .then(res => res.json())\n       .then(data => { this.setState({\n          num_results: data.num_results,\n          objects: data.objects,\n          page: data.page-1,\n          total_pages: data.total_pages,\n          is_loaded : true\n       })\n    })\n  }\n\n\n  /*\n  This portion of our code was taken from the following repository:\n  https://gitlab.com/stubbsnc/globalantidote/blob/production/dynamic-site/src/pages/locations.js\n  */\n  makeURL() {\n    var sort_query = this.state.sort_query;\n    var filter_query = this.state.filter_query;\n    if(sort_query == null && filter_query == null){\n      return ENDPOINT + \"?page=\" + this.state.cur_page;\n    }\n    else if(sort_query != null && filter_query == null){\n      return ENDPOINT + \"?q={\" + this.state.sort_query + \"}&page=\" + this.state.cur_page;\n    }\n    else if(sort_query == null && filter_query != null){\n      return ENDPOINT + \"?q={\" + this.state.filter_query + \"}&page=\" + this.state.cur_page;\n    }\n    else{\n      return ENDPOINT + \"?q={\" + this.state.sort_query + \",\" + this.state.filter_query + \"}&page=\" + this.state.cur_page;\n    }\n  }\n\n\n  filter() {\n      this.setState({filter_query : \"filters\\\"\\:[{\\\"name\\\"\\:\\\"city\\\",\\\"op\\\":\\\"eq\\\",\\\"val\\\"\\:\\\"Rochester\\'}]\",\n                     is_loaded : false});\n  }\n\n\n\n  /* Here's how we are going to handle clicks for pagination\n     Really only two things about the current state changes:\n     the current page numbers, and the results shown\n  */\n   handleClick(e, index) {\n      e.preventDefault();\n      fetch(ENDPOINT + \"?page=\" + (index + 1))\n         .then(res => res.json())\n         .then(data => { this.setState({\n            num_results: data.num_results,\n            objects: data.objects,\n            page: data.page - 1,\n            total_pages: data.total_pages\n         })\n      })\n   }\n\n\n   /* Here's how the Locations Page is rendered*/\n   /* Source: looking at example of pagination for Global Antidote\n      https://gitlab.com/stubbsnc/globalantidote/blob/production/dynamic-site/src/pages*/\n   render() {\n      if (this.state.is_loaded) {\n      let span = 4\n      let page = this.state.page\n      let end = this.state.total_pages - 1\n      let l = page - (span / 2)\n      let r = page + (span / 2)\n      let inbetween = [];\n\n      if (page-span < 0) {\n        for (let p = 0; p <= span; p++) {\n          inbetween.push(\n            <Pagination.Item\n              active={p === page}\n              onClick={e => this.handleClick(e,p)}\n            >\n            {p + 1}\n            </Pagination.Item>\n          );\n        }\n      } else if (page + span > end) {\n          for (let p = end - span; p <= end ; p++) {\n            inbetween.push(\n              <Pagination.Item\n                active={p === page}\n                onClick={e => this.handleClick(e,p)}\n              >\n              {p + 1}\n              </Pagination.Item>\n          );\n        }\n      } else {\n        for (let p = l < 0 ? 0 : l; p <= r && p <= end; p++) {\n          inbetween.push(\n            <Pagination.Item\n              active={p === page}\n              onClick={e => this.handleClick(e, p)}\n            >\n            {p + 1}\n            </Pagination.Item>\n          );\n        }\n      }\n\n      return (\n      <div>\n            {/*Request Stats*/}\n            <center>\n               <h1>Locations</h1>\n               {this.state.num_results} Results,\n                Page {this.state.page + 1} / {this.state.total_pages}\n            </center>\n\n            {/*Filter params*/}\n\n            <Container>\n               <DropdownButton id=\"dropdown-basic-button\" title=\"Population\">\n                 <Dropdown.Item onClick={this.filter}>Greater than 100,000</Dropdown.Item>\n                 <Dropdown.Item href=\"#/action-2\">Less than 100,000</Dropdown.Item>\n               </DropdownButton>\n            </Container>\n            <Container>\n              <Row className=\"justify-content-md-center\">\n                <Pagination>\n                  {/*First Page*/}\n                  <Pagination.First\n                    onClick={e => this.handleClick(e, 0)}\n                  />\n\n                  {/*Previous Page*/}\n                  <Pagination.Prev\n                    disabled={this.state.page <= 0}\n                    onClick={e => this.handleClick(e, this.state.page - 1)}\n                  />\n\n                  {/*Eveything in between - see block before return statement*/}\n                  {inbetween}\n\n                  {/*Next Page*/}\n                  <Pagination.Next\n                    disabled={this.state.page >= this.state.total_pages - 1}\n                    onClick={e => this.handleClick(e, this.state.page + 1)}\n                  />\n\n                  {/*Last Page*/}\n                  <Pagination.Last\n                    onClick={e => this.handleClick(e,this.state.total_pages - 1)}\n                  />\n                </Pagination>\n              </Row>\n             </Container>\n\n             <Container>\n               {/*Record Grid*/}\n               <Row className=\"justify-content-md-center\" className=\"spacing\">\n               {this.state.objects.map((location) => (\n                  <Col className=\"spacing\" lg=\"4\" sm=\"6\" xs=\"12\">\n                  <Card body style={{ backgroundColor: '#00', borderColor: '#2255' }}>\n                  <CardImg src={\n                     \"https://maps.googleapis.com/maps/api/staticmap?center=\"+\n                                     location.latitude+\",\"+location.longitude+\n                                     \"&zoom=12&size=400x400\"+\n                                     \"&markers=color:green%7Clabel:G%7C\"+\n                                     location.latitude+\",\"+location.longitude +\n                                     \"&key=AIzaSyB-U0Z7cqufI-MHmRwfLmgqDCyQmOlIq48\"}\n\n                                     alt=\"Italian Trulli\" />\n                    <CardHeader>\n                      {/* The dynamic link is arranged this way through the NavBar.js\n                      and back to the Location component*/}\n                      <h5><Link to={\"/Location/\" + location.id}>{location.city}</Link></h5>\n                      <h6 class = \"card-subtitle mb-2 text-muted\">{location.state_name}</h6>\n                    </CardHeader>\n                    <CardBody>\n                    <CardText>\n                      <p>\n                      County: {location.county_name}\n                      <br/>Latitude: {location.latitude}\n                      <br/>Longitude: {location.longitude}\n                      <br/>Population: {location.population}\n                      <br/>Density (per sq. mile): {location.density}\n                      <br/>Time Zone: {location.timezone}\n                      </p>\n                    </CardText>\n                    </CardBody>\n                 </Card>\n                  <p />\n                  </Col>\n               ))}\n               </Row>\n           </Container>\n      </div>\n      );\n   }\n}\n}\n\n\nexport default createUltimatePagination({\n  WrapperComponent: Pagination,\n  itemTypeToComponent: {\n    [ITEM_TYPES.PAGE]: ({value, isActive, onClick}) => (\n      <Pagination.Item active={isActive} onClick={onClick}>{value}</Pagination.Item>\n    ),\n    [ITEM_TYPES.ELLIPSIS]: ({ isActive, onClick }) => (\n      <Pagination.Ellipsis disabled={isActive} onClick={onClick} />\n    ),\n    [ITEM_TYPES.FIRST_PAGE_LINK]: ({ isActive, onClick }) => (\n      <Pagination.First disabled={isActive} onClick={onClick} />\n    ),\n    [ITEM_TYPES.PREVIOUS_PAGE_LINK]: ({ isActive, onClick }) => (\n      <Pagination.Prev disabled={isActive} onClick={onClick} />\n    ),\n    [ITEM_TYPES.NEXT_PAGE_LINK]: ({ isActive, onClick }) => (\n      <Pagination.Next disabled={isActive} onClick={onClick} />\n    ),\n    [ITEM_TYPES.LAST_PAGE_LINK]: ({ isActive, onClick }) => (\n      <Pagination.Last disabled={isActive} onClick={onClick} />\n    ),\n  },\n});\n"]},"metadata":{},"sourceType":"module"}