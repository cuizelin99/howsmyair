{"ast":null,"code":"import _slicedToArray from \"/Users/jasonlihuang/Documents/cs373-airpollution/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jasonlihuang/Documents/cs373-airpollution/frontend/src/pages/Visualizations.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { Element } from \"react-faux-dom\";\nexport default class Visualizations extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(BarChart, {\n      data: {\n        AL: 123,\n        AK: 34,\n        AZ: 23,\n        AR: 943,\n        CA: 3,\n        CO: 23,\n        CT: 54,\n        DE: 19,\n        FL: 20,\n        GA: 4\n      },\n      x: \"State (State Abbreviation)\",\n      y: \"Organizations (Number of Organizations)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    })), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(BarChart, {\n      data: {\n        AL: 123,\n        AK: 34,\n        AZ: 23,\n        AR: 943,\n        CA: 3,\n        CO: 23,\n        CT: 54,\n        DE: 19,\n        FL: 20,\n        GA: 4\n      },\n      x: \"State (State Abbreviation)\",\n      y: \"Organizations (Number of Organizations)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })));\n  }\n\n}\n/* Copy/pasted from COnnect Iwth Nature but i litearlly dont give a shit */\n\nclass BarChart extends Component {\n  plot(chart, width, height) {\n    var data = [];\n    var temp = this.props.data;\n    var x = this.props.x;\n    var y = this.props.y;\n\n    for (const _ref of Object.entries(temp)) {\n      var _ref2 = _slicedToArray(_ref, 2);\n\n      const key = _ref2[0];\n      const value = _ref2[1];\n      var tempDict = {};\n      tempDict[\"statename\"] = key;\n      tempDict[\"value\"] = value;\n      data.push(tempDict);\n    } // create scales!\n\n\n    const xScale = d3.scaleBand().domain(data.map(d => d.statename)).range([0, width]);\n    const yScale = d3.scaleLinear().domain([0, d3.max(data, d => d.value)]).range([height, 0]);\n    const colorScale = d3.scaleSequential(d3.interpolateGreens);\n    chart.selectAll(\".bar-label\").data(data).enter().append(\"text\").classed(\"bar-label\", true).attr(\"x\", d => xScale(d.statename) + xScale.bandwidth() / 2).attr(\"dx\", 0).attr(\"y\", d => yScale(d.value)).attr(\"dy\", -6);\n    const xAxis = d3.axisBottom().scale(xScale);\n    chart.append(\"g\").classed(\"x axis\", true).attr(\"transform\", \"translate(0,\".concat(height, \")\")).call(xAxis);\n    const yAxis = d3.axisLeft().ticks(5).scale(yScale);\n    chart.append(\"g\").classed(\"y axis\", true).attr(\"transform\", \"translate(0,0)\").call(yAxis);\n    chart.select(\".x.axis\").append(\"text\").attr(\"x\", width / 2).attr(\"y\", 60).attr(\"fill\", \"#000\").style(\"font-size\", \"20px\").style(\"text-anchor\", \"middle\").text(x);\n    chart.select(\".y.axis\").append(\"text\").attr(\"x\", 0).attr(\"y\", 0).attr(\"transform\", \"translate(-50, \".concat(height / 2, \") rotate(-90)\")).attr(\"fill\", \"#000\").style(\"font-size\", \"20px\").style(\"text-anchor\", \"middle\").text(y);\n    const yGridlines = d3.axisLeft().scale(yScale).ticks(5).tickSize(-width, 0, 0).tickFormat(\"\");\n    chart.append(\"g\").call(yGridlines).classed(\"gridline\", true);\n    chart.selectAll(\".bar\").data(data).enter().append(\"rect\").classed(\"bar\", true).attr(\"x\", d => xScale(d.statename)).attr(\"y\", d => yScale(d.value)).attr(\"height\", d => height - yScale(d.value)).attr(\"width\", d => xScale.bandwidth()).style(\"fill\", (d, i) => colorScale(0.8));\n  }\n\n  drawChart() {\n    const width = 1200;\n    const height = 600;\n    const el = new Element(\"div\");\n    const svg = d3.select(el).append(\"svg\").attr(\"id\", \"chart\").attr(\"width\", width).attr(\"height\", height);\n    const margin = {\n      top: 60,\n      bottom: 100,\n      left: 80,\n      right: 40\n    };\n    const chart = svg.append(\"g\").classed(\"display\", true).attr(\"transform\", \"translate(\".concat(margin.left, \",\").concat(margin.top, \")\"));\n    const chartWidth = width - margin.left - margin.right;\n    const chartHeight = height - margin.top - margin.bottom;\n    this.plot(chart, chartWidth, chartHeight);\n    return el.toReact();\n  }\n\n  render() {\n    return this.drawChart();\n  }\n\n}","map":{"version":3,"sources":["/Users/jasonlihuang/Documents/cs373-airpollution/frontend/src/pages/Visualizations.js"],"names":["React","Component","d3","Element","Visualizations","render","AL","AK","AZ","AR","CA","CO","CT","DE","FL","GA","BarChart","plot","chart","width","height","data","temp","props","x","y","Object","entries","key","value","tempDict","push","xScale","scaleBand","domain","map","d","statename","range","yScale","scaleLinear","max","colorScale","scaleSequential","interpolateGreens","selectAll","enter","append","classed","attr","bandwidth","xAxis","axisBottom","scale","call","yAxis","axisLeft","ticks","select","style","text","yGridlines","tickSize","tickFormat","i","drawChart","el","svg","margin","top","bottom","left","right","chartWidth","chartHeight","toReact"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { Element } from \"react-faux-dom\";\n\n\nexport default class Visualizations extends Component {\n\n   render() {\n      return (\n        <div>\n        <Container>\n        <BarChart\n            data={{\n               AL: 123,\n               AK: 34,\n               AZ: 23,\n               AR: 943,\n               CA: 3,\n               CO: 23,\n               CT: 54,\n               DE: 19,\n               FL: 20,\n               GA: 4,\n            }}\n            x=\"State (State Abbreviation)\"\n            y=\"Organizations (Number of Organizations)\"\n         />\n      </Container>\n\n      <Container>\n      <BarChart\n          data={{\n             AL: 123,\n             AK: 34,\n             AZ: 23,\n             AR: 943,\n             CA: 3,\n             CO: 23,\n             CT: 54,\n             DE: 19,\n             FL: 20,\n             GA: 4,\n          }}\n          x=\"State (State Abbreviation)\"\n          y=\"Organizations (Number of Organizations)\"\n       />\n    </Container>\n      </div>\n\n      );\n  }\n}\n\n\n/* Copy/pasted from COnnect Iwth Nature but i litearlly dont give a shit */\nclass BarChart extends Component {\n  plot(chart, width, height) {\n   var data = [];\n   var temp = this.props.data;\n\n   var x = this.props.x;\n   var y = this.props.y;\n\n   for (const [key, value] of Object.entries(temp)) {\n      var tempDict = {};\n      tempDict[\"statename\"] = key;\n      tempDict[\"value\"] = value;\n      data.push(tempDict);\n   }\n   // create scales!\n   const xScale = d3\n      .scaleBand()\n      .domain(data.map(d => d.statename))\n      .range([0, width]);\n   const yScale = d3\n      .scaleLinear()\n      .domain([0, d3.max(data, d => d.value)])\n      .range([height, 0]);\n   const colorScale = d3.scaleSequential(d3.interpolateGreens);\n\n   chart\n      .selectAll(\".bar-label\")\n      .data(data)\n      .enter()\n      .append(\"text\")\n      .classed(\"bar-label\", true)\n      .attr(\"x\", d => xScale(d.statename) + xScale.bandwidth() / 2)\n      .attr(\"dx\", 0)\n      .attr(\"y\", d => yScale(d.value))\n      .attr(\"dy\", -6)\n\n   const xAxis = d3.axisBottom().scale(xScale);\n\n   chart\n      .append(\"g\")\n      .classed(\"x axis\", true)\n      .attr(\"transform\", `translate(0,${height})`)\n      .call(xAxis);\n\n   const yAxis = d3\n      .axisLeft()\n      .ticks(5)\n      .scale(yScale);\n\n   chart\n      .append(\"g\")\n      .classed(\"y axis\", true)\n      .attr(\"transform\", \"translate(0,0)\")\n      .call(yAxis);\n\n   chart\n      .select(\".x.axis\")\n      .append(\"text\")\n      .attr(\"x\", width / 2)\n      .attr(\"y\", 60)\n      .attr(\"fill\", \"#000\")\n      .style(\"font-size\", \"20px\")\n      .style(\"text-anchor\", \"middle\")\n      .text(x);\n\n   chart\n      .select(\".y.axis\")\n      .append(\"text\")\n      .attr(\"x\", 0)\n      .attr(\"y\", 0)\n      .attr(\"transform\", `translate(-50, ${height / 2}) rotate(-90)`)\n      .attr(\"fill\", \"#000\")\n      .style(\"font-size\", \"20px\")\n      .style(\"text-anchor\", \"middle\")\n      .text(y);\n\n   const yGridlines = d3\n      .axisLeft()\n      .scale(yScale)\n      .ticks(5)\n      .tickSize(-width, 0, 0)\n      .tickFormat(\"\");\n\n   chart\n      .append(\"g\")\n      .call(yGridlines)\n      .classed(\"gridline\", true);\n\n      chart\n       .selectAll(\".bar\")\n       .data(data)\n       .enter()\n       .append(\"rect\")\n       .classed(\"bar\", true)\n       .attr(\"x\", d => xScale(d.statename))\n       .attr(\"y\", d => yScale(d.value))\n       .attr(\"height\", d => height - yScale(d.value))\n       .attr(\"width\", d => xScale.bandwidth())\n       .style(\"fill\", (d, i) => colorScale(0.8));\n\n\n\n  }\n\n  drawChart() {\n   const width = 1200;\n   const height = 600;\n\n   const el = new Element(\"div\");\n   const svg = d3\n      .select(el)\n      .append(\"svg\")\n      .attr(\"id\", \"chart\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n   const margin = {\n      top: 60,\n      bottom: 100,\n      left: 80,\n      right: 40\n   };\n\n   const chart = svg\n      .append(\"g\")\n      .classed(\"display\", true)\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n   const chartWidth = width - margin.left - margin.right;\n   const chartHeight = height - margin.top - margin.bottom;\n   this.plot(chart, chartWidth, chartHeight);\n\n   return el.toReact();\n  }\n\n  render() {\n   return this.drawChart();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}