{"ast":null,"code":"var _jsxFileName = \"/Users/jasonlihuang/Documents/cs373-airpollution/frontend/src/pages/locations/LocationInstance.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader, CardDeck, CardColumns, CardSubtitle, CardBody, NavLink, UncontrolledCarousel, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Image, Col, Row, Pagination } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Link, Switch, BrowserHistory } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { createUltimatePagination, ITEM_TYPES } from 'react-ultimate-pagination';\nimport ReactDOM from 'react-dom';\nimport Illnesses from '../illnesses/Illnesses';\nimport Pollutants from '../pollutants/Pollutants';\nconst ENDPOINT = 'https://api.howsmyair.me/location';\n\nclass LocationInstance extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      eyeD: \"\",\n      location_url: null,\n      related_illnesses: [],\n      related_pollutants: []\n    };\n  }\n\n  componentDidMount() {\n    // get location\n    fetch(ENDPOINT + '/' + this.props.location_id).then(res => res.json()).then(data => {\n      this.setState({\n        data: data,\n        location_url: \"https://maps.googleapis.com/maps/api/staticmap?center=\" + data.latitude + \",\" + data.longitude + \"&zoom=12&size=400x400\" + \"&markers=color:green%7Clabel:G%7C\" + data.latitude + \",\" + data.longitude + \"&key=AIzaSyB-U0Z7cqufI-MHmRwfLmgqDCyQmOlIq48\",\n        related_illnesses: data.related_illnesses,\n        related_pollutants: data.related_pollutants\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Card, {\n      body: true,\n      style: {\n        backgroundColor: '#00',\n        borderColor: '#2255'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(CardImg, {\n      src: this.state.location_url,\n      alt: \"Italian Trulli\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Location/\" + this.state.data.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.state.data.city)), React.createElement(\"h6\", {\n      class: \"card-subtitle mb-2 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.data.state_name)), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"County: \", this.state.data.county_name, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), \"Latitude: \", this.state.data.latitude, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), \"Longitude: \", this.state.data.longitude, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), \"Population: \", this.state.data.population, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), \"Density (per sq. mile): \", this.state.data.density, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), \"Time Zone: \", this.state.data.timezone)))));\n  }\n\n}\n\nexport default LocationInstance;","map":{"version":3,"sources":["/Users/jasonlihuang/Documents/cs373-airpollution/frontend/src/pages/locations/LocationInstance.js"],"names":["React","Component","Jumbotron","Container","Card","Button","CardImg","CardTitle","CardText","CardHeader","CardDeck","CardColumns","CardSubtitle","CardBody","NavLink","UncontrolledCarousel","Form","FormGroup","Label","Input","FormText","Image","Col","Row","Pagination","BrowserRouter","Router","Route","Link","Switch","BrowserHistory","createBrowserHistory","createUltimatePagination","ITEM_TYPES","ReactDOM","Illnesses","Pollutants","ENDPOINT","LocationInstance","constructor","props","state","data","eyeD","location_url","related_illnesses","related_pollutants","componentDidMount","fetch","location_id","then","res","json","setState","latitude","longitude","render","backgroundColor","borderColor","id","city","state_name","county_name","population","density","timezone"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader,\n         CardDeck, CardColumns, CardSubtitle, CardBody , NavLink, UncontrolledCarousel,\n         Form,FormGroup, Label, Input, FormText} from 'reactstrap';\nimport { Image, Col, Row, Pagination} from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Link , Switch,BrowserHistory } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { createUltimatePagination, ITEM_TYPES } from 'react-ultimate-pagination';\nimport ReactDOM from 'react-dom';\nimport Illnesses from '../illnesses/Illnesses';\nimport Pollutants from '../pollutants/Pollutants';\n\n\nconst ENDPOINT = 'https://api.howsmyair.me/location';\n\nclass LocationInstance extends Component {\n\n   constructor(props) {\n      super(props);\n      this.state = {\n        data: {},\n        eyeD: \"\",\n        location_url : null,\n        related_illnesses: [],\n        related_pollutants: []\n      };\n   }\n\n   componentDidMount() {\n      // get location\n      fetch(ENDPOINT + '/' + this.props.location_id)\n         .then(res => res.json())\n         .then(data => { this.setState({\n            data : data,\n            location_url : \"https://maps.googleapis.com/maps/api/staticmap?center=\"+\n                            data.latitude+\",\"+data.longitude+\n                            \"&zoom=12&size=400x400\"+\n                            \"&markers=color:green%7Clabel:G%7C\"+\n                            data.latitude+\",\"+data.longitude +\n                            \"&key=AIzaSyB-U0Z7cqufI-MHmRwfLmgqDCyQmOlIq48\",\n            related_illnesses : data.related_illnesses,\n            related_pollutants : data.related_pollutants\n         })\n      })\n   };\n   render() {\n      return (\n        <div>\n           <Card body style={{ backgroundColor: '#00', borderColor: '#2255' }}>\n           <CardImg src={this.state.location_url} alt=\"Italian Trulli\" />\n             <CardHeader>\n                <h5><Link to={\"/Location/\" + this.state.data.id}>{this.state.data.city}</Link></h5>\n                <h6 class = \"card-subtitle mb-2 text-muted\">{this.state.data.state_name}</h6>\n             </CardHeader>\n             <CardBody>\n             <CardText>\n                <p>\n                County: {this.state.data.county_name}\n                <br/>Latitude: {this.state.data.latitude}\n                <br/>Longitude: {this.state.data.longitude}\n                <br/>Population: {this.state.data.population}\n                <br/>Density (per sq. mile): {this.state.data.density}\n                <br/>Time Zone: {this.state.data.timezone}\n                </p>\n             </CardText>\n             </CardBody>\n           </Card>\n        </div>\n      );\n   }\n}\n\nexport default LocationInstance;\n"]},"metadata":{},"sourceType":"module"}