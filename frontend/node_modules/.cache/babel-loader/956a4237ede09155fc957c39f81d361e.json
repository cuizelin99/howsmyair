{"ast":null,"code":"var _jsxFileName = \"/u/jlihuang/373site/cs373-airpollution/frontend/src/pages/illnesses/Illnesses.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader, CardDeck, CardColumns, CardSubtitle, CardBody, NavLink, Carousel, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Image, Col, Row, Pagination, DropdownButton, Dropdown, ButtonToolbar } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Link, Switch, BrowserHistory } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { createUltimatePagination, ITEM_TYPES } from 'react-ultimate-pagination';\nimport ReactDOM from 'react-dom';\nimport Locations from '../locations/Locations';\nimport LocationInstance from '../locations/LocationInstance';\nimport Pollutants from '../pollutants/Pollutants';\nimport PollutantInstance from '../pollutants/PollutantInstance';\n/**\nSources:\n\nPagination sources:\nhttps://github.com/react-bootstrap/pagination\nhttps://www.npmjs.com/package/react-ultimate-pagination\nhttps://codepen.io/joedazza/pen/BVXVej\n**/\n\nconst ENDPOINT = 'https://api.howsmyair.me/illness';\nexport class Illness extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      related_locations: [],\n      related_pollutants: []\n    };\n  }\n\n  componentDidMount() {\n    const key = this.props.match.params.key; // get location\n\n    fetch(ENDPOINT + '/' + key).then(res => res.json()).then(data => {\n      this.setState({\n        data: data,\n        related_locations: data.related_locations,\n        related_pollutants: data.related_pollutants\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.data.illness_name), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      class: \"card-subtitle mb-2 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.state.data.illness_desc), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Lethality: \", this.state.data.illness_lethality, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), \"Symptoms: \", this.state.data.illness_symptoms, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), \"Contagious: \", this.state.data.illness_contagious, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), \"Treatable: \", this.state.data.illness_treatable)), React.createElement(\"img\", {\n      width: \"50%\",\n      src: this.state.data.illness_image,\n      alt: \"Italian Trulli\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Related Locations\"), React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      className: \"spacing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.related_locations.map(location => React.createElement(Col, {\n      className: \"spacing\",\n      lg: \"4\",\n      sm: \"6\",\n      xs: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(LocationInstance, {\n      location_id: location.location_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })))))), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Related Polluants\"), React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      className: \"spacing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.state.related_pollutants.map(pollutant => React.createElement(Col, {\n      className: \"spacing\",\n      lg: \"4\",\n      sm: \"6\",\n      xs: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(PollutantInstance, {\n      pollutant_name: pollutant.pollutant_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nconst buildOrder = (fieldname, direction) => {\n  return \"{%22field%22:%22\".concat(fieldname, \"%22,%22direction%22:%22\").concat(direction, \"%22}\");\n};\n\nconst buildFilter = (fieldname, operator, value) => {\n  return \"{%22name%22:%22\".concat(fieldname, \"%22,%22op%22:%22\").concat(operator, \"%22,%22val%22:%22\").concat(value, \"%22}\");\n};\n\nconst buildQuery = (model, page, filterObjs, orderObjs) => {\n  return \"https://api.howsmyair.me/\".concat(model, \"?page=\").concat(page, \"&q={%22filters%22:[\").concat(filterObjs, \"],%22order_by%22:[\").concat(orderObjs, \"]}\");\n};\n\nexport class Illnesses extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      num_results: null,\n      objects: [],\n      page: null,\n      total_pages: null,\n      states: [],\n      time_zones: [],\n      current_contagious: \"None\",\n      current_lethality: \"None\",\n      current_treatable: \"None\",\n      sort_by: \"illness_name\",\n      display_sort: \"Illness\",\n      order: \"asc\",\n      display_order: \"Ascending\",\n      curent_page: 0,\n      isloaded: false\n    };\n    this.getQuery = this.getQuery.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.getQuery());\n    fetch(this.getQuery()).then(res => res.json()).then(data => {\n      this.setState({\n        data: data,\n        num_results: data.num_results,\n        objects: data.objects,\n        curent_page: data.page - 1,\n        page: data.page - 1,\n        total_pages: data.total_pages,\n        isloaded: true\n      });\n    });\n  }\n\n  getQuery() {\n    let filterObjs = buildFilter(\"illness_name\", \"like\", \"%25%25\");\n    let orderObjs = buildOrder(\"illness_name\", \"asc\");\n\n    if (this.state.current_contagious != \"None\") {\n      filterObjs += \",\" + buildFilter(\"illness_contagious\", \"eq\", this.state.current_contagious);\n    }\n\n    if (this.state.current_lethality != \"None\") {\n      filterObjs += \",\" + buildFilter(\"illness_lethality\", \"eq\", this.state.current_lethality);\n    }\n\n    if (this.state.current_treatable != \"None\") {\n      filterObjs += \",\" + buildFilter(\"illness_treatable\", \"eq\", this.state.current_treatable);\n    }\n\n    orderObjs = buildOrder(this.state.sort_by, this.state.order);\n    return buildQuery(\"illness\", this.state.curent_page + 1, filterObjs, orderObjs);\n  }\n\n  render() {\n    if (this.state.isloaded) {\n      console.log(this.state.curent_page);\n      console.log(this.state.page);\n      console.log(this.state.total_pages);\n      console.log(this.state.num_results);\n      let span = 4;\n      let page = this.state.page;\n      let end = this.state.total_pages - 1;\n      let l = page - span / 2;\n      let r = page + span / 2;\n      let inbetween = [];\n\n      if (this.state.total_pages < span + 1) {\n        for (let p = 0; p < this.state.total_pages; p++) {\n          inbetween.push(React.createElement(Pagination.Item, {\n            active: p === page,\n            onClick: e => this.setState({\n              curent_page: p,\n              isloaded: false\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          }, p + 1));\n        }\n      } else if (page - span < 0) {\n        for (let p = 0; p <= span; p++) {\n          inbetween.push(React.createElement(Pagination.Item, {\n            active: p === page,\n            onClick: e => this.setState({\n              curent_page: p,\n              isloaded: false\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203\n            },\n            __self: this\n          }, p + 1));\n        }\n      } else if (page + span > end) {\n        for (let p = end - span; p <= end; p++) {\n          inbetween.push(React.createElement(Pagination.Item, {\n            active: p === page,\n            onClick: e => this.setState({\n              curent_page: p,\n              isloaded: false\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214\n            },\n            __self: this\n          }, p + 1));\n        }\n      } else {\n        for (let p = l < 0 ? 0 : l; p <= r && p <= end; p++) {\n          inbetween.push(React.createElement(Pagination.Item, {\n            active: p === page,\n            onClick: e => this.setState({\n              curent_page: p,\n              isloaded: false\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 225\n            },\n            __self: this\n          }, p + 1));\n        }\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }), React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, this.state.num_results, \" Illnesses\")), React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Filters\")), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Contagious\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_contagious: \"None\",\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"None\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_contagious: \"yes\",\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"Yes\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_contagious: \"no\",\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"No\")), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, this.state.current_contagious))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Treatable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_lethality: \"None\",\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"None\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_lethality: \"lethal\",\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"Yes\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_lethality: \"non-lethal\",\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"No\")), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, this.state.current_contagious))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Treatable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_treatable: \"None\",\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"None\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_treatable: \"yes\",\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"Yes\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_treatable: \"no\",\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, \"No\")), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, this.state.current_treatable))), React.createElement(\"h3\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, \"Sort By\")), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: this.state.display_sort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"illness_name\",\n            display_sort: \"Illness\",\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"Illness\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"illness_lethality\",\n            display_sort: \"Lethality\",\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, \"Lethality\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"illness_contagious\",\n            display_sort: \"Contagious\",\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, \"Contagious\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"illness_treatable\",\n            display_sort: \"Treatable\",\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"Treatable\"))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: this.state.display_order,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            order: \"asc\",\n            display_order: \"Ascending\",\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, \"Ascending\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            order: \"desc\",\n            display_order: \"Descending\",\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, \"Descending\")))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, \"Page \", this.state.curent_page + 1, \"/\", this.state.total_pages)), React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(Pagination, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(Pagination.First, {\n        onClick: e => this.setState({\n          curent_page: 0,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }), React.createElement(Pagination.Prev, {\n        disabled: this.state.page <= 0,\n        onClick: e => this.setState({\n          curent_page: this.state.page - 1,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }), inbetween, React.createElement(Pagination.Next, {\n        disabled: this.state.page >= this.state.total_pages - 1,\n        onClick: e => this.setState({\n          curent_page: this.state.page + 1,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }), React.createElement(Pagination.Last, {\n        onClick: e => this.setState({\n          curent_page: this.state.total_pages - 1,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      })))), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        className: \"spacing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, this.state.objects.map(illness => React.createElement(Col, {\n        className: \"spacing\",\n        lg: \"4\",\n        sm: \"6\",\n        xs: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(Card, {\n        body: true,\n        style: {\n          backgroundColor: '#00',\n          borderColor: '#2255',\n          height: '40rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(Container, {\n        style: {\n          height: '12rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, React.createElement(CardImg, {\n        src: illness.illness_image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      })), React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/Illness/\" + illness.illness_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, illness.illness_name))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, React.createElement(CardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, \"Lethality: \", illness.illness_lethality, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }), \"Symptoms: \", illness.illness_symptoms, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }), \"Contagious: \", illness.illness_contagious, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }), \"Treatable: \", illness.illness_treatable)))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }))))));\n    } else {\n      this.componentDidMount();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, \"omae wa mou shindeiru\"));\n    }\n  }\n\n}\nexport default createUltimatePagination({\n  WrapperComponent: Pagination,\n  itemTypeToComponent: {\n    [ITEM_TYPES.PAGE]: ({\n      value,\n      isActive,\n      onClick\n    }) => React.createElement(Pagination.Item, {\n      active: isActive,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, value),\n    [ITEM_TYPES.ELLIPSIS]: ({\n      isActive,\n      onClick\n    }) => React.createElement(Pagination.Ellipsis, {\n      disabled: isActive,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }),\n    [ITEM_TYPES.FIRST_PAGE_LINK]: ({\n      isActive,\n      onClick\n    }) => React.createElement(Pagination.First, {\n      disabled: isActive,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }),\n    [ITEM_TYPES.PREVIOUS_PAGE_LINK]: ({\n      isActive,\n      onClick\n    }) => React.createElement(Pagination.Prev, {\n      disabled: isActive,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }),\n    [ITEM_TYPES.NEXT_PAGE_LINK]: ({\n      isActive,\n      onClick\n    }) => React.createElement(Pagination.Next, {\n      disabled: isActive,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }),\n    [ITEM_TYPES.LAST_PAGE_LINK]: ({\n      isActive,\n      onClick\n    }) => React.createElement(Pagination.Last, {\n      disabled: isActive,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    })\n  }\n});","map":{"version":3,"sources":["/u/jlihuang/373site/cs373-airpollution/frontend/src/pages/illnesses/Illnesses.js"],"names":["React","Component","Jumbotron","Container","Card","Button","CardImg","CardTitle","CardText","CardHeader","CardDeck","CardColumns","CardSubtitle","CardBody","NavLink","Carousel","Form","FormGroup","Label","Input","FormText","Image","Col","Row","Pagination","DropdownButton","Dropdown","ButtonToolbar","BrowserRouter","Router","Route","Link","Switch","BrowserHistory","createBrowserHistory","createUltimatePagination","ITEM_TYPES","ReactDOM","Locations","LocationInstance","Pollutants","PollutantInstance","ENDPOINT","Illness","constructor","props","state","data","related_locations","related_pollutants","componentDidMount","key","match","params","fetch","then","res","json","setState","render","illness_name","illness_desc","illness_lethality","illness_symptoms","illness_contagious","illness_treatable","illness_image","map","location","location_id","pollutant","pollutant_name","buildOrder","fieldname","direction","buildFilter","operator","value","buildQuery","model","page","filterObjs","orderObjs","Illnesses","num_results","objects","total_pages","states","time_zones","current_contagious","current_lethality","current_treatable","sort_by","display_sort","order","display_order","curent_page","isloaded","getQuery","bind","console","log","span","end","l","r","inbetween","p","push","e","color","illness","backgroundColor","borderColor","height","WrapperComponent","itemTypeToComponent","PAGE","isActive","onClick","ELLIPSIS","FIRST_PAGE_LINK","PREVIOUS_PAGE_LINK","NEXT_PAGE_LINK","LAST_PAGE_LINK"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader,\n         CardDeck, CardColumns, CardSubtitle, CardBody , NavLink, Carousel,\n         Form,FormGroup, Label, Input, FormText} from 'reactstrap';\nimport { Image, Col, Row, Pagination, DropdownButton, Dropdown, ButtonToolbar } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Link , Switch,BrowserHistory } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { createUltimatePagination, ITEM_TYPES } from 'react-ultimate-pagination';\nimport ReactDOM from 'react-dom';\nimport Locations from '../locations/Locations';\nimport LocationInstance from '../locations/LocationInstance';\nimport Pollutants from '../pollutants/Pollutants';\nimport PollutantInstance from '../pollutants/PollutantInstance';\n\n\n/**\nSources:\n\nPagination sources:\nhttps://github.com/react-bootstrap/pagination\nhttps://www.npmjs.com/package/react-ultimate-pagination\nhttps://codepen.io/joedazza/pen/BVXVej\n**/\n\nconst ENDPOINT = 'https://api.howsmyair.me/illness';\n\nexport class Illness extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        data: {},\n        related_locations: [],\n        related_pollutants: []\n      };\n    }\n   componentDidMount() {\n      const {key} = this.props.match.params;\n      // get location\n      fetch(ENDPOINT + '/' + key)\n         .then(res => res.json())\n         .then(data => { this.setState({\n            data: data,\n            related_locations : data.related_locations,\n            related_pollutants : data.related_pollutants\n         })\n      })\n    };\n   render() {\n      return (\n        <div>\n            <Container>\n            <p>\n            <br/>\n            <h1 >{this.state.data.illness_name}</h1>\n            <br/>\n            <h6 class=\"card-subtitle mb-2 text-muted\">{this.state.data.illness_desc}</h6>\n            <p>Lethality: {this.state.data.illness_lethality}\n            <br/>Symptoms: {this.state.data.illness_symptoms}\n            <br/>Contagious: {this.state.data.illness_contagious}\n            <br/>Treatable: {this.state.data.illness_treatable}\n            </p>\n            </p>\n            <img width=\"50%\" src={this.state.data.illness_image} alt=\"Italian Trulli\"/>\n            </Container>\n            {/*related locations*/}\n            <Container>\n            <h6>Related Locations</h6>\n            <Jumbotron>\n            <Row className=\"justify-content-md-center\" className=\"spacing\">\n            {this.state.related_locations.map((location) => (\n               <Col className=\"spacing\" lg=\"4\" sm=\"6\" xs=\"12\">\n                  <LocationInstance location_id={location.location_id} />\n                  <p />\n              </Col>\n            ))}\n            </Row>\n            </Jumbotron>\n            </Container>\n            {/*related pollutants*/}\n            <Container>\n            <h6>Related Polluants</h6>\n            <Jumbotron>\n            <Row className=\"justify-content-md-center\" className=\"spacing\">\n            {this.state.related_pollutants.map((pollutant) => (\n               <Col className=\"spacing\" lg=\"4\" sm=\"6\" xs=\"12\">\n                <PollutantInstance pollutant_name={pollutant.pollutant_name} />\n                <p />\n             </Col>\n            ))}\n            </Row>\n            </Jumbotron>\n            </Container>\n        </div>\n      );\n   }\n}\n\nconst buildOrder  = (fieldname,direction) => {\n    return `{%22field%22:%22${fieldname}%22,%22direction%22:%22${direction}%22}`\n}\n\nconst buildFilter = (fieldname,operator,value) => {\n    return `{%22name%22:%22${fieldname}%22,%22op%22:%22${operator}%22,%22val%22:%22${value}%22}`\n}\n\nconst buildQuery = (model,page,filterObjs,orderObjs) => {\n      return `https://api.howsmyair.me/${model}?page=${page}&q={%22filters%22:[${filterObjs}],%22order_by%22:[${orderObjs}]}`\n}\n\nexport class Illnesses extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      data : {},\n      num_results: null,\n      objects:[],\n      page: null,\n      total_pages: null,\n      states : [],\n      time_zones : [],\n      current_contagious: \"None\",\n      current_lethality : \"None\",\n      current_treatable : \"None\",\n      sort_by : \"illness_name\",\n      display_sort : \"Illness\",\n      order : \"asc\",\n      display_order : \"Ascending\",\n      curent_page: 0,\n      isloaded : false,\n    };\n        this.getQuery = this.getQuery.bind(this)\n        this.componentDidMount = this.componentDidMount.bind(this)\n  }\n\n    componentDidMount() {\n      console.log(this.getQuery())\n      fetch(this.getQuery())\n         .then(res => res.json())\n         .then(data => {\n          this.setState({\n            data : data,\n            num_results: data.num_results,\n            objects: data.objects,\n            curent_page: data.page-1,\n            page: data.page-1,\n            total_pages: data.total_pages,\n            isloaded : true,\n          })\n\n      })\n    };\n\n    getQuery(){\n\n      let filterObjs = buildFilter(\"illness_name\",\"like\",`%25%25`);\n      let orderObjs = buildOrder(\"illness_name\",\"asc\")\n\n      if (this.state.current_contagious != \"None\") {\n        filterObjs += \",\"+buildFilter(\"illness_contagious\",\"eq\",this.state.current_contagious)\n      }\n      if (this.state.current_lethality != \"None\") {\n        filterObjs += \",\"+buildFilter(\"illness_lethality\",\"eq\",this.state.current_lethality)\n      }\n      if (this.state.current_treatable != \"None\") {\n        filterObjs += \",\"+buildFilter(\"illness_treatable\",\"eq\",this.state.current_treatable)\n      }\n\n      orderObjs = buildOrder(this.state.sort_by,this.state.order)\n\n      return buildQuery(\"illness\",this.state.curent_page+1,filterObjs,orderObjs);\n    }\n\n    render(){\n      if (this.state.isloaded){\n      console.log(this.state.curent_page)\n      console.log(this.state.page)\n      console.log(this.state.total_pages)\n      console.log(this.state.num_results)\n      let span = 4\n      let page = this.state.page\n      let end = this.state.total_pages - 1\n      let l = page - (span / 2)\n      let r = page + (span / 2)\n      let inbetween = [];\n\n      if (this.state.total_pages < span + 1){\n          for (let p = 0; p < this.state.total_pages; p++) {\n            inbetween.push(\n              <Pagination.Item\n                active={p === page}\n                onClick={e => this.setState({ curent_page : p , isloaded : false})}\n              >\n              {p + 1}\n              </Pagination.Item>\n            );\n          }\n      } else if (page-span < 0) {\n        for (let p = 0; p <= span; p++) {\n          inbetween.push(\n            <Pagination.Item\n              active={p === page}\n              onClick={e => this.setState({ curent_page : p , isloaded : false})}\n            >\n            {p + 1}\n            </Pagination.Item>\n          );\n        }\n      } else if (page + span > end) {\n          for (let p = end - span; p <= end ; p++) {\n            inbetween.push(\n              <Pagination.Item\n                active={p === page}\n              onClick={e => this.setState({ curent_page : p , isloaded : false})}\n              >\n              {p + 1}\n              </Pagination.Item>\n          );\n        }\n      } else {\n        for (let p = l < 0 ? 0 : l; p <= r && p <= end; p++) {\n          inbetween.push(\n            <Pagination.Item\n              active={p === page}\n              onClick={e => this.setState({ curent_page : p , isloaded : false})}\n            >\n            {p + 1}\n            </Pagination.Item>\n          );\n        }\n      }\n      return(\n        <div>\n          <br/>\n            <Row className=\"justify-content-md-center\">\n                <h1 style={{color: '#1976d2'}}>{this.state.num_results} Illnesses</h1>\n            </Row>\n            <Row className=\"justify-content-md-center\">\n              <Col md=\"auto\">\n                <h3 style={{color: '#1976d2'}}>Filters</h3>\n              </Col>\n              <Col md=\"auto\">\n                <center>\n                  <DropdownButton id=\"dropdown-basic-button\" title=\"Contagious\">\n                    <Dropdown.Item onClick={() => {this.setState({ current_contagious : \"None\", isloaded : false});}}>\n                      None\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_contagious : \"yes\", isloaded : false});}}>\n                      Yes\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_contagious : \"no\", isloaded : false});}}>\n                      No\n                    </Dropdown.Item>\n                  </DropdownButton>\n                  <h5 style={{color: '#1976d2'}}>{this.state.current_contagious}</h5>\n                </center>\n              </Col>\n              <Col md=\"auto\">\n                <center>\n                  <DropdownButton id=\"dropdown-basic-button\" title=\"Treatable\">\n                    <Dropdown.Item onClick={() => {this.setState({ current_lethality : \"None\", isloaded : false});}}>\n                      None\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_lethality : \"lethal\", isloaded : false});}}>\n                      Yes\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_lethality : \"non-lethal\", isloaded : false});}}>\n                      No\n                    </Dropdown.Item>\n                  </DropdownButton>\n                  <h5 style={{color: '#1976d2'}}>{this.state.current_contagious}</h5>\n                </center>\n              </Col>\n              <Col md=\"auto\">\n                <center>\n                  <DropdownButton id=\"dropdown-basic-button\" title=\"Treatable\">\n                    <Dropdown.Item onClick={() => {this.setState({ current_treatable : \"None\", isloaded : false});}}>\n                      None\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_treatable : \"yes\", isloaded : false});}}>\n                      Yes\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_treatable : \"no\", isloaded : false});}}>\n                      No\n                    </Dropdown.Item>\n                  </DropdownButton>\n                  <h5 style={{color: '#1976d2'}}>{this.state.current_treatable}</h5>\n                </center>\n              </Col>\n              <h3 style={{color: '#1976d2'}}><center>Sort By</center></h3>\n              <Col md=\"auto\">\n                  <DropdownButton id=\"dropdown-basic-button\" title={this.state.display_sort}>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"illness_name\", display_sort : \"Illness\", isloaded : false});}}>\n                      Illness\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"illness_lethality\", display_sort : \"Lethality\", isloaded : false});}}>\n                      Lethality\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"illness_contagious\", display_sort : \"Contagious\", isloaded : false});}}>\n                      Contagious\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"illness_treatable\", display_sort : \"Treatable\", isloaded : false});}}>\n                      Treatable\n                    </Dropdown.Item>\n                  </DropdownButton>\n              </Col>\n              <Col md=\"auto\">\n                  <DropdownButton id=\"dropdown-basic-button\" title = {this.state.display_order}>\n                    <Dropdown.Item onClick={() => {this.setState({ order : \"asc\", display_order : \"Ascending\", isloaded : false});}}>\n                      Ascending\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ order : \"desc\", display_order : \"Descending\", isloaded : false});}}>\n                      Descending\n                    </Dropdown.Item>\n                  </DropdownButton>\n              </Col>\n            </Row>\n          <br/>\n          <Container>\n            <center><h4 style={{color: '#1976d2'}}>Page {this.state.curent_page+1}/{this.state.total_pages}</h4></center>\n            <Row className=\"justify-content-md-center\">\n              <Pagination>\n                {/*First Page*/}\n                <Pagination.First\n                  onClick={e => this.setState({ curent_page : 0, isloaded : false})}\n                />\n\n                {/*Previous Page*/}\n                <Pagination.Prev\n                  disabled={this.state.page <= 0}\n                  onClick={e => this.setState({ curent_page : this.state.page -1 , isloaded : false})}\n                />\n\n                {/*Eveything in between - see block before return statement*/}\n                {inbetween}\n\n                {/*Next Page*/}\n                <Pagination.Next\n                  disabled={this.state.page >= this.state.total_pages - 1}\n                  onClick={e => this.setState({ curent_page : this.state.page +1 , isloaded : false})}\n                />\n\n                {/*Last Page*/}\n                <Pagination.Last\n                  onClick={e => this.setState({ curent_page : this.state.total_pages - 1 , isloaded : false})}\n                />\n              </Pagination>\n            </Row>\n           </Container>\n            <Container>\n              {/*Record Grid*/}\n              <Row className=\"justify-content-md-center\" className=\"spacing\">\n              {this.state.objects.map((illness) => (\n                 <Col className=\"spacing\" lg=\"4\" sm=\"6\" xs=\"12\">\n                 <Card body style={{ backgroundColor: '#00', borderColor: '#2255', height: '40rem' }}>\n                    <Container style={{ height: '12rem' }}>\n                      <CardImg src={illness.illness_image} />\n                    </Container>  \n                    <CardHeader>\n                      {/* The dynamic link is arranged this way through the NavBar.js\n                      and back to the Location component*/}\n                      <h5><Link to={\"/Illness/\" + illness.illness_name}>{illness.illness_name}</Link></h5>\n                    </CardHeader>\n                    <CardBody>\n                    <CardText>\n                      <p>Lethality: {illness.illness_lethality}\n                      <br/>Symptoms: {illness.illness_symptoms}\n                      <br/>Contagious: {illness.illness_contagious}\n                      <br/>Treatable: {illness.illness_treatable}\n                      </p>\n                    </CardText>\n                    </CardBody>\n                 </Card>\n                 <p />\n                 </Col>\n              ))}\n              </Row>\n         </Container>\n        </div>\n      );\n    } else {\n      this.componentDidMount();\n      return (\n        <div>\n         <center>omae wa mou shindeiru</center>\n        </div>\n      );\n   }\n  }\n}\n\nexport default createUltimatePagination({\n  WrapperComponent: Pagination,\n  itemTypeToComponent: {\n    [ITEM_TYPES.PAGE]: ({value, isActive, onClick}) => (\n      <Pagination.Item active={isActive} onClick={onClick}>{value}</Pagination.Item>\n    ),\n    [ITEM_TYPES.ELLIPSIS]: ({ isActive, onClick }) => (\n      <Pagination.Ellipsis disabled={isActive} onClick={onClick} />\n    ),\n    [ITEM_TYPES.FIRST_PAGE_LINK]: ({ isActive, onClick }) => (\n      <Pagination.First disabled={isActive} onClick={onClick} />\n    ),\n    [ITEM_TYPES.PREVIOUS_PAGE_LINK]: ({ isActive, onClick }) => (\n      <Pagination.Prev disabled={isActive} onClick={onClick} />\n    ),\n    [ITEM_TYPES.NEXT_PAGE_LINK]: ({ isActive, onClick }) => (\n      <Pagination.Next disabled={isActive} onClick={onClick} />\n    ),\n    [ITEM_TYPES.LAST_PAGE_LINK]: ({ isActive, onClick }) => (\n      <Pagination.Last disabled={isActive} onClick={onClick} />\n    ),\n  },\n});\n"]},"metadata":{},"sourceType":"module"}