{"ast":null,"code":"var _jsxFileName = \"/Users/jasonlihuang/Documents/cs373-airpollution/frontend/src/pages/illnesses/Illnesses.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader, CardDeck, CardColumns, CardSubtitle, CardBody, NavLink, UncontrolledCarousel, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Image, Col, Row, Pagination } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Link, Switch, BrowserHistory } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { createUltimatePagination, ITEM_TYPES } from 'react-ultimate-pagination';\nimport ReactDOM from 'react-dom';\nimport Locations from '../locations/Locations';\nimport LocationInstance from '../locations/LocationInstance';\nimport Pollutants from '../pollutants/Pollutants';\nimport PollutantInstance from '../pollutants/PollutantInstance';\n/**\nSources:\n\nPagination sources:\nhttps://github.com/react-bootstrap/pagination\nhttps://www.npmjs.com/package/react-ultimate-pagination\nhttps://codepen.io/joedazza/pen/BVXVej\n**/\n\nconst ENDPOINT = 'https://api.howsmyair.me/illness';\nexport class Illness extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      related_locations: [],\n      related_pollutants: []\n    };\n  }\n\n  componentDidMount() {\n    const key = this.props.match.params.key; // get location\n\n    fetch(ENDPOINT + '/' + key).then(res => res.json()).then(data => {\n      this.setState({\n        data: data,\n        related_locations: data.related_locations,\n        related_pollutants: data.related_pollutants\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.data.illness_name), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      class: \"card-subtitle mb-2 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.state.data.illness_desc), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Lethality: \", this.state.data.illness_lethality, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), \"Symptoms: \", this.state.data.illness_symptoms, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), \"Contagious: \", this.state.data.illness_contagious, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), \"Treatable: \", this.state.data.illness_treatable)), React.createElement(\"img\", {\n      width: \"50%\",\n      src: this.state.data.illness_image,\n      alt: \"Italian Trulli\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Related Locations\"), React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.related_locations.map(location => React.createElement(CardColumns, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(LocationInstance, {\n      location_id: location.location_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }))))), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Related Polluants\"), React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.state.related_pollutants.map(pollutant => React.createElement(CardColumns, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(PollutantInstance, {\n      pollutant_name: pollutant.pollutant_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }))))));\n  }\n\n}\nexport class Illnesses extends Component {\n  /*This right here is like object attributes*/\n  constructor(props) {\n    super(props);\n    this.state = {\n      num_results: null,\n      objects: [],\n      page: null,\n      total_pages: null,\n      req: null\n    };\n  }\n  /*When the component is loaded, here's init*/\n\n\n  componentDidMount() {\n    fetch(ENDPOINT).then(res => res.json()).then(data => {\n      this.setState({\n        num_results: data.num_results,\n        objects: data.objects,\n        page: data.page - 1,\n        total_pages: data.total_pages\n      });\n    });\n  }\n  /*here's how we are going to handle clicks for pagination\n    Really only two things about the current state changes:\n    the current page numbers, and the results shown\n  */\n\n\n  handleClick(e, index) {\n    e.preventDefault();\n    fetch(ENDPOINT + \"?page=\" + (index + 1)).then(res => res.json()).then(data => {\n      this.setState({\n        num_results: data.num_results,\n        objects: data.objects,\n        page: data.page - 1,\n        total_pages: data.total_pages\n      });\n    });\n  }\n  /*Here's how the Locations Page is rendered*/\n\n  /*source: looking at example of pagination for Global Antidote https://gitlab.com/stubbsnc/globalantidote/blob/production/dynamic-site/src/pages*/\n\n\n  render() {\n    let span = 2;\n    let page = this.state.page;\n    let end = this.state.total_pages - 1;\n    let l = page - span / 2;\n    let r = page + span / 2;\n    let inbetween = [];\n\n    if (page - span < 0) {\n      for (let p = 0; p <= span; p++) {\n        inbetween.push(React.createElement(Pagination.Item, {\n          active: p === page,\n          onClick: e => this.handleClick(e, p),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, p + 1));\n      }\n    } else if (page + span > end) {\n      for (let p = end - span; p <= end; p++) {\n        inbetween.push(React.createElement(Pagination.Item, {\n          active: p === page,\n          onClick: e => this.handleClick(e, p),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, p + 1));\n      }\n    } else {\n      for (let p = l < 0 ? 0 : l; p <= r && p <= end; p++) {\n        inbetween.push(React.createElement(Pagination.Item, {\n          active: p === page,\n          onClick: e => this.handleClick(e, p),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, p + 1));\n      }\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Illnesses\"), this.state.num_results, \" Results, Page \", this.state.page + 1, \" / \", this.state.total_pages), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(Pagination, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(Pagination.First, {\n      onClick: e => this.handleClick(e, 0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(Pagination.Prev, {\n      disabled: this.state.page <= 0,\n      onClick: e => this.handleClick(e, this.state.page - 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), inbetween, React.createElement(Pagination.Next, {\n      disabled: this.state.page >= this.state.total_pages - 1,\n      onClick: e => this.handleClick(e, this.state.page + 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), React.createElement(Pagination.Last, {\n      onClick: e => this.handleClick(e, this.state.total_pages - 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    })))), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      className: \"spacing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, this.state.objects.map(illness => React.createElement(Col, {\n      className: \"spacing\",\n      lg: \"4\",\n      sm: \"6\",\n      xs: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(Card, {\n      body: true,\n      style: {\n        backgroundColor: '#00',\n        borderColor: '#2255'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(CardImg, {\n      top: true,\n      width: \"100%\",\n      src: illness.illness_image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Illness/\" + illness.illness_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, illness.illness_name))), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Lethality: \", illness.illness_lethality, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), \"Symptoms: \", illness.illness_symptoms, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), \"Contagious: \", illness.illness_contagious, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), \"Treatable: \", illness.illness_treatable)))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }))))));\n  }\n\n}\nexport default createUltimatePagination({\n  WrapperComponent: Pagination,\n  itemTypeToComponent: {\n    [ITEM_TYPES.PAGE]: ({\n      value,\n      isActive,\n      onClick\n    }) => React.createElement(Pagination.Item, {\n      active: isActive,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, value),\n    [ITEM_TYPES.ELLIPSIS]: ({\n      isActive,\n      onClick\n    }) => React.createElement(Pagination.Ellipsis, {\n      disabled: isActive,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }),\n    [ITEM_TYPES.FIRST_PAGE_LINK]: ({\n      isActive,\n      onClick\n    }) => React.createElement(Pagination.First, {\n      disabled: isActive,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }),\n    [ITEM_TYPES.PREVIOUS_PAGE_LINK]: ({\n      isActive,\n      onClick\n    }) => React.createElement(Pagination.Prev, {\n      disabled: isActive,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }),\n    [ITEM_TYPES.NEXT_PAGE_LINK]: ({\n      isActive,\n      onClick\n    }) => React.createElement(Pagination.Next, {\n      disabled: isActive,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }),\n    [ITEM_TYPES.LAST_PAGE_LINK]: ({\n      isActive,\n      onClick\n    }) => React.createElement(Pagination.Last, {\n      disabled: isActive,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    })\n  }\n});","map":{"version":3,"sources":["/Users/jasonlihuang/Documents/cs373-airpollution/frontend/src/pages/illnesses/Illnesses.js"],"names":["React","Component","Jumbotron","Container","Card","Button","CardImg","CardTitle","CardText","CardHeader","CardDeck","CardColumns","CardSubtitle","CardBody","NavLink","UncontrolledCarousel","Form","FormGroup","Label","Input","FormText","Image","Col","Row","Pagination","BrowserRouter","Router","Route","Link","Switch","BrowserHistory","createBrowserHistory","createUltimatePagination","ITEM_TYPES","ReactDOM","Locations","LocationInstance","Pollutants","PollutantInstance","ENDPOINT","Illness","constructor","props","state","data","related_locations","related_pollutants","componentDidMount","key","match","params","fetch","then","res","json","setState","render","illness_name","illness_desc","illness_lethality","illness_symptoms","illness_contagious","illness_treatable","illness_image","map","location","location_id","pollutant","pollutant_name","Illnesses","num_results","objects","page","total_pages","req","handleClick","e","index","preventDefault","span","end","l","r","inbetween","p","push","illness","backgroundColor","borderColor","WrapperComponent","itemTypeToComponent","PAGE","value","isActive","onClick","ELLIPSIS","FIRST_PAGE_LINK","PREVIOUS_PAGE_LINK","NEXT_PAGE_LINK","LAST_PAGE_LINK"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader,\n         CardDeck, CardColumns, CardSubtitle, CardBody , NavLink, UncontrolledCarousel,\n         Form,FormGroup, Label, Input, FormText} from 'reactstrap';\nimport { Image, Col, Row, Pagination} from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Link , Switch,BrowserHistory } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { createUltimatePagination, ITEM_TYPES } from 'react-ultimate-pagination';\nimport ReactDOM from 'react-dom';\nimport Locations from '../locations/Locations';\nimport LocationInstance from '../locations/LocationInstance';\nimport Pollutants from '../pollutants/Pollutants';\nimport PollutantInstance from '../pollutants/PollutantInstance';\n\n\n/**\nSources:\n\nPagination sources:\nhttps://github.com/react-bootstrap/pagination\nhttps://www.npmjs.com/package/react-ultimate-pagination\nhttps://codepen.io/joedazza/pen/BVXVej\n**/\n\nconst ENDPOINT = 'https://api.howsmyair.me/illness';\n\nexport class Illness extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        data: {},\n        related_locations: [],\n        related_pollutants: []\n      };\n    }\n   componentDidMount() {\n      const {key} = this.props.match.params;\n      // get location\n      fetch(ENDPOINT + '/' + key)\n         .then(res => res.json())\n         .then(data => { this.setState({\n            data: data,\n            related_locations : data.related_locations,\n            related_pollutants : data.related_pollutants\n         })\n      })\n    };\n   render() {\n      return (\n        <div>\n            <Container>\n            <p>\n            <br/>\n            <h1 >{this.state.data.illness_name}</h1>\n            <br/>\n            <h6 class=\"card-subtitle mb-2 text-muted\">{this.state.data.illness_desc}</h6>\n            <p>Lethality: {this.state.data.illness_lethality}\n            <br/>Symptoms: {this.state.data.illness_symptoms}\n            <br/>Contagious: {this.state.data.illness_contagious}\n            <br/>Treatable: {this.state.data.illness_treatable}\n            </p>\n            </p>\n            <img width=\"50%\" src={this.state.data.illness_image} alt=\"Italian Trulli\"/>\n            </Container>\n            {/*related locations*/}\n            <Container>\n            <h6>Related Locations</h6>\n            <Jumbotron>\n            {this.state.related_locations.map((location) => (\n               <CardColumns>\n                  <LocationInstance location_id={location.location_id} />\n              </CardColumns>\n            ))}\n            </Jumbotron>\n            </Container>\n            {/*related pollutants*/}\n            <Container>\n            <h6>Related Polluants</h6>\n            <Jumbotron>\n            {this.state.related_pollutants.map((pollutant) => (\n               <CardColumns>\n                <PollutantInstance pollutant_name={pollutant.pollutant_name} />\n             </CardColumns>\n            ))}\n            </Jumbotron>\n            </Container>\n        </div>\n      );\n   }\n}\n\nexport class Illnesses extends Component {\n\n   /*This right here is like object attributes*/\n  constructor(props) {\n    super(props);\n    this.state={\n      num_results: null,\n      objects: [],\n      page: null,\n      total_pages: null,\n      req : null\n    }\n  }\n\n  /*When the component is loaded, here's init*/\n  componentDidMount() {\n    fetch(ENDPOINT)\n       .then(res => res.json())\n       .then(data => { this.setState({\n          num_results: data.num_results,\n          objects: data.objects,\n          page: data.page - 1,\n          total_pages: data.total_pages\n       })\n    })\n  }\n\n\n  /*here's how we are going to handle clicks for pagination\n    Really only two things about the current state changes:\n    the current page numbers, and the results shown\n  */\n    handleClick(e, index) {\n      e.preventDefault();\n      fetch(ENDPOINT + \"?page=\" + (index + 1))\n         .then(res => res.json())\n         .then(data => { this.setState({\n            num_results: data.num_results,\n            objects: data.objects,\n            page: data.page-1,\n            total_pages: data.total_pages\n         })\n      })\n    }\n\n\n   /*Here's how the Locations Page is rendered*/\n\n   /*source: looking at example of pagination for Global Antidote https://gitlab.com/stubbsnc/globalantidote/blob/production/dynamic-site/src/pages*/\n   render() {\n      let span = 2\n      let page = this.state.page\n      let end = this.state.total_pages - 1\n      let l = page - (span/2)\n      let r = page + (span/2)\n      let inbetween = [];\n\n      if(page-span < 0){\n        for(let p = 0; p <= span; p++){\n          inbetween.push(\n            <Pagination.Item\n              active={p === page}\n              onClick={e => this.handleClick(e,p)}\n            >\n            {p+1}\n            </Pagination.Item>\n          );\n        }\n      } else if (page+span > end) {\n          for(let p = end - span; p <= end ; p++){\n            inbetween.push(\n              <Pagination.Item\n                active={p === page}\n                onClick={e => this.handleClick(e,p)}\n              >\n              {p+1}\n              </Pagination.Item>\n          );\n        }\n      } else {\n        for(let p = l < 0 ? 0 : l; p <= r && p <= end; p++){\n          inbetween.push(\n            <Pagination.Item\n              active={p === page}\n              onClick={e => this.handleClick(e,p)}\n            >\n            {p+1}\n            </Pagination.Item>\n          );\n        }\n      }\n\n      return (\n      <div>\n            {/*Request Stats*/}\n            <center>\n               <h1>Illnesses</h1>\n               {this.state.num_results} Results,\n               Page {this.state.page+1} / {this.state.total_pages}\n            </center>\n\n            <Container>\n              <Row className=\"justify-content-md-center\">\n                <Pagination>\n                  {/*First Page*/}\n                  <Pagination.First\n                    onClick={e => this.handleClick(e,0)}\n                  />\n\n                  {/*Previous Page*/}\n                  <Pagination.Prev\n                    disabled={this.state.page <= 0}\n                    onClick={e => this.handleClick(e, this.state.page - 1)}\n                  />\n\n                  {/*Eveything in between - see block before return statement*/}\n                  {inbetween}\n\n                  {/*Next Page*/}\n                  <Pagination.Next\n                    disabled={this.state.page >= this.state.total_pages - 1}\n                    onClick={e => this.handleClick(e, this.state.page + 1)}\n                  />\n\n                  {/*Last Page*/}\n                  <Pagination.Last\n                    onClick={e => this.handleClick(e,this.state.total_pages - 1)}\n                  />\n                </Pagination>\n               </Row>\n            </Container>\n\n            <Container>\n              {/*Record Grid*/}\n              <Row className=\"justify-content-md-center\" className=\"spacing\">\n              {this.state.objects.map((illness) => (\n                 <Col className=\"spacing\" lg=\"4\" sm=\"6\" xs=\"12\">\n                 <Card body style={{ backgroundColor: '#00', borderColor: '#2255' }}>\n                    <CardImg top width=\"100%\" src={illness.illness_image} />\n                    <CardHeader>\n                      {/* The dynamic link is arranged this way through the NavBar.js\n                      and back to the Location component*/}\n                      <h5><Link to={\"/Illness/\" + illness.illness_name}>{illness.illness_name}</Link></h5>\n                    </CardHeader>\n                    <CardBody>\n                    <CardText>\n                      <p>Lethality: {illness.illness_lethality}\n                      <br/>Symptoms: {illness.illness_symptoms}\n                      <br/>Contagious: {illness.illness_contagious}\n                      <br/>Treatable: {illness.illness_treatable}\n                      </p>\n                    </CardText>\n                    </CardBody>\n                 </Card>\n                 <p />\n                 </Col>\n              ))}\n              </Row>\n         </Container>\n      </div>\n      );\n   }\n}\n\n\nexport default createUltimatePagination({\n  WrapperComponent: Pagination,\n  itemTypeToComponent: {\n    [ITEM_TYPES.PAGE]: ({value, isActive, onClick}) => (\n      <Pagination.Item active={isActive} onClick={onClick}>{value}</Pagination.Item>\n    ),\n    [ITEM_TYPES.ELLIPSIS]: ({ isActive, onClick }) => (\n      <Pagination.Ellipsis disabled={isActive} onClick={onClick} />\n    ),\n    [ITEM_TYPES.FIRST_PAGE_LINK]: ({ isActive, onClick }) => (\n      <Pagination.First disabled={isActive} onClick={onClick} />\n    ),\n    [ITEM_TYPES.PREVIOUS_PAGE_LINK]: ({ isActive, onClick }) => (\n      <Pagination.Prev disabled={isActive} onClick={onClick} />\n    ),\n    [ITEM_TYPES.NEXT_PAGE_LINK]: ({ isActive, onClick }) => (\n      <Pagination.Next disabled={isActive} onClick={onClick} />\n    ),\n    [ITEM_TYPES.LAST_PAGE_LINK]: ({ isActive, onClick }) => (\n      <Pagination.Last disabled={isActive} onClick={onClick} />\n    ),\n  },\n});\n"]},"metadata":{},"sourceType":"module"}