{"ast":null,"code":"var _jsxFileName = \"/Users/davidbomm/SWE/cs373-airpollution/frontend/src/pages/pollutants/PollutantInstance.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader, CardDeck, CardColumns, CardSubtitle, CardBody, NavLink, UncontrolledCarousel, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Image, Col, Row, Pagination } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Link, Switch, BrowserHistory } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { createUltimatePagination, ITEM_TYPES } from 'react-ultimate-pagination';\nimport ReactDOM from 'react-dom';\nconst ENDPOINT = 'https://api.howsmyair.me/pollutants';\nexport class RelatedPollutants extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {}\n    };\n  }\n\n  componentDidMount() {\n    // get location\n    fetch(ENDPOINT + '/' + this.props.pollutant_name).then(res => res.json()).then(data => {\n      this.setState({\n        data: data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Card, {\n      body: true,\n      style: {\n        backgroundColor: '#00',\n        borderColor: '#2255',\n        height: '22rem',\n        width: '22rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        cursor: 'pointer'\n      },\n      href: \"/Pollutant/\" + this.state.data.chemical_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.state.data.chemical_name)), React.createElement(CardImg, {\n      style: {\n        maxHeight: '15rem'\n      },\n      src: this.state.data.chemspider_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nclass PollutantInstance extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      related_illnesses: [],\n      related_locations: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(ENDPOINT + '/' + this.props.pollutant_name).then(res => res.json()).then(data => {\n      this.setState({\n        data: data,\n        related_illnesses: data.related_illnesses,\n        related_locations: data.related_locations\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        cursor: 'pointer'\n      },\n      href: \"/Pollutant/\" + this.state.data.chemical_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Card, {\n      body: true,\n      style: {\n        backgroundColor: '#00',\n        borderColor: '#2255',\n        height: '45rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(CardImg, {\n      src: this.state.data.chemspider_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.state.data.chemical_name)), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Inhalation Cancer Potency\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), \"Potency: \", this.state.data.inhalation_cancer_potency, \" \", this.state.data.inhalation_cancer_potency_units, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), \"Source: \", this.state.data.inhalation_cancer_potency_source, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Inhalation Reference Concentration\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), \"Concentration: \", this.state.data.inhalation_reference_concentration, \" \", this.state.data.inhalation_reference_concentration_units, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), \"Source: \", this.state.data.inhalation_reference_concentration_source, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"National Ambient Air Quality Standards\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), \"Standard: \", this.state.data.national_ambient_air_quality_std, \" \", this.state.data.national_ambient_air_quality_std_units, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), \"Source: \", this.state.data.national_ambient_air_quality_std_source))))));\n  }\n\n}\n\nexport default PollutantInstance;","map":{"version":3,"sources":["/Users/davidbomm/SWE/cs373-airpollution/frontend/src/pages/pollutants/PollutantInstance.js"],"names":["React","Component","Jumbotron","Container","Card","Button","CardImg","CardTitle","CardText","CardHeader","CardDeck","CardColumns","CardSubtitle","CardBody","NavLink","UncontrolledCarousel","Form","FormGroup","Label","Input","FormText","Image","Col","Row","Pagination","BrowserRouter","Router","Route","Link","Switch","BrowserHistory","createBrowserHistory","createUltimatePagination","ITEM_TYPES","ReactDOM","ENDPOINT","RelatedPollutants","constructor","props","state","data","componentDidMount","fetch","pollutant_name","then","res","json","setState","render","backgroundColor","borderColor","height","width","cursor","chemical_name","maxHeight","chemspider_id","PollutantInstance","related_illnesses","related_locations","inhalation_cancer_potency","inhalation_cancer_potency_units","inhalation_cancer_potency_source","inhalation_reference_concentration","inhalation_reference_concentration_units","inhalation_reference_concentration_source","national_ambient_air_quality_std","national_ambient_air_quality_std_units","national_ambient_air_quality_std_source"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader,\n         CardDeck, CardColumns, CardSubtitle, CardBody , NavLink, UncontrolledCarousel,\n         Form,FormGroup, Label, Input, FormText} from 'reactstrap';\nimport { Image, Col, Row, Pagination} from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Link , Switch,BrowserHistory } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { createUltimatePagination, ITEM_TYPES } from 'react-ultimate-pagination';\nimport ReactDOM from 'react-dom';\n\n\nconst ENDPOINT = 'https://api.howsmyair.me/pollutants';\n\nexport class RelatedPollutants extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {}\n    };\n  }\n\n  componentDidMount() {\n    // get location\n    fetch(ENDPOINT + '/' + this.props.pollutant_name)\n        .then(res => res.json())\n        .then(data => { this.setState({\n          data: data\n      })\n    })\n  };\n\n  render() {\n    return (\n      <div>\n      <Card body style={{ backgroundColor: '#00', borderColor: '#2255', height: '22rem', width:'22rem' }}>\n      <a style={{ cursor: 'pointer' }} href={\"/Pollutant/\" + this.state.data.chemical_name}>\n         <CardHeader>\n           <h5>{this.state.data.chemical_name}</h5>\n         </CardHeader>\n         <CardImg style={{ maxHeight: '15rem' }} src={this.state.data.chemspider_id} />\n      </a>\n      </Card>\n      </div>\n    );\n  }\n}\n\nclass PollutantInstance extends Component {\n\n   constructor(props) {\n     super(props);\n     this.state = {\n      data: {},\n      related_illnesses: [],\n      related_locations: []\n     };\n   }\n\n  componentDidMount() {\n     fetch(ENDPOINT + '/' + this.props.pollutant_name)\n        .then(res => res.json())\n        .then(data => { this.setState({\n           data: data,\n           related_illnesses : data.related_illnesses,\n           related_locations : data.related_locations\n        })\n     })\n   };\n\n  render() {\n     return (\n      <div>\n      <a style={{ cursor: 'pointer' }} href={\"/Pollutant/\" + this.state.data.chemical_name}>\n      <Card body style={{ backgroundColor: '#00', borderColor: '#2255', height: '45rem' }}>\n        <CardImg src = {this.state.data.chemspider_id}/>\n        <CardHeader>\n          {/* The dynamic link is arranged this way through the NavBar.js\n          and back to the Location component*/}\n          <h5>{this.state.data.chemical_name}</h5>\n        </CardHeader>\n        <CardBody>\n        <CardText>\n          <p>\n          <b>Inhalation Cancer Potency</b>\n          <br/>Potency: {this.state.data.inhalation_cancer_potency} {this.state.data.inhalation_cancer_potency_units}\n          <br/>Source: {this.state.data.inhalation_cancer_potency_source}\n          <br/><b>Inhalation Reference Concentration</b>\n          <br/>Concentration: {this.state.data.inhalation_reference_concentration} {this.state.data.inhalation_reference_concentration_units}\n          <br/>Source: {this.state.data.inhalation_reference_concentration_source}\n          <br/><b>National Ambient Air Quality Standards</b>\n          <br/>Standard: {this.state.data.national_ambient_air_quality_std} {this.state.data.national_ambient_air_quality_std_units}\n          <br/>Source: {this.state.data.national_ambient_air_quality_std_source}\n          </p>\n        </CardText>\n        </CardBody>\n     </Card>\n     </a>\n      </div>\n     );\n  }\n}\n\nexport default PollutantInstance;\n"]},"metadata":{},"sourceType":"module"}