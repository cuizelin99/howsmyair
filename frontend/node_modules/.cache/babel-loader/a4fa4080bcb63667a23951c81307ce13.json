{"ast":null,"code":"var _jsxFileName = \"/Users/jasonlihuang/Documents/cs373-airpollution/frontend/src/pages/locations/LocationInstance.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader, CardDeck, CardColumns, CardSubtitle, CardBody, NavLink, UncontrolledCarousel, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Image, Col, Row, ListGroup } from 'react-bootstrap';\nimport PollutantInstance, { RelatedPollutants } from '../pollutants/PollutantInstance';\nimport IllnessInstance, { RelatedIllness } from '../illnesses/IllnessInstance';\nimport Axios from 'axios';\n\nconst fetch = require(\"node-fetch\");\n\nconst ENDPOINT = 'https://api.howsmyair.me/location';\nexport class RelatedLocations extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      location_url: null\n    };\n  }\n\n  componentDidMount() {\n    // get location\n    fetch(ENDPOINT + '/' + this.props.location_id).then(res => res.json()).then(data => {\n      this.setState({\n        data: data,\n        location_url: \"https://maps.googleapis.com/maps/api/staticmap?center=\" + data.latitude + \",\" + data.longitude + \"&zoom=12&size=400x400\" + \"&markers=color:green%7Clabel:G%7C\" + data.latitude + \",\" + data.longitude + \"&key=AIzaSyB-U0Z7cqufI-MHmRwfLmgqDCyQmOlIq48\"\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Card, {\n      body: true,\n      style: {\n        backgroundColor: '#00',\n        borderColor: '#2255',\n        width: '16rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        cursor: 'pointer'\n      },\n      href: \"/Location/\" + this.props.location_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.state.data.city), React.createElement(\"h6\", {\n      class: \"card-subtitle mb-2 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.state.data.state_name)), React.createElement(CardImg, {\n      src: this.state.location_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }))));\n  }\n\n}\nexport class Location extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      location_url: null,\n      isloaded: false,\n      related_illnesses: [],\n      related_pollutants: []\n    };\n  }\n\n  componentDidMount() {\n    const key = this.props.match.params.key; // get location\n\n    fetch(ENDPOINT + '/' + key).then(res => res.json()).then(data => {\n      this.setState({\n        data: data,\n        location_url: \"https://maps.googleapis.com/maps/api/staticmap?center=\" + data.latitude + \",\" + data.longitude + \"&zoom=12&size=600x295\" + \"&markers=color:green%7Clabel:G%7C\" + data.latitude + \",\" + data.longitude + \"&key=AIzaSyB-U0Z7cqufI-MHmRwfLmgqDCyQmOlIq48\",\n        isloaded: true,\n        related_illnesses: data.related_illnesses,\n        related_pollutants: data.related_pollutants\n      });\n    });\n  }\n\n  render() {\n    if (this.state.isloaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, this.state.data.city), React.createElement(\"h2\", {\n        class: \"card-subtitle mb-2 text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, this.state.data.state_name)), React.createElement(AQI, {\n        latitude: this.state.data.latitude,\n        longitude: this.state.data.longitude,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        variant: \"flush\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"County: \", this.state.data.county_name), React.createElement(ListGroup.Item, {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Latitude: \", this.state.data.latitude), React.createElement(ListGroup.Item, {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Longitude: \", this.state.data.longitude), React.createElement(ListGroup.Item, {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Population: \", this.state.data.population), React.createElement(ListGroup.Item, {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Density (per sq. mile): \", this.state.data.density), React.createElement(ListGroup.Item, {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Time Zone: \", this.state.data.timezone))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        style: {\n          cursor: 'pointer'\n        },\n        href: \"https://www.google.com/maps/place/\".concat(this.state.data.city),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.location_url,\n        alt: \"Italian Trulli\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })))))), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Related Illnesses\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        className: \"spacing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, this.state.related_illnesses.map(illness => React.createElement(Col, {\n        className: \"spacing\",\n        lg: \"4\",\n        sm: \"6\",\n        xs: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(RelatedIllness, {\n        illness_name: illness.illness_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }))))))), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Related Polluants\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        className: \"spacing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, this.state.related_pollutants.map(pollutant => React.createElement(Col, {\n        className: \"spacing\",\n        lg: \"4\",\n        sm: \"6\",\n        xs: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(RelatedPollutants, {\n        pollutant_name: pollutant.pollutant_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }))))))));\n    } else {\n      this.componentDidMount();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://i.makeagif.com/media/9-30-2017/bhAyTs.gif\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\nexport class AQI extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n    this.aqiQuery = this.aqiQuery.bind(this);\n  }\n\n  componentDidMount() {\n    // get location -using axios because fetch was being a bitch when parsing json\n    Axios.get(this.aqiQuery()).then(json => {\n      this.setState({\n        data: json.data\n      });\n    });\n  }\n\n  aqiQuery() {\n    // return \"https://ea25e98a-d3cf-4f1e-9275-6b2ae5c10121.mock.pstmn.io/aq/observation/latLong/current/?format=application/json&latitude=41.0802&longitude=-81.5219&distance=25&API_KEY=DB6A42AD-57B4-48E5-9B26-D3E645C62A54\"\n    return \"https://cors-anywhere.herokuapp.com/http://www.airnowapi.org/aq/observation/latLong/current/?format=application/json&latitude=\".concat(this.props.latitude, \"&longitude=\").concat(this.props.longitude, \"&distance=25&API_KEY=DB6A42AD-57B4-48E5-9B26-D3E645C62A54\");\n  }\n\n  render() {\n    return React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, this.state.data.map(measurement => React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      style: {\n        color: '#1976d2'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, measurement.ParameterName, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(CardSubtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(CardText, {\n      style: {\n        color: '#1976d2'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Air Quality Index: \", measurement.AQI, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), \"Category Number: \", measurement.Category.Number, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), \"Category Classification: \", measurement.Category.Name, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    })))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/jasonlihuang/Documents/cs373-airpollution/frontend/src/pages/locations/LocationInstance.js"],"names":["React","Component","Jumbotron","Container","Card","Button","CardImg","CardTitle","CardText","CardHeader","CardDeck","CardColumns","CardSubtitle","CardBody","NavLink","UncontrolledCarousel","Form","FormGroup","Label","Input","FormText","Image","Col","Row","ListGroup","PollutantInstance","RelatedPollutants","IllnessInstance","RelatedIllness","Axios","fetch","require","ENDPOINT","RelatedLocations","constructor","props","state","data","location_url","componentDidMount","location_id","then","res","json","setState","latitude","longitude","render","backgroundColor","borderColor","width","cursor","city","state_name","Location","isloaded","related_illnesses","related_pollutants","key","match","params","color","county_name","population","density","timezone","map","illness","illness_name","pollutant","pollutant_name","AQI","aqiQuery","bind","get","measurement","ParameterName","Category","Number","Name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader,\n         CardDeck, CardColumns, CardSubtitle, CardBody , NavLink, UncontrolledCarousel,\n         Form,FormGroup, Label, Input, FormText} from 'reactstrap';\nimport { Image, Col, Row, ListGroup } from 'react-bootstrap';\nimport PollutantInstance,{RelatedPollutants} from '../pollutants/PollutantInstance';\nimport IllnessInstance,{RelatedIllness} from '../illnesses/IllnessInstance';\nimport Axios from 'axios';\nconst fetch = require(\"node-fetch\");\n\n\nconst ENDPOINT = 'https://api.howsmyair.me/location';\n\nexport class RelatedLocations extends Component {\n\n  constructor(props){\n    super(props);\n      this.state = {\n        data: {},\n        location_url : null\n      };\n  }\n\n  componentDidMount() {\n    // get location\n    fetch(ENDPOINT + '/' + this.props.location_id)\n       .then(res => res.json())\n       .then(data => { this.setState({\n          data : data,\n          location_url : \"https://maps.googleapis.com/maps/api/staticmap?center=\"+\n                          data.latitude+\",\"+data.longitude+\n                          \"&zoom=12&size=400x400\"+\n                          \"&markers=color:green%7Clabel:G%7C\"+\n                          data.latitude+\",\"+data.longitude +\n                          \"&key=AIzaSyB-U0Z7cqufI-MHmRwfLmgqDCyQmOlIq48\"\n       })\n    })\n  }\n   render() {\n      return (\n        <div>\n          <Card body style={{ backgroundColor: '#00', borderColor: '#2255', width:'16rem' }}>\n            <a style={{ cursor: 'pointer' }} href={\"/Location/\" + this.props.location_id}>\n               <CardHeader>\n                  <h5>{this.state.data.city}</h5>\n                  <h6 class = \"card-subtitle mb-2 text-muted\">{this.state.data.state_name}</h6>\n               </CardHeader>\n               <CardImg src={this.state.location_url}/>\n            </a>\n          </Card>\n        </div>\n      );\n  }\n\n}\n\nexport class Location extends Component {\n\n   constructor(props) {\n      super(props);\n      this.state = {\n        data: {},\n        location_url : null,\n        isloaded : false,\n        related_illnesses: [],\n        related_pollutants: []\n      };\n   }\n\n   componentDidMount() {\n\n      const {key} = this.props.match.params;\n\n      // get location\n      fetch(ENDPOINT + '/' + key)\n         .then(res => res.json())\n         .then(data => { this.setState({\n            data: data,\n            location_url : \"https://maps.googleapis.com/maps/api/staticmap?center=\"+\n                            data.latitude+\",\"+data.longitude+\n                            \"&zoom=12&size=600x295\"+\n                            \"&markers=color:green%7Clabel:G%7C\"+\n                            data.latitude+\",\"+data.longitude +\n                            \"&key=AIzaSyB-U0Z7cqufI-MHmRwfLmgqDCyQmOlIq48\",\n            isloaded : true,\n            related_illnesses : data.related_illnesses,\n            related_pollutants : data.related_pollutants\n         })\n      })\n   };\n\n   render() {\n      if(this.state.isloaded){\n        return (\n          <div>\n            <Jumbotron>\n              <Container>\n              <br/>\n              <Row>\n                <Col>\n                  <h1 style={{color: '#1976d2'}}>{this.state.data.city}</h1>\n                  <h2 class = \"card-subtitle mb-2 text-muted\">{this.state.data.state_name}</h2>\n                </Col>\n                  <AQI latitude = {this.state.data.latitude} longitude = {this.state.data.longitude}/>\n              </Row>\n              <br/>\n              <Row>\n                <Col>\n                <ListGroup variant=\"flush\" >\n                  <ListGroup.Item  style={{color: '#1976d2'}}>\n                    County: {this.state.data.county_name}\n                  </ListGroup.Item>\n                  <ListGroup.Item style={{color: '#1976d2'}}>\n                    Latitude: {this.state.data.latitude}\n                  </ListGroup.Item>\n                  <ListGroup.Item style={{color: '#1976d2'}}>\n                    Longitude: {this.state.data.longitude}\n                  </ListGroup.Item>\n                  <ListGroup.Item style={{color: '#1976d2'}}>\n                    Population: {this.state.data.population}\n                  </ListGroup.Item>\n                  <ListGroup.Item style={{color: '#1976d2'}}>\n                    Density (per sq. mile): {this.state.data.density}\n                  </ListGroup.Item>\n                  <ListGroup.Item style={{color: '#1976d2'}}>\n                    Time Zone: {this.state.data.timezone}\n                  </ListGroup.Item>\n                </ListGroup>\n                </Col>\n                <Col>\n                  <a style={{ cursor: 'pointer' }} href={`https://www.google.com/maps/place/${this.state.data.city}`}>\n                    <img src={this.state.location_url} alt=\"Italian Trulli\"/>\n                  </a>\n                </Col>\n              </Row>\n              </Container>\n            </Jumbotron>\n            <Container>\n              <Row>\n                <Col>\n                  <h1 style={{color: '#1976d2'}}>Related Illnesses</h1><br/>\n                  <Row className=\"justify-content-md-center\" className=\"spacing\">\n                    {this.state.related_illnesses.map((illness) => (\n                       <Col className=\"spacing\" lg=\"4\" sm=\"6\" xs=\"12\">\n                          <RelatedIllness illness_name={illness.illness_name} />\n                          <p />\n                       </Col>\n                    ))}\n                  </Row>\n                </Col>\n              </Row>\n            </Container>\n            <Container>\n              <Row>\n                <Col>\n                  <h1 style={{color: '#1976d2'}}>Related Polluants</h1><br/>\n                  <Row className=\"justify-content-md-center\" className=\"spacing\">\n                    {this.state.related_pollutants.map((pollutant) => (\n                       <Col className=\"spacing\" lg=\"4\" sm=\"6\" xs=\"12\">\n                        <RelatedPollutants pollutant_name={pollutant.pollutant_name} />\n                        <p />\n                     </Col>\n                    ))}\n                  </Row>\n                </Col>\n              </Row>\n            </Container>\n          </div>\n        );\n      } else {\n        this.componentDidMount();\n        return(\n          <div>\n           <center><img src = \"https://i.makeagif.com/media/9-30-2017/bhAyTs.gif\"/></center>\n          </div>        )\n      }\n   }\n}\n\nexport class AQI extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n    this.aqiQuery = this.aqiQuery.bind(this)\n  }\n\n  componentDidMount() {\n    // get location -using axios because fetch was being a bitch when parsing json\n    Axios.get(this.aqiQuery())\n      .then(json => {this.setState({data:json.data})});\n  };\n\n  aqiQuery(){\n    // return \"https://ea25e98a-d3cf-4f1e-9275-6b2ae5c10121.mock.pstmn.io/aq/observation/latLong/current/?format=application/json&latitude=41.0802&longitude=-81.5219&distance=25&API_KEY=DB6A42AD-57B4-48E5-9B26-D3E645C62A54\"\n    return `https://cors-anywhere.herokuapp.com/http://www.airnowapi.org/aq/observation/latLong/current/?format=application/json&latitude=${this.props.latitude}&longitude=${this.props.longitude}&distance=25&API_KEY=DB6A42AD-57B4-48E5-9B26-D3E645C62A54`\n  }\n\n  render() {\n      return (\n        <Row>\n          {this.state.data.map( measurement => (\n            <Col>\n              <Card>\n                <CardHeader style={{color: '#1976d2'}}>\n                  {measurement.ParameterName}<br/>\n                <CardSubtitle>\n                </CardSubtitle>\n                </CardHeader>\n                <CardBody>\n                  <CardText style={{color: '#1976d2'}}>\n                    Air Quality Index: {measurement.AQI} <br/>\n                    Category Number: {measurement.Category.Number} <br/>\n                    Category Classification: {measurement.Category.Name} <br/>\n                  </CardText>\n                </CardBody>\n              </Card>\n            </Col>\n          ))}\n        </Row>\n      );\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}