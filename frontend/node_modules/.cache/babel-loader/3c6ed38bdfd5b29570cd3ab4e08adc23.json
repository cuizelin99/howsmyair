{"ast":null,"code":"var _jsxFileName = \"/Users/jasonlihuang/Documents/cs373-airpollution/frontend/src/pages/locations/Locations.js\";\nimport React, { Component } from 'react';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader, CardDeck, CardColumns, CardSubtitle, CardBody, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Col, Row, Pagination, DropdownButton, Dropdown } from 'react-bootstrap';\n\nconst fetch = require(\"node-fetch\");\n/**\nSources:\n\nPagination sources:\nhttps://github.com/react-bootstrap/pagination\nhttps://codepen.io/joedazza/pen/BVXVej\nDAMN CORS:\nhttps://gist.github.com/jesperorb/6ca596217c8dfba237744966c2b5ab1e\n**/\n\n\nconst ENDPOINT = 'https://api.howsmyair.me/location';\n\nconst buildOrder = (fieldname, direction) => {\n  return \"{%22field%22:%22\".concat(fieldname, \"%22,%22direction%22:%22\").concat(direction, \"%22}\");\n};\n\nconst buildFilter = (fieldname, operator, value) => {\n  return \"{%22name%22:%22\".concat(fieldname, \"%22,%22op%22:%22\").concat(operator, \"%22,%22val%22:%22\").concat(value, \"%22}\");\n};\n\nconst buildQuery = (model, page, filterObjs, orderObjs) => {\n  return \"https://api.howsmyair.me/\".concat(model, \"?page=\").concat(page, \"&q={%22filters%22:[\").concat(filterObjs, \"],%22order_by%22:[\").concat(orderObjs, \"]}\");\n};\n\nexport class Locations extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      num_results: null,\n      objects: [],\n      total_pages: null,\n      states: [],\n      page: 1,\n      time_zones: [],\n      current_state: \"None\",\n      current_timezone: \"None\",\n      current_population: \"None\",\n      current_density: \"None\",\n      sort_by: \"city\",\n      display_sort: \"City\",\n      order: \"asc\",\n      display_order: \"Ascending\",\n      isloaded: false,\n      current_query: buildQuery(\"location\", buildFilter(\"city\", \"like\", \"%25\".concat(this.props.searchstring, \"%25\")), buildOrder(\"city\", \"desc\"))\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.getQuery());\n    fetch(this.getQuery()).then(res => res.json()).then(data => {\n      this.setState({\n        data: data,\n        num_results: data.num_results,\n        objects: data.objects,\n        page: data.page,\n        total_pages: data.total_pages,\n        isloaded: true,\n        states: this.getUniques(data.objects, \"state_name\"),\n        time_zones: this.getUniques(data.objects, \"timezone\")\n      });\n    });\n  }\n\n  getQuery() {\n    let filterObjs = buildFilter(\"city\", \"like\", \"%25%25\");\n    let orderObjs = buildOrder(\"city\", \"asc\");\n\n    if (this.state.current_state != \"None\") {\n      filterObjs += \",\" + buildFilter(\"state_name\", \"eq\", this.state.current_state);\n    }\n\n    if (this.state.current_timezone != \"None\") {\n      filterObjs += \",\" + buildFilter(\"timezone\", \"eq\", this.state.current_timezone);\n    }\n\n    switch (this.state.current_population) {\n      case \"Small\":\n        filterObjs += \",\" + buildFilter(\"population\", \"le\", 500000);\n        break;\n\n      case \"Medium\":\n        filterObjs += \",\" + buildFilter(\"population\", \"ge\", 500000);\n        filterObjs += \",\" + buildFilter(\"population\", \"lt\", 1000000);\n        break;\n\n      case \"Large\":\n        filterObjs += \",\" + buildFilter(\"population\", \"ge\", 1000000);\n\n      default:\n        break;\n    }\n\n    switch (this.state.current_density) {\n      case \"Sparse\":\n        filterObjs += \",\" + buildFilter(\"density\", \"le\", 1000);\n        break;\n\n      case \"Medium\":\n        filterObjs += \",\" + buildFilter(\"density\", \"ge\", 1000);\n        filterObjs += \",\" + buildFilter(\"density\", \"lt\", 2000);\n        break;\n\n      case \"Dense\":\n        filterObjs += \",\" + buildFilter(\"density\", \"ge\", 2000);\n\n      default:\n        break;\n    }\n\n    orderObjs = buildOrder(this.state.sort_by, this.state.order);\n    return buildQuery(\"location\", this.state.page, filterObjs, orderObjs);\n  }\n\n  getUniques(objArray, key) {\n    const uniqueVals = [];\n    objArray.map(obj => {\n      if (uniqueVals.indexOf(obj[key]) === -1) {\n        uniqueVals.push(obj[key]);\n      }\n\n      ;\n    });\n    return uniqueVals;\n  }\n\n  render() {\n    if (this.state.isloaded) {\n      let span = 4;\n      let page = this.state.page;\n      let l = page - span / 2;\n      let r = page + span / 2;\n      let range = [];\n      /*If there aren't enough pages to have dynamically changing page values*/\n\n      if (this.state.total_pages < span) {\n        range = [...Array(this.state.total_pages + 1 - 1).keys()].map(i => i + 1);\n      } else if (page + span > this.state.total_pages) {\n        /*At the right bound*/\n        range = [...Array(this.state.total_pages - (this.state.total_pages - span)).keys()].map(i => this.state.total_pages - span + i + 1);\n      } else if (page - span < 0) {\n        /*At the left bound*/\n        range = [...Array(span + 1 - 1).keys()].map(i => i + 1);\n      } else {\n        /*At somewhere in between*/\n        range = [...Array(r + 1 - l - 1).keys()].map(i => i + l);\n      }\n\n      console.log(range);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, this.state.num_results, \" Locations\")), React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Filters\")), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"States\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_state: \"None\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"None\"), this.state.states.map(st => React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_state: st,\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, st))), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, this.state.current_state))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Time Zone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_timezone: \"None\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"None\"), this.state.time_zones.map(tz => React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_timezone: tz,\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, tz))), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, this.state.current_timezone))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Population\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_population: \"None\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"None\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_population: \"Small\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Small\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_population: \"Medium\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Medium\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_population: \"Large\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"Large\")), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, this.state.current_population)))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Density\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_density: \"None\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"None\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_density: \"Sparse\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Sparse\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_density: \"Medium\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Medium\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_density: \"Dense\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"Dense\")), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, this.state.current_density)))), React.createElement(\"h3\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"Sort By\")), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: this.state.display_sort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"city\",\n            display_sort: \"City\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"City\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"county_name\",\n            display_sort: \"County\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"County\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"state_name\",\n            display_sort: \"State\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"State\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"timezone\",\n            display_sort: \"Time Zone\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"Time Zone\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"latitude\",\n            display_sort: \"Latitude\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"Latitude\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"longitude\",\n            display_sort: \"Longitude\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"Longitude\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"population\",\n            display_sort: \"Population\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"Population\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"density\",\n            display_sort: \"Density\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"Density\"))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: this.state.display_order,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            order: \"asc\",\n            display_order: \"Ascending\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"Ascending\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            order: \"desc\",\n            display_order: \"Descending\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"Descending\"))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"Page \", this.state.page, \"/\", this.state.total_pages)), React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(Pagination, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(Pagination.First, {\n        onClick: e => this.setState({\n          page: 1,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }), React.createElement(Pagination.Prev, {\n        disabled: this.state.page <= 1,\n        onClick: e => this.setState({\n          page: this.state.page - 1,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }), range.map(page => React.createElement(Pagination.Item, {\n        active: page === this.state.page,\n        onClick: e => this.setState({\n          page: page,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, page)), React.createElement(Pagination.Next, {\n        disabled: this.state.page >= this.state.total_pages,\n        onClick: e => this.setState({\n          page: this.state.page + 1,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }), React.createElement(Pagination.Last, {\n        onClick: e => this.setState({\n          page: this.state.total_pages,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      })))), Locationcards(this.state.objects));\n    } else {\n      this.componentDidMount();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://i.makeagif.com/media/9-30-2017/bhAyTs.gif\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\n\nconst Locationcards = locations => {\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"justify-content-md-center\",\n    className: \"spacing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344\n    },\n    __self: this\n  }, locations.map(location => React.createElement(Col, {\n    className: \"spacing\",\n    lg: \"4\",\n    sm: \"6\",\n    xs: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347\n    },\n    __self: this\n  }, React.createElement(Card, {\n    body: true,\n    style: {\n      backgroundColor: '#00',\n      borderColor: '#2255',\n      height: '37rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    style: {\n      cursor: 'pointer'\n    },\n    href: \"/Location/\" + location.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349\n    },\n    __self: this\n  }, React.createElement(CardImg, {\n    src: \"https://maps.googleapis.com/maps/api/staticmap?center=\" + location.latitude + \",\" + location.longitude + \"&zoom=12&size=400x400\" + \"&markers=color:green%7Clabel:G%7C\" + location.latitude + \",\" + location.longitude + \"&key=AIzaSyB-U0Z7cqufI-MHmRwfLmgqDCyQmOlIq48\",\n    alt: \"Italian Trulli\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350\n    },\n    __self: this\n  }), React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362\n    },\n    __self: this\n  }, location.city), React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363\n    },\n    __self: this\n  }, location.state_name)), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365\n    },\n    __self: this\n  }, React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366\n    },\n    __self: this\n  }, \"County: \", location.county_name, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368\n    },\n    __self: this\n  }), \"Latitude: \", location.latitude, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369\n    },\n    __self: this\n  }), \"Longitude: \", location.longitude, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370\n    },\n    __self: this\n  }), \"Population: \", location.population, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371\n    },\n    __self: this\n  }), \"Density (per sq. mile): \", location.density, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372\n    },\n    __self: this\n  }), \"Time Zone: \", location.timezone)))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377\n    },\n    __self: this\n  })))));\n};","map":{"version":3,"sources":["/Users/jasonlihuang/Documents/cs373-airpollution/frontend/src/pages/locations/Locations.js"],"names":["React","Component","Jumbotron","Container","Card","Button","CardImg","CardTitle","CardText","CardHeader","CardDeck","CardColumns","CardSubtitle","CardBody","Form","FormGroup","Label","Input","FormText","Col","Row","Pagination","DropdownButton","Dropdown","fetch","require","ENDPOINT","buildOrder","fieldname","direction","buildFilter","operator","value","buildQuery","model","page","filterObjs","orderObjs","Locations","constructor","props","state","data","num_results","objects","total_pages","states","time_zones","current_state","current_timezone","current_population","current_density","sort_by","display_sort","order","display_order","isloaded","current_query","searchstring","componentDidMount","console","log","getQuery","then","res","json","setState","getUniques","objArray","key","uniqueVals","map","obj","indexOf","push","render","span","l","r","range","Array","keys","i","color","st","tz","e","Locationcards","locations","location","backgroundColor","borderColor","height","cursor","id","latitude","longitude","city","state_name","county_name","population","density","timezone"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, \n        CardHeader,  CardDeck, CardColumns, CardSubtitle, CardBody,\n        Form,FormGroup, Label, Input, FormText } from 'reactstrap';\nimport {Col, Row, Pagination, DropdownButton, Dropdown} from 'react-bootstrap';\nconst fetch = require(\"node-fetch\");\n\n/**\nSources:\n\nPagination sources:\nhttps://github.com/react-bootstrap/pagination\nhttps://codepen.io/joedazza/pen/BVXVej\nDAMN CORS:\nhttps://gist.github.com/jesperorb/6ca596217c8dfba237744966c2b5ab1e\n**/\n\n\nconst ENDPOINT = 'https://api.howsmyair.me/location';\n\nconst buildOrder  = (fieldname,direction) => {\n    return `{%22field%22:%22${fieldname}%22,%22direction%22:%22${direction}%22}`\n}\n\nconst buildFilter = (fieldname,operator,value) => {\n    return `{%22name%22:%22${fieldname}%22,%22op%22:%22${operator}%22,%22val%22:%22${value}%22}`\n}\n\nconst buildQuery = (model,page,filterObjs,orderObjs) => {\n      return `https://api.howsmyair.me/${model}?page=${page}&q={%22filters%22:[${filterObjs}],%22order_by%22:[${orderObjs}]}`\n}\n\nexport class Locations extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      data : {},\n      num_results: null,\n      objects:[],\n      total_pages: null,\n      states : [],\n      page: 1,\n      time_zones : [],\n      current_state: \"None\",\n      current_timezone : \"None\",\n      current_population : \"None\",\n      current_density : \"None\",\n      sort_by : \"city\",\n      display_sort : \"City\",\n      order : \"asc\",\n      display_order : \"Ascending\",\n      isloaded : false,\n      current_query: buildQuery(\"location\",buildFilter(\"city\",\"like\",`%25${this.props.searchstring}%25`),buildOrder(\"city\",\"desc\"))\n    };\n\n  }\n\n    componentDidMount() {\n      console.log(this.getQuery())\n      fetch(this.getQuery())\n         .then(res => res.json())\n         .then(data => {\n          this.setState({\n            data : data,\n            num_results: data.num_results,\n            objects: data.objects,\n            page: data.page,\n            total_pages: data.total_pages,\n            isloaded : true,\n            states : this.getUniques(data.objects,\"state_name\"),\n            time_zones : this.getUniques(data.objects,\"timezone\")\n          })\n\n      })\n    };\n\n    getQuery(){\n\n      let filterObjs = buildFilter(\"city\",\"like\",`%25%25`);\n      let orderObjs = buildOrder(\"city\",\"asc\")\n\n      if (this.state.current_state != \"None\") {\n        filterObjs += \",\"+buildFilter(\"state_name\",\"eq\",this.state.current_state)\n      }\n      if (this.state.current_timezone != \"None\") {\n        filterObjs += \",\"+buildFilter(\"timezone\",\"eq\",this.state.current_timezone)\n      }\n\n      switch(this.state.current_population){\n        case \"Small\":\n          filterObjs += \",\"+buildFilter(\"population\",\"le\",500000)\n          break;\n        case\"Medium\":\n          filterObjs += \",\"+buildFilter(\"population\",\"ge\",500000)\n          filterObjs += \",\"+buildFilter(\"population\",\"lt\",1000000)\n          break;\n        case\"Large\":\n          filterObjs += \",\"+buildFilter(\"population\",\"ge\",1000000)\n        default:\n          break;\n\n      }\n\n      switch(this.state.current_density){\n        case \"Sparse\":\n          filterObjs += \",\"+buildFilter(\"density\",\"le\",1000)\n          break;\n        case\"Medium\":\n          filterObjs += \",\"+buildFilter(\"density\",\"ge\",1000)\n          filterObjs += \",\"+buildFilter(\"density\",\"lt\",2000)\n          break;\n        case\"Dense\":\n          filterObjs += \",\"+buildFilter(\"density\",\"ge\",2000)\n        default:\n          break;\n      }\n      orderObjs = buildOrder(this.state.sort_by,this.state.order)\n\n      return buildQuery(\"location\",this.state.page,filterObjs,orderObjs);\n    }\n\n    getUniques(objArray,key) {\n      const uniqueVals = [];\n      objArray.map( obj => {\n          if (uniqueVals.indexOf(obj[key]) === -1) {\n              uniqueVals.push(obj[key])\n          };\n      });\n      return(uniqueVals);\n    }\n\n    render(){\n      if (this.state.isloaded){\n      let span = 4\n      let page = this.state.page\n      let l = page - (span / 2)\n      let r = page + (span / 2)\n      let range = []\n      /*If there aren't enough pages to have dynamically changing page values*/\n      if(this.state.total_pages < span) {\n        range = [...Array((this.state.total_pages + 1) - 1).keys()].map(i => i +1 )\n      } else if (page + span > this.state.total_pages) {\n        /*At the right bound*/\n        range = [...Array((this.state.total_pages) - (this.state.total_pages - span)).keys()].map(i => (this.state.total_pages - span) + i + 1)\n      } else if (page - span < 0) {\n        /*At the left bound*/\n        range = [...Array((span + 1) - 1).keys()].map(i => i + 1)\n      } else {\n        /*At somewhere in between*/\n        range = [...Array((r + 1) - l-1).keys()].map(i => i + l )\n      }\n      console.log(range)\n      return(\n        <div>\n          <br/>\n            <Row className=\"justify-content-md-center\">\n                <h1 style={{color: '#1976d2'}}>{this.state.num_results} Locations</h1>\n            </Row>\n            <Jumbotron>\n            <Row className=\"justify-content-md-center\">\n\n              <Col md=\"auto\">\n                <h3 style={{color: '#1976d2'}}>Filters</h3>\n              </Col>\n              <Col md=\"auto\">\n                <center>\n                  <DropdownButton id=\"dropdown-basic-button\" title=\"States\">\n                      <Dropdown.Item onClick={() => {this.setState({current_state : \"None\", page : 1, isloaded : false});}}>\n                        None\n                      </Dropdown.Item>\n                      {this.state.states.map( st => (\n                        <Dropdown.Item onClick={() => {\n                          this.setState({\n                            current_state : st,\n                            page : 1,\n                            isloaded : false\n                          });\n                        }}>\n                        {st}\n                        </Dropdown.Item>\n                      ))}\n                  </DropdownButton>\n                  <h5 style={{color: '#1976d2'}}>{this.state.current_state}</h5>\n                </center>\n              </Col>\n              <Col md=\"auto\">\n                <center>\n                  <DropdownButton id=\"dropdown-basic-button\" title=\"Time Zone\">\n                    <Dropdown.Item onClick={() => {this.setState({current_timezone : \"None\", page : 1,isloaded : false});}}>\n                      None\n                    </Dropdown.Item>\n                      {this.state.time_zones.map( tz => (\n                        <Dropdown.Item onClick={() => {\n                            this.setState({\n                              current_timezone : tz,\n                              page : 1,\n                              isloaded : false\n                            });\n                        }}>\n                        {tz}\n                    </Dropdown.Item>\n                  ))}\n                  </DropdownButton>\n                  <h5 style={{color: '#1976d2'}}>{this.state.current_timezone}</h5>\n                </center>\n              </Col>\n              <Col md=\"auto\">\n                <center>\n                  <DropdownButton id=\"dropdown-basic-button\" title=\"Population\">\n                    <Dropdown.Item onClick={() => {this.setState({ current_population : \"None\", page : 1, isloaded : false});}}>\n                      None\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_population : \"Small\", page : 1, isloaded : false});}}>\n                      Small\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_population : \"Medium\", page : 1, isloaded : false});}}>\n                      Medium\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_population : \"Large\", page : 1, isloaded : false});}}>\n                      Large\n                    </Dropdown.Item>\n                  </DropdownButton>\n                <h5 style={{color: '#1976d2'}}><center>{this.state.current_population}</center></h5>\n                </center>\n              </Col>\n              <Col md=\"auto\">\n                <center>\n                  <DropdownButton id=\"dropdown-basic-button\" title=\"Density\">\n                    <Dropdown.Item onClick={() => {this.setState({ current_density : \"None\", page : 1, isloaded : false});}}>\n                      None\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_density : \"Sparse\", page : 1, isloaded : false});}}>\n                      Sparse\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_density : \"Medium\", page : 1, isloaded : false});}}>\n                      Medium\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_density : \"Dense\", page : 1, isloaded : false});}}>\n                      Dense\n                    </Dropdown.Item>\n                  </DropdownButton>\n                <h5 style={{color: '#1976d2'}}><center>{this.state.current_density}</center></h5>\n                </center>\n              </Col>\n                <h3 style={{color: '#1976d2'}}><center>Sort By</center></h3>\n              <Col md=\"auto\">\n                  <DropdownButton id=\"dropdown-basic-button\" title={this.state.display_sort}>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"city\", display_sort : \"City\", page : 1, isloaded : false});}}>\n                      City\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"county_name\", display_sort : \"County\", page : 1, isloaded : false});}}>\n                      County\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"state_name\", display_sort : \"State\", page : 1, isloaded : false});}}>\n                      State\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"timezone\", display_sort : \"Time Zone\", page : 1, isloaded : false});}}>\n                      Time Zone\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"latitude\", display_sort : \"Latitude\", page : 1, isloaded : false});}}>\n                      Latitude\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"longitude\", display_sort : \"Longitude\", page : 1, isloaded : false});}}>\n                      Longitude\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"population\", display_sort : \"Population\", page : 1, isloaded : false});}}>\n                      Population\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"density\", display_sort : \"Density\", page : 1, isloaded : false});}}>\n                      Density\n                    </Dropdown.Item>\n                  </DropdownButton>\n              </Col>\n              <Col md=\"auto\">\n                  <DropdownButton id=\"dropdown-basic-button\" title = {this.state.display_order}>\n                    <Dropdown.Item onClick={() => {this.setState({ order : \"asc\", display_order : \"Ascending\", page : 1, isloaded : false});}}>\n                      Ascending\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ order : \"desc\", display_order : \"Descending\", page : 1, isloaded : false});}}>\n                      Descending\n                    </Dropdown.Item>\n                  </DropdownButton>\n              </Col>\n\n            </Row>\n            </Jumbotron>\n          <br/>\n          <Container>\n            <center><h4 style={{color: '#1976d2'}}>Page {this.state.page}/{this.state.total_pages}</h4></center>\n            <Row className=\"justify-content-md-center\">\n              <Pagination>\n                {/*First Page*/}\n                <Pagination.First\n                  onClick={e => this.setState({ page : 1, isloaded : false})}\n                />\n\n                {/*Previous Page*/}\n                <Pagination.Prev\n                  disabled={this.state.page <= 1}\n                  onClick={e => this.setState({ page : this.state.page -1 , isloaded : false})}\n                />\n\n                {/*Eveything in between - see block before return statement*/}\n                {range.map(page => (\n                  <Pagination.Item\n                    active={page === this.state.page}\n                    onClick={e => this.setState({ page : page , isloaded : false})}\n                  >\n                    {page}\n                  </Pagination.Item>\n                ))}\n\n                {/*Next Page*/}\n                <Pagination.Next\n                  disabled={this.state.page >= this.state.total_pages}\n                  onClick={e => this.setState({ page : this.state.page +1 , isloaded : false})}\n                />\n\n                {/*Last Page*/}\n                <Pagination.Last\n                  onClick={e => this.setState({ page : this.state.total_pages, isloaded : false})}\n                />\n              </Pagination>\n            </Row>\n           </Container>\n           {Locationcards(this.state.objects)}\n        </div>\n      );\n    } else {\n      this.componentDidMount();\n      return (\n        <div>\n         <center><img src = \"https://i.makeagif.com/media/9-30-2017/bhAyTs.gif\"/></center>\n        </div>\n      );\n   }\n  }\n}\n\nconst Locationcards = ( locations ) => { \n  return(\n  <Container>\n    <Row className=\"justify-content-md-center\" className=\"spacing\">\n\n    {locations.map((location) => (\n      <Col className=\"spacing\" lg=\"4\" sm=\"6\" xs=\"12\">\n      <Card body style={{ backgroundColor: '#00', borderColor: '#2255', height: '37rem' }}>\n      <a style={{ cursor: 'pointer' }} href={\"/Location/\" + location.id}>\n      <CardImg src={\n         \"https://maps.googleapis.com/maps/api/staticmap?center=\"+\n                         location.latitude+\",\"+location.longitude+\n                         \"&zoom=12&size=400x400\"+\n                         \"&markers=color:green%7Clabel:G%7C\"+\n                         location.latitude+\",\"+location.longitude +\n                         \"&key=AIzaSyB-U0Z7cqufI-MHmRwfLmgqDCyQmOlIq48\"}\n\n                         alt=\"Italian Trulli\" />\n        <CardHeader>\n          {/* The dynamic link is arranged this way through the NavBar.js\n          and back to the Location component*/}\n          <h5>{location.city}</h5>\n          <h6 >{location.state_name}</h6>\n        </CardHeader>\n        <CardBody>\n        <CardText>\n          County: {location.county_name}\n          <br/>Latitude: {location.latitude}\n          <br/>Longitude: {location.longitude}\n          <br/>Population: {location.population}\n          <br/>Density (per sq. mile): {location.density}\n          <br/>Time Zone: {location.timezone}\n        </CardText>\n        </CardBody>\n     </a>\n     </Card>\n      <p />\n      </Col>\n    ))}\n    </Row>    \n  </Container>\n\n  ) \n};\n"]},"metadata":{},"sourceType":"module"}