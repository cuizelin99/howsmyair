{"ast":null,"code":"var _jsxFileName = \"/Users/jasonlihuang/Documents/cs373-airpollution/frontend/src/pages/Search.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader, CardDeck, CardColumns, CardSubtitle, CardBody, NavLink, UncontrolledCarousel, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Image, Col, Row, Pagination, Nav, Tabs, Tab } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Link, Switch, BrowserHistory } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { createUltimatePagination, ITEM_TYPES } from 'react-ultimate-pagination';\nimport ReactDOM from 'react-dom';\nimport Locations from './locations/Locations';\nimport Highlighter from 'react-highlight-words';\nimport Highlight from 'react-highlighter';\nexport class Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchstring: null\n    };\n  }\n\n  componentDidMount() {\n    const key = this.props.match.params.key;\n  }\n\n  render() {\n    const key = this.props.match.params.key;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Tab.Content, {\n      eventKey: \"location\",\n      title: \"Location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        color: '#1976d2'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Locations Search Results\"), React.createElement(LocationResults, {\n      fieldname: \"city\",\n      searchstring: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"illness\",\n      title: \"Illness\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        color: '#1976d2'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Illnesses Search Results\"), React.createElement(IllnessResults, {\n      fieldname: \"illness_desc\",\n      searchstring: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"pollutants\",\n      title: \"Pollutants\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        color: '#1976d2'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Polluants Search Results\"), React.createElement(PollutantResults, {\n      fieldname: \"chemical_name\",\n      searchstring: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }))));\n  }\n\n}\nexport class LocationResults extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      num_results: null,\n      objects: [],\n      page: null,\n      total_pages: null\n    };\n  }\n\n  componentWillMount() {\n    fetch(\"https://api.howsmyair.me/location?q={%22filters%22:[{%22name%22:%22\".concat(this.props.fieldname, \"%22,%22op%22:%22like%22,%22val%22:%22%25\").concat(this.props.searchstring, \"%25%22}]}\")).then(res => res.json()).then(data => {\n      this.setState({\n        data: data,\n        num_results: data.num_results,\n        objects: data.objects,\n        page: data.page - 1,\n        total_pages: data.total_pages\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      className: \"spacing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.state.objects.map(location => React.createElement(Col, {\n      className: \"spacing\",\n      lg: \"4\",\n      sm: \"6\",\n      xs: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Card, {\n      body: true,\n      style: {\n        backgroundColor: '#00',\n        borderColor: '#2255'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Location/\" + location.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Highlighter, {\n      highlightStyle: {\n        backgroundColor: 'lightblue'\n      },\n      searchWords: [this.props.searchstring],\n      autoEscape: true,\n      textToHighlight: location.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))), React.createElement(\"h6\", {\n      class: \"card-subtitle mb-2 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, location.state_name)), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"County: \", location.county_name, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), \"Latitude: \", location.latitude, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), \"Longitude: \", location.longitude, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), \"Population: \", location.population, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), \"Density (per sq. mile): \", location.density, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), \"Time Zone: \", location.timezone)))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }))))));\n  }\n\n}\nexport class IllnessResults extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      num_results: null,\n      objects: [],\n      page: null,\n      total_pages: null\n    };\n  }\n\n  componentWillMount() {\n    fetch(\"https://api.howsmyair.me/illness?q={%22filters%22:[{%22name%22:%22\".concat(this.props.fieldname, \"%22,%22op%22:%22like%22,%22val%22:%22%25\").concat(this.props.searchstring, \"%25%22}]}\")).then(res => res.json()).then(data => {\n      this.setState({\n        data: data,\n        num_results: data.num_results,\n        objects: data.objects,\n        page: data.page - 1,\n        total_pages: data.total_pages\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      className: \"spacing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, this.state.objects.map(illness => React.createElement(Col, {\n      className: \"spacing\",\n      lg: \"4\",\n      sm: \"6\",\n      xs: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Card, {\n      body: true,\n      style: {\n        backgroundColor: '#00',\n        borderColor: '#2255'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(CardImg, {\n      top: true,\n      width: \"100%\",\n      src: illness.illness_image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Illness/\" + illness.illness_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, illness.illness_name))), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Highlighter, {\n      highlightStyle: {\n        backgroundColor: 'lightblue'\n      },\n      searchWords: [this.props.searchstring],\n      autoEscape: true,\n      textToHighlight: illness.illness_desc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    })))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }))))));\n  }\n\n}\nexport class PollutantResults extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      num_results: null,\n      objects: [],\n      page: null,\n      total_pages: null\n    };\n  }\n\n  componentWillMount() {\n    fetch(\"https://api.howsmyair.me/pollutants?q={%22filters%22:[{%22name%22:%22\".concat(this.props.fieldname, \"%22,%22op%22:%22like%22,%22val%22:%22%25\").concat(this.props.searchstring, \"%25%22}]}\")).then(res => res.json()).then(data => {\n      this.setState({\n        data: data,\n        num_results: data.num_results,\n        objects: data.objects,\n        page: data.page - 1,\n        total_pages: data.total_pages\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      className: \"spacing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, this.state.objects.map(pollutant => React.createElement(Col, {\n      className: \"spacing\",\n      lg: \"4\",\n      sm: \"6\",\n      xs: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(Card, {\n      body: true,\n      style: {\n        backgroundColor: '#00',\n        borderColor: '#2255'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(CardImg, {\n      src: pollutant.chemspider_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Pollutant/\" + pollutant.chemical_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(Highlighter, {\n      highlightStyle: {\n        backgroundColor: 'lightblue'\n      },\n      searchWords: [this.props.searchstring],\n      autoEscape: true,\n      textToHighlight: pollutant.chemical_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    })))), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"Inhalation Cancer Potency\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }), \"Potency: \", pollutant.inhalation_cancer_potency, \" \", pollutant.inhalation_cancer_potency_units, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }), \"Source: \", pollutant.inhalation_cancer_potency_source, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"Inhalation Reference Concentration\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), \"Concentration: \", pollutant.inhalation_reference_concentration, \" \", pollutant.inhalation_reference_concentration_units, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), \"Source: \", pollutant.inhalation_reference_concentration_source, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"National Ambient Air Quality Standards\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }), \"Standard: \", pollutant.inhalation_reference_concentration, \" \", pollutant.inhalation_reference_concentration_units, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), \"Source: \", pollutant.inhalation_reference_concentration_source)))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/jasonlihuang/Documents/cs373-airpollution/frontend/src/pages/Search.js"],"names":["React","Component","useState","useEffect","Jumbotron","Container","Card","Button","CardImg","CardTitle","CardText","CardHeader","CardDeck","CardColumns","CardSubtitle","CardBody","NavLink","UncontrolledCarousel","Form","FormGroup","Label","Input","FormText","Image","Col","Row","Pagination","Nav","Tabs","Tab","BrowserRouter","Router","Route","Link","Switch","BrowserHistory","createBrowserHistory","createUltimatePagination","ITEM_TYPES","ReactDOM","Locations","Highlighter","Highlight","Search","constructor","props","state","searchstring","componentDidMount","key","match","params","render","color","LocationResults","data","num_results","objects","page","total_pages","componentWillMount","fetch","fieldname","then","res","json","setState","map","location","backgroundColor","borderColor","id","city","state_name","county_name","latitude","longitude","population","density","timezone","IllnessResults","illness","illness_image","illness_name","illness_desc","PollutantResults","pollutant","chemspider_id","chemical_name","inhalation_cancer_potency","inhalation_cancer_potency_units","inhalation_cancer_potency_source","inhalation_reference_concentration","inhalation_reference_concentration_units","inhalation_reference_concentration_source"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect  } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader,\n         CardDeck, CardColumns, CardSubtitle, CardBody , NavLink, UncontrolledCarousel,\n         Form,FormGroup, Label, Input, FormText} from 'reactstrap';\nimport { Image, Col, Row, Pagination, Nav, Tabs, Tab} from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Link , Switch, BrowserHistory } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { createUltimatePagination, ITEM_TYPES } from 'react-ultimate-pagination';\nimport ReactDOM from 'react-dom';\nimport Locations from './locations/Locations';\nimport Highlighter from 'react-highlight-words';\nimport Highlight from 'react-highlighter'\n\nexport class Search extends React.Component {\n\n\n\tconstructor(props){\n\t\tsuper(props)\t\n\t\tthis.state = {\n\t\t\tsearchstring : null\t\t\n\t\t};\n\t}\t\n\n    componentDidMount() {\n    \tconst {key} = this.props.match.params;\n    }\n\n\trender(){\n    \tconst {key} = this.props.match.params;\n\t\treturn(\n\t    \t<div>\n\t    \t{/*Make tabs not look shitty*/}\n\t    \t<Tabs>\n\t    \t\t<Tab.Content eventKey=\"location\" title=\"Location\" >\n\t\t    \t\t<h1 style={{color: '#1976d2'}}>Locations Search Results</h1>\n\t\t    \t\t<LocationResults fieldname = \"city\" searchstring = {key}/>\t\t    \t\t\n\t    \t\t</Tab.Content>\n\t    \t\t<Tab eventKey=\"illness\" title=\"Illness\">\n\t\t    \t\t<h1 style={{color: '#1976d2'}}>Illnesses Search Results</h1>\n\t\t    \t\t<IllnessResults fieldname = \"illness_desc\" searchstring = {key}/>\t\t    \t\t\t\t    \t\t\n\t    \t\t</Tab>\n\t    \t\t<Tab eventKey=\"pollutants\" title=\"Pollutants\">\n\t    \t\t\t<h1 style={{color: '#1976d2'}}>Polluants Search Results</h1>\t\t\n\t\t    \t\t<PollutantResults fieldname = \"chemical_name\" searchstring = {key}/>\t\t    \t\t\t\t    \t\t\t    \t\t\t\n\t    \t\t</Tab>\n\t      \t</Tabs>\n\t      \t</div>\n\t\t);\n\t}\n}\n\n\nexport class LocationResults extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata : {},\n\t\t\tnum_results: null,\n\t\t\tobjects:[],\n\t\t\tpage: null,\n\t\t\ttotal_pages: null\n\t\t};\n\t}\n\n    componentWillMount() {\n  \t\tfetch(`https://api.howsmyair.me/location?q={%22filters%22:[{%22name%22:%22${this.props.fieldname}%22,%22op%22:%22like%22,%22val%22:%22%25${this.props.searchstring}%25%22}]}`)\t\t\t\t\n\t       .then(res => res.json())\n\t       .then(data => { this.setState({\n\t       \t\tdata : data,\n\t\t        num_results: data.num_results,\n\t\t        objects: data.objects,\n\t\t        page: data.page-1,\n\t\t        total_pages: data.total_pages\n       \t\t})\n    \t})\n  \t};\n\n  \trender(){\n  \t\treturn(\n  \t\t\t<div>\n                <Container>\n                {/*Record Grid*/}\n                    <Row className=\"justify-content-md-center\" className=\"spacing\">\n                    {this.state.objects.map((location) => (\n                        <Col className=\"spacing\" lg=\"4\" sm=\"6\" xs=\"12\">\n                        <Card body style={{ backgroundColor: '#00', borderColor: '#2255' }}>\n                        <CardHeader>\n                            {/* The dynamic link is arranged this way through the NavBar.js\n                            and back to the Location component*/}\n                            <h5>\n                                <Link to={\"/Location/\" + location.id}>                                  \n                                      <Highlighter\n                                        highlightStyle={{backgroundColor: 'lightblue'}}\n                                        searchWords={[this.props.searchstring]}\n                                        autoEscape={true}\n                                        textToHighlight= {location.city}\n                                      />\n                                </Link>\n                            </h5>\n                            <h6 class = \"card-subtitle mb-2 text-muted\">{location.state_name}</h6>\n                        </CardHeader>\n                        <CardBody>\n                            <CardText>\n                                <p>\n                                County: {location.county_name}\n                                <br/>Latitude: {location.latitude}\n                                <br/>Longitude: {location.longitude}\n                                <br/>Population: {location.population}\n                                <br/>Density (per sq. mile): {location.density}\n                                <br/>Time Zone: {location.timezone}\n                                </p>\n                            </CardText>\n                        </CardBody>\n                        </Card>\n                        <p />\n                        </Col>\n                    ))}\n                    </Row>\n                </Container>             \t\t\t\n  \t\t\t</div>\n  \t\t);\n  \t}\n}\n\nexport class IllnessResults extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata : {},\n\t\t\tnum_results: null,\n\t\t\tobjects:[],\n\t\t\tpage: null,\n\t\t\ttotal_pages: null\n\t\t};\n\t}\n\n    componentWillMount() {\n  \t\tfetch(`https://api.howsmyair.me/illness?q={%22filters%22:[{%22name%22:%22${this.props.fieldname}%22,%22op%22:%22like%22,%22val%22:%22%25${this.props.searchstring}%25%22}]}`)\t\t\t\t\n\t       .then(res => res.json())\n\t       .then(data => { this.setState({\n\t       \t\tdata : data,\n\t\t        num_results: data.num_results,\n\t\t        objects: data.objects,\n\t\t        page: data.page-1,\n\t\t        total_pages: data.total_pages\n       \t\t})\n    \t})\n  \t};\n\n  \trender(){\n  \t\treturn(\n  \t\t\t<div>\n             <Container>\n              <Row className=\"justify-content-md-center\" className=\"spacing\">\n              {this.state.objects.map((illness) => (\n                 <Col className=\"spacing\" lg=\"4\" sm=\"6\" xs=\"12\">\n                 <Card body style={{ backgroundColor: '#00', borderColor: '#2255' }}>\n                    <CardImg top width=\"100%\" src={illness.illness_image} />\n                    <CardHeader>\n                      {/* The dynamic link is arranged this way through the NavBar.js\n                      and back to the Location component*/}\n                      <h5>\n                      <Link to={\"/Illness/\" + illness.illness_name}>{illness.illness_name}</Link></h5>\n                    </CardHeader>\n                    <CardBody>\n                    <CardText>\n                        <Highlighter\n                            highlightStyle={{backgroundColor: 'lightblue'}}\n                            searchWords={[this.props.searchstring]}\n                            autoEscape={true}\n                            textToHighlight= {illness.illness_desc}\n                        />                        \t                       \n                        <br/>\n                    </CardText>\n                    </CardBody>\n                 </Card>\n                 <p />\n                 </Col>\n              ))}\n              </Row>\n           </Container>             \t\t\t\n  \t\t\t</div>\n  \t\t);\n  \t}\n}\n\n\nexport class PollutantResults extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata : {},\n\t\t\tnum_results: null,\n\t\t\tobjects:[],\n\t\t\tpage: null,\n\t\t\ttotal_pages: null\n\t\t};\n\t}\n\n    componentWillMount() {\n  \t\tfetch(`https://api.howsmyair.me/pollutants?q={%22filters%22:[{%22name%22:%22${this.props.fieldname}%22,%22op%22:%22like%22,%22val%22:%22%25${this.props.searchstring}%25%22}]}`)\t\t\t\t\n\t       .then(res => res.json())\n\t       .then(data => { this.setState({\n\t       \t\tdata : data,\n\t\t        num_results: data.num_results,\n\t\t        objects: data.objects,\n\t\t        page: data.page-1,\n\t\t        total_pages: data.total_pages\n       \t\t})\n    \t})\n  \t};\n\n  \trender(){\n  \t\treturn(\n  \t\t\t<div>\n            <Container>\n                <Row className=\"justify-content-md-center\" className=\"spacing\">\n                {this.state.objects.map((pollutant) => (\n                <Col className=\"spacing\" lg=\"4\" sm=\"6\" xs=\"12\">\n                <Card body style={{ backgroundColor: '#00', borderColor: '#2255' }}>\n                    <CardImg src = {pollutant.chemspider_id}/>\n                    <CardHeader>\n                    {/* The dynamic link is arranged this way through the NavBar.js\n                     and back to the Location component*/}\n                    <h5>\n                        <Link to={\"/Pollutant/\" + pollutant.chemical_name}>\n                            <Highlighter\n                                highlightStyle={{backgroundColor: 'lightblue'}}\n                                searchWords={[this.props.searchstring]}\n                                autoEscape={true}\n                                textToHighlight= {pollutant.chemical_name}\n                            />                                                 \n                        </Link>\n                    </h5>\n                    </CardHeader>\n                    <CardBody>\n                    <CardText>\n                    <p>\n                    <b>Inhalation Cancer Potency</b>\n                    <br/>Potency: {pollutant.inhalation_cancer_potency} {pollutant.inhalation_cancer_potency_units}\n                    <br/>Source: {pollutant.inhalation_cancer_potency_source}\n                    <br/><b>Inhalation Reference Concentration</b>\n                    <br/>Concentration: {pollutant.inhalation_reference_concentration} {pollutant.inhalation_reference_concentration_units}\n                    <br/>Source: {pollutant.inhalation_reference_concentration_source}\n                    <br/><b>National Ambient Air Quality Standards</b>\n                    <br/>Standard: {pollutant.inhalation_reference_concentration} {pollutant.inhalation_reference_concentration_units}\n                    <br/>Source: {pollutant.inhalation_reference_concentration_source}\n\n                    {/*\n                    County: {pollutant.pollutant_range}\n                    <br/>Latitude: {pollutant.pollutant_range}\n                    <br/>Longitude: {pollutant.pollutant_severity}\n                    <br/>Population: {pollutant.pollutant_sources}\n                    */}\n                    </p>\n\n                    </CardText>\n                    </CardBody>\n                </Card>\n                 <p />\n                 </Col>\n              ))}\n              </Row>\n           </Container>             \t\t\t\n  \t\t\t</div>\n  \t\t);\n  \t}\n}\n\n"]},"metadata":{},"sourceType":"module"}