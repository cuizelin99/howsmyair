{"ast":null,"code":"var _jsxFileName = \"/Users/davidbomm/SWE/cs373-airpollution/frontend/src/pages/illnesses/Illnesses.js\";\nimport React, { Component } from 'react';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader, CardDeck, CardColumns, CardSubtitle, CardBody, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Col, Row, Pagination, DropdownButton, Dropdown } from 'react-bootstrap';\nimport { Illnesscards } from './IllnessItems';\n\nconst fetch = require(\"node-fetch\");\n/*\nSources:\n\nPagination sources:\nhttps://github.com/react-bootstrap/pagination\nhttps://www.npmjs.com/package/react-ultimate-pagination\nhttps://codepen.io/joedazza/pen/BVXVej\n*/\n\n\nconst ENDPOINT = 'https://api.howsmyair.me/illness';\n\nconst buildOrder = (fieldname, direction) => {\n  return \"{%22field%22:%22\".concat(fieldname, \"%22,%22direction%22:%22\").concat(direction, \"%22}\");\n};\n\nconst buildFilter = (fieldname, operator, value) => {\n  return \"{%22name%22:%22\".concat(fieldname, \"%22,%22op%22:%22\").concat(operator, \"%22,%22val%22:%22\").concat(value, \"%22}\");\n};\n\nconst buildQuery = (model, page, filterObjs, orderObjs) => {\n  return \"https://api.howsmyair.me/\".concat(model, \"?page=\").concat(page, \"&q={%22filters%22:[\").concat(filterObjs, \"],%22order_by%22:[\").concat(orderObjs, \"]}\");\n};\n\nexport class Illnesses extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setIllnesses = objects => {\n      this.setState({\n        illnesses: objects\n      });\n    };\n\n    this.state = {\n      illnesses: null\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isloaded: true\n    });\n  }\n\n  render() {\n    // really hacky but it works for calling back without infinite looping\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(IllnessesController, {\n      setObjects: this.setIllnesses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Illnesscards, {\n      illnesses: this.state.illnesses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })));\n  }\n\n}\nexport class IllnessesController extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      num_results: null,\n      objects: [],\n      page: 1,\n      total_pages: null,\n      states: [],\n      time_zones: [],\n      current_contagious: \"None\",\n      current_lethality: \"None\",\n      current_treatable: \"None\",\n      sort_by: \"illness_name\",\n      display_sort: \"Illness\",\n      order: \"asc\",\n      display_order: \"Ascending\",\n      isloaded: false\n    };\n    this.getQuery = this.getQuery.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.getQuery());\n    fetch(this.getQuery()).then(res => res.json()).then(data => {\n      this.setState({\n        data: data,\n        num_results: data.num_results,\n        objects: data.objects,\n        page: data.page,\n        total_pages: data.total_pages,\n        isloaded: true\n      });\n\n      if (this.props.setObjects != null) {\n        this.props.setObjects(data.objects);\n      }\n    });\n  }\n\n  getQuery() {\n    let filterObjs = buildFilter(\"\".concat(this.props.searchfield || 'illness_name'), \"ilike\", \"%25\".concat(this.props.searchstring || '', \"%25\"));\n    let orderObjs = buildOrder(\"illness_name\", \"asc\");\n\n    if (this.state.current_contagious != \"None\") {\n      filterObjs += \",\" + buildFilter(\"illness_contagious\", \"eq\", this.state.current_contagious);\n    }\n\n    if (this.state.current_lethality != \"None\") {\n      filterObjs += \",\" + buildFilter(\"illness_lethality\", \"eq\", this.state.current_lethality);\n    }\n\n    if (this.state.current_treatable != \"None\") {\n      filterObjs += \",\" + buildFilter(\"illness_treatable\", \"eq\", this.state.current_treatable);\n    }\n\n    orderObjs = buildOrder(this.state.sort_by, this.state.order);\n    return buildQuery(\"illness\", this.state.page, filterObjs, orderObjs);\n  }\n\n  render() {\n    if (this.state.isloaded) {\n      let span = 4;\n      let page = this.state.page;\n      let l = page - span / 2;\n      let r = page + span / 2;\n      let range = [];\n      /* If there aren't enough pages to have dynamically changing page values */\n\n      if (this.state.total_pages < span) {\n        range = [...Array(this.state.total_pages + 1 - 1).keys()].map(i => i + 1);\n      } else if (page + span > this.state.total_pages) {\n        /* At the right bound */\n        range = [...Array(this.state.total_pages - (this.state.total_pages - span)).keys()].map(i => this.state.total_pages - span + i + 1);\n      } else if (page - span < 0) {\n        /* At the left bound */\n        range = [...Array(span + 1 - 1).keys()].map(i => i + 1);\n      } else {\n        /* At somewhere in between */\n        range = [...Array(r + 1 - l - 1).keys()].map(i => i + l);\n      }\n\n      if (this.state.total_pages == 0) {\n        this.state.page = 0;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, this.state.num_results, \" Illnesses\")), React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Filters\")), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Contagious\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_contagious: \"None\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"None\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_contagious: \"yes\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Contagious\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_contagious: \"no\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Non-contagious\")), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, this.state.current_contagious))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Lethal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_lethality: \"None\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"None\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_lethality: \"lethal\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Lethal\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_lethality: \"non-lethal\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Non-lethal\")), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, this.state.current_lethality))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Treatable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_treatable: \"None\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"None\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_treatable: \"yes\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Treatable\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_treatable: \"no\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Non-treatable\")), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, this.state.current_treatable))), React.createElement(\"h3\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Sort By\")), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: this.state.display_sort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"illness_name\",\n            display_sort: \"Illness\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Illness\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"illness_lethality\",\n            display_sort: \"Lethality\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Lethality\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"illness_contagious\",\n            display_sort: \"Contagious\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Contagious\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"illness_treatable\",\n            display_sort: \"Treatable\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"Treatable\"))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: this.state.display_order,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            order: \"asc\",\n            display_order: \"Ascending\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Ascending\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            order: \"desc\",\n            display_order: \"Descending\",\n            page: 1,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Descending\"))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"Page \", this.state.page, \"/\", this.state.total_pages)), React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(Pagination, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(Pagination.First, {\n        onClick: e => this.setState({\n          page: 1,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }), React.createElement(Pagination.Prev, {\n        disabled: this.state.page <= 0,\n        onClick: e => this.setState({\n          page: this.state.page - 1,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }), range.map(page => React.createElement(Pagination.Item, {\n        active: page === this.state.page,\n        onClick: e => this.setState({\n          page: page,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, page)), React.createElement(Pagination.Next, {\n        disabled: this.state.page >= this.state.total_pages,\n        onClick: e => this.setState({\n          page: this.state.page + 1,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }), React.createElement(Pagination.Last, {\n        onClick: e => this.setState({\n          page: this.state.total_pages,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      })))), this.props.children);\n    } else {\n      this.componentDidMount();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://i.makeagif.com/media/9-30-2017/bhAyTs.gif\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      })));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/davidbomm/SWE/cs373-airpollution/frontend/src/pages/illnesses/Illnesses.js"],"names":["React","Component","Jumbotron","Container","Card","Button","CardImg","CardTitle","CardText","CardHeader","CardDeck","CardColumns","CardSubtitle","CardBody","Form","FormGroup","Label","Input","FormText","Col","Row","Pagination","DropdownButton","Dropdown","Illnesscards","fetch","require","ENDPOINT","buildOrder","fieldname","direction","buildFilter","operator","value","buildQuery","model","page","filterObjs","orderObjs","Illnesses","constructor","props","setIllnesses","objects","setState","illnesses","state","componentDidMount","isloaded","render","IllnessesController","data","num_results","total_pages","states","time_zones","current_contagious","current_lethality","current_treatable","sort_by","display_sort","order","display_order","getQuery","bind","console","log","then","res","json","setObjects","searchfield","searchstring","span","l","r","range","Array","keys","map","i","color","e","children"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText,\n        CardHeader,  CardDeck, CardColumns, CardSubtitle, CardBody,\n        Form,FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Col, Row, Pagination, DropdownButton, Dropdown } from 'react-bootstrap';\nimport {Illnesscards} from './IllnessItems'\nconst fetch = require(\"node-fetch\");\n\n/*\nSources:\n\nPagination sources:\nhttps://github.com/react-bootstrap/pagination\nhttps://www.npmjs.com/package/react-ultimate-pagination\nhttps://codepen.io/joedazza/pen/BVXVej\n*/\n\nconst ENDPOINT = 'https://api.howsmyair.me/illness';\n\nconst buildOrder = (fieldname,direction) => {\n   return `{%22field%22:%22${fieldname}%22,%22direction%22:%22${direction}%22}`\n}\n\nconst buildFilter = (fieldname,operator,value) => {\n   return `{%22name%22:%22${fieldname}%22,%22op%22:%22${operator}%22,%22val%22:%22${value}%22}`\n}\n\nconst buildQuery = (model,page,filterObjs,orderObjs) => {\n   return `https://api.howsmyair.me/${model}?page=${page}&q={%22filters%22:[${filterObjs}],%22order_by%22:[${orderObjs}]}`\n}\n\nexport class Illnesses extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      illnesses : null,\n    }\n  }\n\n  componentDidMount(){\n    this.setState({\n      isloaded: true\n    })\n  }\n\n  setIllnesses = (objects) => {\n    this.setState({\n      illnesses : objects,\n    })\n  }\n\n  render(){\n    // really hacky but it works for calling back without infinite looping\n    return(\n      <div>\n        <IllnessesController setObjects = {this.setIllnesses}>\n          <Illnesscards illnesses = {this.state.illnesses}/>\n        </IllnessesController>\n      </div>\n    );      \n  }\n}\n\nexport class IllnessesController extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data : {},\n      num_results: null,\n      objects:[],\n      page: 1,\n      total_pages: null,\n      states : [],\n      time_zones : [],\n      current_contagious: \"None\",\n      current_lethality : \"None\",\n      current_treatable : \"None\",\n      sort_by : \"illness_name\",\n      display_sort : \"Illness\",\n      order : \"asc\",\n      display_order : \"Ascending\",\n      isloaded : false,\n    };\n    this.getQuery = this.getQuery.bind(this)\n    this.componentDidMount = this.componentDidMount.bind(this)\n  }\n\n  componentDidMount() {\n     console.log(this.getQuery())\n     fetch(this.getQuery())\n     .then(res => res.json())\n     .then(data => {\n        this.setState({\n           data : data,\n           num_results: data.num_results,\n           objects: data.objects,\n           page: data.page,\n           total_pages: data.total_pages,\n           isloaded : true,\n        })\n        if (this.props.setObjects != null){\n          this.props.setObjects(data.objects)\n        }        \n     })\n  };\n\n    getQuery() {\n      let filterObjs = buildFilter(`${this.props.searchfield || 'illness_name'}`,\"ilike\",`%25${this.props.searchstring || ''}%25`);\n      let orderObjs = buildOrder(\"illness_name\",\"asc\")\n\n      if (this.state.current_contagious != \"None\") {\n        filterObjs += \",\" + buildFilter(\"illness_contagious\",\"eq\",this.state.current_contagious)\n      }\n      if (this.state.current_lethality != \"None\") {\n        filterObjs += \",\" + buildFilter(\"illness_lethality\",\"eq\",this.state.current_lethality)\n      }\n      if (this.state.current_treatable != \"None\") {\n        filterObjs += \",\" + buildFilter(\"illness_treatable\",\"eq\",this.state.current_treatable)\n      }\n\n      orderObjs = buildOrder(this.state.sort_by, this.state.order)\n\n      return buildQuery(\"illness\", this.state.page, filterObjs,orderObjs);\n    }\n\n    render() {\n      if (this.state.isloaded) {\n         let span = 4\n         let page = this.state.page\n         let l = page - (span / 2)\n         let r = page + (span / 2)\n         let range = []\n         /* If there aren't enough pages to have dynamically changing page values */\n         if (this.state.total_pages < span) {\n           range = [...Array((this.state.total_pages + 1) - 1).keys()].map(i => i + 1)\n         } else if (page + span > this.state.total_pages) {\n           /* At the right bound */\n           range = [...Array((this.state.total_pages) - (this.state.total_pages - span)).keys()].map(i => (this.state.total_pages - span) + i + 1)\n         } else if (page - span < 0) {\n           /* At the left bound */\n           range = [...Array((span + 1) - 1).keys()].map(i => i + 1)\n         } else {\n           /* At somewhere in between */\n           range = [...Array((r + 1) - l-1).keys()].map(i => i + l)\n         }\n        if(this.state.total_pages == 0){\n          this.state.page = 0;\n        }         \n         return(\n           <div>\n             <br/>\n               <Row className=\"justify-content-md-center\">\n                   <h1 style={{color: '#1976d2'}}>{this.state.num_results} Illnesses</h1>\n               </Row>\n               <Jumbotron>\n               <Row className=\"justify-content-md-center\">\n                 <Col md=\"auto\">\n                   <h3 style={{color: '#1976d2'}}>Filters</h3>\n                 </Col>\n                 <Col md=\"auto\">\n                   <center>\n                     <DropdownButton id=\"dropdown-basic-button\" title=\"Contagious\">\n                       <Dropdown.Item onClick={() => {this.setState({ current_contagious : \"None\", page : 1, isloaded : false });}}>\n                         None\n                       </Dropdown.Item>\n                       <Dropdown.Item onClick={() => {this.setState({ current_contagious : \"yes\", page : 1, isloaded : false });}}>\n                         Contagious\n                       </Dropdown.Item>\n                       <Dropdown.Item onClick={() => {this.setState({ current_contagious : \"no\", page : 1, isloaded : false });}}>\n                         Non-contagious\n                       </Dropdown.Item>\n                     </DropdownButton>\n                     <h5 style={{ color: '#1976d2' }}>{ this.state.current_contagious }</h5>\n                   </center>\n                 </Col>\n                 <Col md=\"auto\">\n                   <center>\n                     <DropdownButton id=\"dropdown-basic-button\" title=\"Lethal\">\n                       <Dropdown.Item onClick={() => {this.setState({ current_lethality : \"None\", page : 1, isloaded : false });}}>\n                         None\n                       </Dropdown.Item>\n                       <Dropdown.Item onClick={() => {this.setState({ current_lethality : \"lethal\", page : 1, isloaded : false });}}>\n                         Lethal\n                       </Dropdown.Item>\n                       <Dropdown.Item onClick={() => {this.setState({ current_lethality : \"non-lethal\", page : 1, isloaded : false });}}>\n                         Non-lethal\n                       </Dropdown.Item>\n                     </DropdownButton>\n                     <h5 style={{color: '#1976d2'}}>{this.state.current_lethality}</h5>\n                   </center>\n                 </Col>\n                 <Col md=\"auto\">\n                   <center>\n                     <DropdownButton id=\"dropdown-basic-button\" title=\"Treatable\">\n                       <Dropdown.Item onClick={() => {this.setState({ current_treatable : \"None\", page : 1, isloaded : false});}}>\n                         None\n                       </Dropdown.Item>\n                       <Dropdown.Item onClick={() => {this.setState({ current_treatable : \"yes\", page : 1, isloaded : false});}}>\n                         Treatable\n                       </Dropdown.Item>\n                       <Dropdown.Item onClick={() => {this.setState({ current_treatable : \"no\", page : 1, isloaded : false});}}>\n                         Non-treatable\n                       </Dropdown.Item>\n                     </DropdownButton>\n                     <h5 style={{color: '#1976d2'}}>{this.state.current_treatable}</h5>\n                   </center>\n                 </Col>\n                 <h3 style={{color: '#1976d2'}}><center>Sort By</center></h3>\n                 <Col md=\"auto\">\n                     <DropdownButton id=\"dropdown-basic-button\" title={this.state.display_sort}>\n                       <Dropdown.Item onClick={() => {this.setState({ sort_by : \"illness_name\", display_sort : \"Illness\", page : 1, isloaded : false});}}>\n                         Illness\n                       </Dropdown.Item>\n                       <Dropdown.Item onClick={() => {this.setState({ sort_by : \"illness_lethality\", display_sort : \"Lethality\", page : 1, isloaded : false});}}>\n                         Lethality\n                       </Dropdown.Item>\n                       <Dropdown.Item onClick={() => {this.setState({ sort_by : \"illness_contagious\", display_sort : \"Contagious\", page : 1, isloaded : false});}}>\n                         Contagious\n                       </Dropdown.Item>\n                       <Dropdown.Item onClick={() => {this.setState({ sort_by : \"illness_treatable\", display_sort : \"Treatable\", page : 1, isloaded : false});}}>\n                         Treatable\n                       </Dropdown.Item>\n                     </DropdownButton>\n                 </Col>\n                 <Col md=\"auto\">\n                     <DropdownButton id=\"dropdown-basic-button\" title = {this.state.display_order}>\n                       <Dropdown.Item onClick={() => {this.setState({ order : \"asc\", display_order : \"Ascending\", page : 1, isloaded : false});}}>\n                         Ascending\n                       </Dropdown.Item>\n                       <Dropdown.Item onClick={() => {this.setState({ order : \"desc\", display_order : \"Descending\", page : 1, isloaded : false});}}>\n                         Descending\n                       </Dropdown.Item>\n                     </DropdownButton>\n                 </Col>\n               </Row>\n               </Jumbotron>\n             <br/>\n             <Container>\n               <center><h4 style={{color: '#1976d2'}}>Page {this.state.page}/{this.state.total_pages}</h4></center>\n               <Row className=\"justify-content-md-center\">\n                 <Pagination>\n                   {/*First Page*/}\n                   <Pagination.First\n                     onClick={e => this.setState({ page : 1, isloaded : false})}\n                   />\n\n                   {/*Previous Page*/}\n                   <Pagination.Prev\n                     disabled={this.state.page <= 0}\n                     onClick={e => this.setState({ page : this.state.page -1 , isloaded : false})}\n                   />\n\n                   {/*Eveything in between - see block before return statement*/}\n                   {range.map(page => (\n                     <Pagination.Item\n                       active={page === this.state.page}\n                       onClick={e => this.setState({ page : page , isloaded : false})}\n                     >\n                       {page}\n                     </Pagination.Item>\n                   ))}\n\n                   {/*Next Page*/}\n                   <Pagination.Next\n                     disabled={this.state.page >= this.state.total_pages}\n                     onClick={e => this.setState({ page : this.state.page +1 , isloaded : false})}\n                   />\n\n                   {/*Last Page*/}\n                   <Pagination.Last\n                     onClick={e => this.setState({ page : this.state.total_pages, isloaded : false})}\n                   />\n                 </Pagination>\n               </Row>\n              </Container>\n                {this.props.children}\n           </div>\n         );\n    } else {\n      this.componentDidMount();\n      return (\n        <div>\n         <center><img src = \"https://i.makeagif.com/media/9-30-2017/bhAyTs.gif\"/></center>\n        </div>\n      );\n   }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}