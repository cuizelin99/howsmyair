{"ast":null,"code":"var _jsxFileName = \"/home/jasonsim/School/cs373-airpollution/frontend/src/pages/locations/Locations.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader, CardDeck, CardColumns, CardSubtitle, CardBody, NavLink, Carousel, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Image, Col, Row, Pagination, DropdownButton, Dropdown, ButtonToolbar, ListGroup } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Link, Switch, BrowserHistory } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { createUltimatePagination, ITEM_TYPES } from 'react-ultimate-pagination';\nimport ReactDOM from 'react-dom';\nimport Illnesses from '../illnesses/Illnesses';\nimport Pollutants from '../pollutants/Pollutants';\nimport PollutantInstance, { RelatedPollutants } from '../pollutants/PollutantInstance';\nimport Axios from 'axios';\nimport IllnessInstance, { RelatedIllness } from '../illnesses/IllnessInstance';\n/**\nSources:\n\nPagination sources:\nhttps://github.com/react-bootstrap/pagination\nhttps://www.npmjs.com/package/react-ultimate-pagination\nhttps://codepen.io/joedazza/pen/BVXVej\nDAMN CORS:\nhttps://gist.github.com/jesperorb/6ca596217c8dfba237744966c2b5ab1e\n**/\n\nexport class AQI extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n    this.aqiQuery = this.aqiQuery.bind(this);\n  }\n\n  componentDidMount() {\n    // get location -using axios because fetch was being a bitch when parsing json\n    Axios.get(this.aqiQuery()).then(json => {\n      this.setState({\n        data: json.data\n      });\n    });\n  }\n\n  aqiQuery() {\n    // return \"https://ea25e98a-d3cf-4f1e-9275-6b2ae5c10121.mock.pstmn.io/aq/observation/latLong/current/?format=application/json&latitude=41.0802&longitude=-81.5219&distance=25&API_KEY=DB6A42AD-57B4-48E5-9B26-D3E645C62A54\" \n    return \"https://cors-anywhere.herokuapp.com/http://www.airnowapi.org/aq/observation/latLong/current/?format=application/json&latitude=\".concat(this.props.latitude, \"&longitude=\").concat(this.props.longitude, \"&distance=25&API_KEY=DB6A42AD-57B4-48E5-9B26-D3E645C62A54\");\n  }\n\n  render() {\n    return React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.state.data.map(measurement => React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      style: {\n        color: '#1976d2'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, measurement.ParameterName, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(CardSubtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(CardText, {\n      style: {\n        color: '#1976d2'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Air Quality Index: \", measurement.AQI, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), \"Category Number: \", measurement.Category.Number, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), \"Category Classification: \", measurement.Category.Name, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })))))));\n  }\n\n}\nconst ENDPOINT = 'https://api.howsmyair.me/location';\nexport class Location extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      location_url: null,\n      isloaded: false,\n      related_illnesses: [],\n      related_pollutants: []\n    };\n  }\n\n  componentDidMount() {\n    const key = this.props.match.params.key; // get location\n\n    fetch(ENDPOINT + '/' + key).then(res => res.json()).then(data => {\n      this.setState({\n        data: data,\n        location_url: \"https://maps.googleapis.com/maps/api/staticmap?center=\" + data.latitude + \",\" + data.longitude + \"&zoom=12&size=600x295\" + \"&markers=color:green%7Clabel:G%7C\" + data.latitude + \",\" + data.longitude + \"&key=AIzaSyB-U0Z7cqufI-MHmRwfLmgqDCyQmOlIq48\",\n        isloaded: true,\n        related_illnesses: data.related_illnesses,\n        related_pollutants: data.related_pollutants\n      });\n    });\n  }\n\n  render() {\n    if (this.state.isloaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, this.state.data.city), React.createElement(\"h2\", {\n        class: \"card-subtitle mb-2 text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, this.state.data.state_name)), React.createElement(AQI, {\n        latitude: this.state.data.latitude,\n        longitude: this.state.data.longitude,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        variant: \"flush\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"County: \", this.state.data.county_name), React.createElement(ListGroup.Item, {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Latitude: \", this.state.data.latitude), React.createElement(ListGroup.Item, {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Longitude: \", this.state.data.longitude), React.createElement(ListGroup.Item, {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Population: \", this.state.data.population), React.createElement(ListGroup.Item, {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Density (per sq. mile): \", this.state.data.density), React.createElement(ListGroup.Item, {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Time Zone: \", this.state.data.timezone))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        style: {\n          cursor: 'pointer'\n        },\n        href: \"https://www.google.com/maps/place/\".concat(this.state.data.city),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.location_url,\n        alt: \"Italian Trulli\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })))))), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Related Illnesses\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        className: \"spacing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, this.state.related_illnesses.map(illness => React.createElement(Col, {\n        className: \"spacing\",\n        lg: \"4\",\n        sm: \"6\",\n        xs: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(RelatedIllness, {\n        illness_name: illness.illness_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }))))))), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Related Polluants\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        className: \"spacing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, this.state.related_pollutants.map(pollutant => React.createElement(Col, {\n        className: \"spacing\",\n        lg: \"4\",\n        sm: \"6\",\n        xs: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(RelatedPollutants, {\n        pollutant_name: pollutant.pollutant_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }))))))));\n    } else {\n      this.componentDidMount();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://i.makeagif.com/media/9-30-2017/bhAyTs.gif\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\n\nconst buildOrder = (fieldname, direction) => {\n  return \"{%22field%22:%22\".concat(fieldname, \"%22,%22direction%22:%22\").concat(direction, \"%22}\");\n};\n\nconst buildFilter = (fieldname, operator, value) => {\n  return \"{%22name%22:%22\".concat(fieldname, \"%22,%22op%22:%22\").concat(operator, \"%22,%22val%22:%22\").concat(value, \"%22}\");\n};\n\nconst buildQuery = (model, page, filterObjs, orderObjs) => {\n  return \"https://api.howsmyair.me/\".concat(model, \"?page=\").concat(page, \"&q={%22filters%22:[\").concat(filterObjs, \"],%22order_by%22:[\").concat(orderObjs, \"]}\");\n};\n\nexport class Locations extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      num_results: null,\n      objects: [],\n      page: null,\n      total_pages: null,\n      states: [],\n      time_zones: [],\n      current_state: \"None\",\n      current_timezone: \"None\",\n      current_population: \"None\",\n      current_density: \"None\",\n      sort_by: \"city\",\n      display_sort: \"City\",\n      order: \"asc\",\n      display_order: \"Ascending\",\n      curent_page: 0,\n      isloaded: false,\n      current_query: buildQuery(\"location\", buildFilter(\"city\", \"like\", \"%25\".concat(this.props.searchstring, \"%25\")), buildOrder(\"city\", \"desc\"))\n    };\n    this.getUniqueStates = this.getUniqueStates.bind(this);\n    this.getTimeZones = this.getTimeZones.bind(this);\n    this.getLocationQuery = this.getLocationQuery.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.getLocationQuery());\n    fetch(this.getLocationQuery()).then(res => res.json()).then(data => {\n      this.setState({\n        data: data,\n        num_results: data.num_results,\n        objects: data.objects,\n        curent_page: data.page - 1,\n        page: data.page - 1,\n        total_pages: data.total_pages,\n        isloaded: true,\n        states: this.getUniqueStates(data.objects),\n        time_zones: this.getTimeZones(data.objects)\n      });\n    });\n  }\n\n  getLocationQuery() {\n    let filterObjs = buildFilter(\"city\", \"like\", \"%25%25\");\n    let orderObjs = buildOrder(\"city\", \"asc\");\n\n    if (this.state.current_state != \"None\") {\n      filterObjs += \",\" + buildFilter(\"state_name\", \"eq\", this.state.current_state);\n    }\n\n    if (this.state.current_timezone != \"None\") {\n      filterObjs += \",\" + buildFilter(\"timezone\", \"eq\", this.state.current_timezone);\n    }\n\n    switch (this.state.current_population) {\n      case \"Small\":\n        filterObjs += \",\" + buildFilter(\"population\", \"le\", 500000);\n        break;\n\n      case \"Medium\":\n        filterObjs += \",\" + buildFilter(\"population\", \"ge\", 500000);\n        filterObjs += \",\" + buildFilter(\"population\", \"lt\", 1000000);\n        break;\n\n      case \"Large\":\n        filterObjs += \",\" + buildFilter(\"population\", \"ge\", 1000000);\n\n      default:\n        break;\n    }\n\n    switch (this.state.current_density) {\n      case \"Sparse\":\n        filterObjs += \",\" + buildFilter(\"density\", \"le\", 1000);\n        break;\n\n      case \"Medium\":\n        filterObjs += \",\" + buildFilter(\"density\", \"ge\", 1000);\n        filterObjs += \",\" + buildFilter(\"density\", \"lt\", 2000);\n        break;\n\n      case \"Dense\":\n        filterObjs += \",\" + buildFilter(\"density\", \"ge\", 2000);\n\n      default:\n        break;\n    }\n\n    orderObjs = buildOrder(this.state.sort_by, this.state.order);\n    return buildQuery(\"location\", this.state.curent_page + 1, filterObjs, orderObjs);\n  }\n\n  getUniqueStates(objArray) {\n    const uniqueVals = [];\n    objArray.map(obj => {\n      if (uniqueVals.indexOf(obj.state_name) === -1) {\n        uniqueVals.push(obj.state_name);\n      }\n\n      ;\n    });\n    return uniqueVals;\n  }\n\n  getTimeZones(objArray) {\n    const uniqueVals = [];\n    objArray.map(obj => {\n      if (uniqueVals.indexOf(obj.timezone) === -1) {\n        uniqueVals.push(obj.timezone);\n      }\n\n      ;\n    });\n    return uniqueVals;\n  }\n\n  render() {\n    if (this.state.isloaded) {\n      console.log(this.state.curent_page);\n      console.log(this.state.page);\n      console.log(this.state.total_pages);\n      console.log(this.state.num_results);\n      let span = 4;\n      let page = this.state.page;\n      let end = this.state.total_pages - 1;\n      let l = page - span / 2;\n      let r = page + span / 2;\n      let inbetween = [];\n\n      if (this.state.total_pages < span + 1) {\n        for (let p = 0; p < this.state.total_pages; p++) {\n          inbetween.push(React.createElement(Pagination.Item, {\n            active: p === page,\n            onClick: e => this.setState({\n              curent_page: p,\n              isloaded: false\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 347\n            },\n            __self: this\n          }, p + 1));\n        }\n      } else if (page - span < 0) {\n        for (let p = 0; p <= span; p++) {\n          inbetween.push(React.createElement(Pagination.Item, {\n            active: p === page,\n            onClick: e => this.setState({\n              curent_page: p,\n              isloaded: false\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 358\n            },\n            __self: this\n          }, p + 1));\n        }\n      } else if (page + span > end) {\n        for (let p = end - span; p <= end; p++) {\n          inbetween.push(React.createElement(Pagination.Item, {\n            active: p === page,\n            onClick: e => this.setState({\n              curent_page: p,\n              isloaded: false\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 369\n            },\n            __self: this\n          }, p + 1));\n        }\n      } else {\n        for (let p = l < 0 ? 0 : l; p <= r && p <= end; p++) {\n          inbetween.push(React.createElement(Pagination.Item, {\n            active: p === page,\n            onClick: e => this.setState({\n              curent_page: p,\n              isloaded: false\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 380\n            },\n            __self: this\n          }, p + 1));\n        }\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }), React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, this.state.num_results, \" Locations\")), React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, \"Filters\")), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"States\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_state: \"None\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, \"None\"), this.state.states.map(st => React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_state: st,\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, st))), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, this.state.current_state))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Time Zone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_timezone: \"None\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, \"None\"), this.state.time_zones.map(tz => React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_timezone: tz,\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }, tz))), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }, this.state.current_timezone))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Population\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_population: \"None\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, \"None\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_population: \"Small\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }, \"Small\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_population: \"Medium\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, \"Medium\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_population: \"Large\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, \"Large\")), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      }, this.state.current_population)))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Density\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_density: \"None\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, \"None\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_density: \"Sparse\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, \"Sparse\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_density: \"Medium\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }, \"Medium\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            current_density: \"Dense\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, \"Dense\")), React.createElement(\"h5\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }, this.state.current_density)))), React.createElement(\"h3\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, \"Sort By\")), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: this.state.display_sort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"city\",\n            display_sort: \"City\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, \"City\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"county_name\",\n            display_sort: \"County\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }, \"County\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"state_name\",\n            display_sort: \"State\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }, \"State\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"timezone\",\n            display_sort: \"Time Zone\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }, \"Time Zone\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"latitude\",\n            display_sort: \"Latitude\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }, \"Latitude\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"longitude\",\n            display_sort: \"Longitude\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }, \"Longitude\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"population\",\n            display_sort: \"Population\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502\n        },\n        __self: this\n      }, \"Population\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            sort_by: \"density\",\n            display_sort: \"Density\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }, \"Density\"))), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: this.state.display_order,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            order: \"asc\",\n            display_order: \"Ascending\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }, \"Ascending\"), React.createElement(Dropdown.Item, {\n        onClick: () => {\n          this.setState({\n            order: \"desc\",\n            display_order: \"Descending\",\n            curent_page: 0,\n            isloaded: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515\n        },\n        __self: this\n      }, \"Descending\"))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        style: {\n          color: '#1976d2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        },\n        __self: this\n      }, \"Page \", this.state.curent_page + 1, \"/\", this.state.total_pages)), React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526\n        },\n        __self: this\n      }, React.createElement(Pagination, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }, React.createElement(Pagination.First, {\n        onClick: e => this.setState({\n          curent_page: 0,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529\n        },\n        __self: this\n      }), React.createElement(Pagination.Prev, {\n        disabled: this.state.page <= 0,\n        onClick: e => this.setState({\n          curent_page: this.state.page - 1,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534\n        },\n        __self: this\n      }), inbetween, React.createElement(Pagination.Next, {\n        disabled: this.state.page >= this.state.total_pages - 1,\n        onClick: e => this.setState({\n          curent_page: this.state.page + 1,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543\n        },\n        __self: this\n      }), React.createElement(Pagination.Last, {\n        onClick: e => this.setState({\n          curent_page: this.state.total_pages - 1,\n          isloaded: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      })))), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        className: \"spacing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }, this.state.objects.map(location => React.createElement(Col, {\n        className: \"spacing\",\n        lg: \"4\",\n        sm: \"6\",\n        xs: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559\n        },\n        __self: this\n      }, React.createElement(Card, {\n        body: true,\n        style: {\n          backgroundColor: '#00',\n          borderColor: '#2255',\n          height: '37rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        style: {\n          cursor: 'pointer'\n        },\n        href: \"/Location/\" + location.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }, React.createElement(CardImg, {\n        src: \"https://maps.googleapis.com/maps/api/staticmap?center=\" + location.latitude + \",\" + location.longitude + \"&zoom=12&size=400x400\" + \"&markers=color:green%7Clabel:G%7C\" + location.latitude + \",\" + location.longitude + \"&key=AIzaSyB-U0Z7cqufI-MHmRwfLmgqDCyQmOlIq48\",\n        alt: \"Italian Trulli\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }), React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      }, location.city), React.createElement(\"h6\", {\n        class: \"card-subtitle mb-2 text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575\n        },\n        __self: this\n      }, location.state_name)), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      }, React.createElement(CardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579\n        },\n        __self: this\n      }, \"County: \", location.county_name, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581\n        },\n        __self: this\n      }), \"Latitude: \", location.latitude, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582\n        },\n        __self: this\n      }), \"Longitude: \", location.longitude, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }), \"Population: \", location.population, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584\n        },\n        __self: this\n      }), \"Density (per sq. mile): \", location.density, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585\n        },\n        __self: this\n      }), \"Time Zone: \", location.timezone))))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      }))))));\n    } else {\n      this.componentDidMount();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://i.makeagif.com/media/9-30-2017/bhAyTs.gif\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        },\n        __self: this\n      })));\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/jasonsim/School/cs373-airpollution/frontend/src/pages/locations/Locations.js"],"names":["React","Component","Jumbotron","Container","Card","Button","CardImg","CardTitle","CardText","CardHeader","CardDeck","CardColumns","CardSubtitle","CardBody","NavLink","Carousel","Form","FormGroup","Label","Input","FormText","Image","Col","Row","Pagination","DropdownButton","Dropdown","ButtonToolbar","ListGroup","BrowserRouter","Router","Route","Link","Switch","BrowserHistory","createBrowserHistory","createUltimatePagination","ITEM_TYPES","ReactDOM","Illnesses","Pollutants","PollutantInstance","RelatedPollutants","Axios","IllnessInstance","RelatedIllness","AQI","constructor","props","state","data","aqiQuery","bind","componentDidMount","get","then","json","setState","latitude","longitude","render","map","measurement","color","ParameterName","Category","Number","Name","ENDPOINT","Location","location_url","isloaded","related_illnesses","related_pollutants","key","match","params","fetch","res","city","state_name","county_name","population","density","timezone","cursor","illness","illness_name","pollutant","pollutant_name","buildOrder","fieldname","direction","buildFilter","operator","value","buildQuery","model","page","filterObjs","orderObjs","Locations","num_results","objects","total_pages","states","time_zones","current_state","current_timezone","current_population","current_density","sort_by","display_sort","order","display_order","curent_page","current_query","searchstring","getUniqueStates","getTimeZones","getLocationQuery","console","log","objArray","uniqueVals","obj","indexOf","push","span","end","l","r","inbetween","p","e","st","tz","location","backgroundColor","borderColor","height","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Jumbotron, Container, Card, Button, CardImg, CardTitle, CardText, CardHeader,\n         CardDeck, CardColumns, CardSubtitle, CardBody , NavLink, Carousel,\n         Form,FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Image, Col, Row, Pagination, DropdownButton, Dropdown, ButtonToolbar, ListGroup } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Link , Switch, BrowserHistory } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { createUltimatePagination, ITEM_TYPES } from 'react-ultimate-pagination';\nimport ReactDOM from 'react-dom';\nimport Illnesses from '../illnesses/Illnesses';\nimport Pollutants from '../pollutants/Pollutants';\nimport PollutantInstance,{RelatedPollutants} from '../pollutants/PollutantInstance';\nimport Axios from 'axios';\nimport IllnessInstance,{RelatedIllness} from '../illnesses/IllnessInstance';\n/**\nSources:\n\nPagination sources:\nhttps://github.com/react-bootstrap/pagination\nhttps://www.npmjs.com/package/react-ultimate-pagination\nhttps://codepen.io/joedazza/pen/BVXVej\nDAMN CORS:\nhttps://gist.github.com/jesperorb/6ca596217c8dfba237744966c2b5ab1e\n**/\n\n\nexport class AQI extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n    this.aqiQuery = this.aqiQuery.bind(this) \n  }\n\n  componentDidMount() {\n    // get location -using axios because fetch was being a bitch when parsing json\n    Axios.get(this.aqiQuery())\n      .then(json => {this.setState({data:json.data})});\n  };\n\n  aqiQuery(){\n    // return \"https://ea25e98a-d3cf-4f1e-9275-6b2ae5c10121.mock.pstmn.io/aq/observation/latLong/current/?format=application/json&latitude=41.0802&longitude=-81.5219&distance=25&API_KEY=DB6A42AD-57B4-48E5-9B26-D3E645C62A54\" \n    return `https://cors-anywhere.herokuapp.com/http://www.airnowapi.org/aq/observation/latLong/current/?format=application/json&latitude=${this.props.latitude}&longitude=${this.props.longitude}&distance=25&API_KEY=DB6A42AD-57B4-48E5-9B26-D3E645C62A54`\n  }\n\n  render() {\n      return (\n        <Row>\n          {this.state.data.map( measurement => (\n            <Col>\n              <Card>\n                <CardHeader style={{color: '#1976d2'}}>\n                  {measurement.ParameterName}<br/>\n                <CardSubtitle>                  \n                </CardSubtitle>                  \n                </CardHeader>\n                <CardBody>\n                  <CardText style={{color: '#1976d2'}}>\n                    Air Quality Index: {measurement.AQI} <br/>\n                    Category Number: {measurement.Category.Number} <br/>\n                    Category Classification: {measurement.Category.Name} <br/>\n                  </CardText>\n                </CardBody>\n              </Card>\n            </Col>\n          ))}         \n        </Row>        \n      );      \n    }\n  \n}\n\nconst ENDPOINT = 'https://api.howsmyair.me/location';\n\nexport class Location extends Component {\n\n   constructor(props) {\n      super(props);\n      this.state = {\n        data: {},\n        location_url : null,\n        isloaded : false,\n        related_illnesses: [],\n        related_pollutants: []\n      };\n   }\n\n   componentDidMount() {\n\n      const {key} = this.props.match.params;\n\n      // get location\n      fetch(ENDPOINT + '/' + key)\n         .then(res => res.json())\n         .then(data => { this.setState({\n            data: data,\n            location_url : \"https://maps.googleapis.com/maps/api/staticmap?center=\"+\n                            data.latitude+\",\"+data.longitude+\n                            \"&zoom=12&size=600x295\"+\n                            \"&markers=color:green%7Clabel:G%7C\"+\n                            data.latitude+\",\"+data.longitude +\n                            \"&key=AIzaSyB-U0Z7cqufI-MHmRwfLmgqDCyQmOlIq48\",\n            isloaded : true,                            \n            related_illnesses : data.related_illnesses,\n            related_pollutants : data.related_pollutants\n         })\n      })\n   };\n\n   render() {\n      if(this.state.isloaded){\n        return (\n          <div>\n            <Jumbotron>\n              <Container>\n              <br/>\n              <Row>\n                <Col>\n                  <h1 style={{color: '#1976d2'}}>{this.state.data.city}</h1>\n                  <h2 class = \"card-subtitle mb-2 text-muted\">{this.state.data.state_name}</h2>\n                </Col>\n                  <AQI latitude = {this.state.data.latitude} longitude = {this.state.data.longitude}/>\n              </Row>\n              <br/>\n              <Row>\n                <Col>\n                <ListGroup variant=\"flush\" >\n                  <ListGroup.Item  style={{color: '#1976d2'}}>\n                    County: {this.state.data.county_name}                \n                  </ListGroup.Item>\n                  <ListGroup.Item style={{color: '#1976d2'}}>\n                    Latitude: {this.state.data.latitude}\n                  </ListGroup.Item>\n                  <ListGroup.Item style={{color: '#1976d2'}}>\n                    Longitude: {this.state.data.longitude}                \n                  </ListGroup.Item>\n                  <ListGroup.Item style={{color: '#1976d2'}}>\n                    Population: {this.state.data.population}                \n                  </ListGroup.Item>\n                  <ListGroup.Item style={{color: '#1976d2'}}>\n                    Density (per sq. mile): {this.state.data.density}                \n                  </ListGroup.Item>\n                  <ListGroup.Item style={{color: '#1976d2'}}>\n                    Time Zone: {this.state.data.timezone}                \n                  </ListGroup.Item>\n                </ListGroup>\n                </Col>\n                <Col>\n                  <a style={{ cursor: 'pointer' }} href={`https://www.google.com/maps/place/${this.state.data.city}`}>\n                    <img src={this.state.location_url} alt=\"Italian Trulli\"/>\n                  </a>            \n                </Col>\n              </Row>\n              </Container>\n            </Jumbotron>\n            <Container>\n              <Row>\n                <Col>\n                  <h1 style={{color: '#1976d2'}}>Related Illnesses</h1><br/>\n                  <Row className=\"justify-content-md-center\" className=\"spacing\">\n                    {this.state.related_illnesses.map((illness) => (\n                       <Col className=\"spacing\" lg=\"4\" sm=\"6\" xs=\"12\">\n                          <RelatedIllness illness_name={illness.illness_name} />\n                          <p />\n                       </Col>\n                    ))}\n                  </Row>\n                </Col>\n              </Row>\n            </Container>\n            <Container>\n              <Row>\n                <Col>\n                  <h1 style={{color: '#1976d2'}}>Related Polluants</h1><br/>                \n                  <Row className=\"justify-content-md-center\" className=\"spacing\">\n                    {this.state.related_pollutants.map((pollutant) => (\n                       <Col className=\"spacing\" lg=\"4\" sm=\"6\" xs=\"12\">\n                        <RelatedPollutants pollutant_name={pollutant.pollutant_name} />\n                        <p />\n                     </Col>\n                    ))}\n                  </Row>\n                </Col>\n              </Row>\n            </Container>\n          </div>\n        );\n      } else {\n        this.componentDidMount();\n        return(\n          <div>\n           <center><img src = \"https://i.makeagif.com/media/9-30-2017/bhAyTs.gif\"/></center>\n          </div>        )\n      }\n   }\n}\n\n\nconst buildOrder  = (fieldname,direction) => {\n    return `{%22field%22:%22${fieldname}%22,%22direction%22:%22${direction}%22}`\n}\n\nconst buildFilter = (fieldname,operator,value) => {\n    return `{%22name%22:%22${fieldname}%22,%22op%22:%22${operator}%22,%22val%22:%22${value}%22}`\n}\n\nconst buildQuery = (model,page,filterObjs,orderObjs) => {\n      return `https://api.howsmyair.me/${model}?page=${page}&q={%22filters%22:[${filterObjs}],%22order_by%22:[${orderObjs}]}`\n}\n\n\nexport class Locations extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      data : {},\n      num_results: null,\n      objects:[],\n      page: null,\n      total_pages: null,\n      states : [],\n      time_zones : [],\n      current_state: \"None\",\n      current_timezone : \"None\",\n      current_population : \"None\",\n      current_density : \"None\",\n      sort_by : \"city\",\n      display_sort : \"City\",\n      order : \"asc\",\n      display_order : \"Ascending\",\n      curent_page: 0,\n      isloaded : false,\n      current_query: buildQuery(\"location\",buildFilter(\"city\",\"like\",`%25${this.props.searchstring}%25`),buildOrder(\"city\",\"desc\"))\n    };\n        this.getUniqueStates = this.getUniqueStates.bind(this)\n        this.getTimeZones = this.getTimeZones.bind(this)\n        this.getLocationQuery = this.getLocationQuery.bind(this)\n        this.componentDidMount = this.componentDidMount.bind(this)\n\n  }\n\n    componentDidMount() {\n      console.log(this.getLocationQuery())\n      fetch(this.getLocationQuery())\n         .then(res => res.json())\n         .then(data => {\n          this.setState({\n            data : data,\n            num_results: data.num_results,\n            objects: data.objects,\n            curent_page: data.page-1,\n            page: data.page-1,\n            total_pages: data.total_pages,\n            isloaded : true,\n            states : this.getUniqueStates(data.objects),\n            time_zones : this.getTimeZones(data.objects)\n          })\n\n      })\n    };\n\n    getLocationQuery(){\n\n      let filterObjs = buildFilter(\"city\",\"like\",`%25%25`);\n      let orderObjs = buildOrder(\"city\",\"asc\")\n\n      if (this.state.current_state != \"None\") {\n        filterObjs += \",\"+buildFilter(\"state_name\",\"eq\",this.state.current_state)\n      }\n      if (this.state.current_timezone != \"None\") {\n        filterObjs += \",\"+buildFilter(\"timezone\",\"eq\",this.state.current_timezone)\n      }\n\n      switch(this.state.current_population){\n        case \"Small\":\n          filterObjs += \",\"+buildFilter(\"population\",\"le\",500000)\n          break;\n        case\"Medium\":\n          filterObjs += \",\"+buildFilter(\"population\",\"ge\",500000)\n          filterObjs += \",\"+buildFilter(\"population\",\"lt\",1000000)\n          break;\n        case\"Large\":\n          filterObjs += \",\"+buildFilter(\"population\",\"ge\",1000000)\n        default:\n          break;\n\n      }\n\n      switch(this.state.current_density){\n        case \"Sparse\":\n          filterObjs += \",\"+buildFilter(\"density\",\"le\",1000)\n          break;\n        case\"Medium\":\n          filterObjs += \",\"+buildFilter(\"density\",\"ge\",1000)\n          filterObjs += \",\"+buildFilter(\"density\",\"lt\",2000)\n          break;\n        case\"Dense\":\n          filterObjs += \",\"+buildFilter(\"density\",\"ge\",2000)\n        default:\n          break;\n      }\n      orderObjs = buildOrder(this.state.sort_by,this.state.order)\n\n      return buildQuery(\"location\",this.state.curent_page+1,filterObjs,orderObjs);\n    }\n\n    getUniqueStates(objArray){\n        const uniqueVals = [];\n        objArray.map( obj => {\n            if (uniqueVals.indexOf(obj.state_name) === -1) {\n                uniqueVals.push(obj.state_name)\n            };\n        });\n        return(uniqueVals);\n    }\n\n    getTimeZones(objArray){\n        const uniqueVals = [];\n        objArray.map( obj => {\n            if (uniqueVals.indexOf(obj.timezone) === -1) {\n                uniqueVals.push(obj.timezone)\n            };\n        });\n        return(uniqueVals);\n    }\n\n    render(){\n      if (this.state.isloaded){\n      console.log(this.state.curent_page)\n      console.log(this.state.page)\n      console.log(this.state.total_pages)\n      console.log(this.state.num_results)\n      let span = 4\n      let page = this.state.page\n      let end = this.state.total_pages - 1\n      let l = page - (span / 2)\n      let r = page + (span / 2)\n      let inbetween = [];\n\n      if (this.state.total_pages < span + 1){\n          for (let p = 0; p < this.state.total_pages; p++) {\n            inbetween.push(\n              <Pagination.Item\n                active={p === page}\n                onClick={e => this.setState({ curent_page : p , isloaded : false})}\n              >\n              {p + 1}\n              </Pagination.Item>\n            );\n          }\n      } else if (page-span < 0) {\n        for (let p = 0; p <= span; p++) {\n          inbetween.push(\n            <Pagination.Item\n              active={p === page}\n              onClick={e => this.setState({ curent_page : p , isloaded : false})}\n            >\n            {p + 1}\n            </Pagination.Item>\n          );\n        }\n      } else if (page + span > end) {\n          for (let p = end - span; p <= end ; p++) {\n            inbetween.push(\n              <Pagination.Item\n                active={p === page}\n              onClick={e => this.setState({ curent_page : p , isloaded : false})}\n              >\n              {p + 1}\n              </Pagination.Item>\n          );\n        }\n      } else {\n        for (let p = l < 0 ? 0 : l; p <= r && p <= end; p++) {\n          inbetween.push(\n            <Pagination.Item\n              active={p === page}\n              onClick={e => this.setState({ curent_page : p , isloaded : false})}\n            >\n            {p + 1}\n            </Pagination.Item>\n          );\n        }\n      }\n      return(\n        <div>\n          <br/>\n            <Row className=\"justify-content-md-center\">\n                <h1 style={{color: '#1976d2'}}>{this.state.num_results} Locations</h1>\n            </Row>\n            <Jumbotron>\n            <Row className=\"justify-content-md-center\">\n\n              <Col md=\"auto\">\n                <h3 style={{color: '#1976d2'}}>Filters</h3>\n              </Col>\n              <Col md=\"auto\">\n                <center>\n                  <DropdownButton id=\"dropdown-basic-button\" title=\"States\">\n                      <Dropdown.Item onClick={() => {this.setState({current_state : \"None\", curent_page : 0, isloaded : false});}}>\n                        None\n                      </Dropdown.Item>\n                      {this.state.states.map( st => (\n                        <Dropdown.Item onClick={() => {\n                          this.setState({\n                            current_state : st,\n                            curent_page : 0,\n                            isloaded : false\n                          });\n                        }}>\n                        {st}\n                        </Dropdown.Item>\n                      ))}\n                  </DropdownButton>\n                  <h5 style={{color: '#1976d2'}}>{this.state.current_state}</h5>\n                </center>\n              </Col>\n              <Col md=\"auto\">\n                <center>\n                  <DropdownButton id=\"dropdown-basic-button\" title=\"Time Zone\">\n                    <Dropdown.Item onClick={() => {this.setState({current_timezone : \"None\", curent_page : 0,isloaded : false});}}>\n                      None\n                    </Dropdown.Item>\n                      {this.state.time_zones.map( tz => (\n                        <Dropdown.Item onClick={() => {\n                            this.setState({\n                              current_timezone : tz,\n                              curent_page : 0,\n                              isloaded : false\n                            });\n                        }}>\n                        {tz}\n                    </Dropdown.Item>\n                  ))}\n                  </DropdownButton>\n                  <h5 style={{color: '#1976d2'}}>{this.state.current_timezone}</h5>\n                </center>\n              </Col>\n              <Col md=\"auto\">\n                <center>\n                  <DropdownButton id=\"dropdown-basic-button\" title=\"Population\">\n                    <Dropdown.Item onClick={() => {this.setState({ current_population : \"None\", curent_page : 0, isloaded : false});}}>\n                      None\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_population : \"Small\", curent_page : 0, isloaded : false});}}>\n                      Small\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_population : \"Medium\", curent_page : 0, isloaded : false});}}>\n                      Medium\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_population : \"Large\", curent_page : 0, isloaded : false});}}>\n                      Large\n                    </Dropdown.Item>\n                  </DropdownButton>\n                <h5 style={{color: '#1976d2'}}><center>{this.state.current_population}</center></h5>\n                </center>\n              </Col>\n              <Col md=\"auto\">\n                <center>\n                  <DropdownButton id=\"dropdown-basic-button\" title=\"Density\">\n                    <Dropdown.Item onClick={() => {this.setState({ current_density : \"None\", curent_page : 0, isloaded : false});}}>\n                      None\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_density : \"Sparse\", curent_page : 0, isloaded : false});}}>\n                      Sparse\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_density : \"Medium\", curent_page : 0, isloaded : false});}}>\n                      Medium\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ current_density : \"Dense\", curent_page : 0, isloaded : false});}}>\n                      Dense\n                    </Dropdown.Item>\n                  </DropdownButton>\n                <h5 style={{color: '#1976d2'}}><center>{this.state.current_density}</center></h5>\n                </center>\n              </Col>\n                <h3 style={{color: '#1976d2'}}><center>Sort By</center></h3>\n              <Col md=\"auto\">\n                  <DropdownButton id=\"dropdown-basic-button\" title={this.state.display_sort}>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"city\", display_sort : \"City\", curent_page : 0, isloaded : false});}}>\n                      City\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"county_name\", display_sort : \"County\", curent_page : 0, isloaded : false});}}>\n                      County\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"state_name\", display_sort : \"State\", curent_page : 0, isloaded : false});}}>\n                      State\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"timezone\", display_sort : \"Time Zone\", curent_page : 0, isloaded : false});}}>\n                      Time Zone\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"latitude\", display_sort : \"Latitude\", curent_page : 0, isloaded : false});}}>\n                      Latitude\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"longitude\", display_sort : \"Longitude\", curent_page : 0, isloaded : false});}}>\n                      Longitude\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"population\", display_sort : \"Population\", curent_page : 0, isloaded : false});}}>\n                      Population\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ sort_by : \"density\", display_sort : \"Density\", curent_page : 0, isloaded : false});}}>\n                      Density\n                    </Dropdown.Item>\n                  </DropdownButton>\n              </Col>\n              <Col md=\"auto\">\n                  <DropdownButton id=\"dropdown-basic-button\" title = {this.state.display_order}>\n                    <Dropdown.Item onClick={() => {this.setState({ order : \"asc\", display_order : \"Ascending\", curent_page : 0, isloaded : false});}}>\n                      Ascending\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => {this.setState({ order : \"desc\", display_order : \"Descending\", curent_page : 0, isloaded : false});}}>\n                      Descending\n                    </Dropdown.Item>\n                  </DropdownButton>\n              </Col>\n\n            </Row>\n            </Jumbotron>\n          <br/>\n          <Container>\n            <center><h4 style={{color: '#1976d2'}}>Page {this.state.curent_page+1}/{this.state.total_pages}</h4></center>\n            <Row className=\"justify-content-md-center\">\n              <Pagination>\n                {/*First Page*/}\n                <Pagination.First\n                  onClick={e => this.setState({ curent_page : 0, isloaded : false})}\n                />\n\n                {/*Previous Page*/}\n                <Pagination.Prev\n                  disabled={this.state.page <= 0}\n                  onClick={e => this.setState({ curent_page : this.state.page -1 , isloaded : false})}\n                />\n\n                {/*Eveything in between - see block before return statement*/}\n                {inbetween}\n\n                {/*Next Page*/}\n                <Pagination.Next\n                  disabled={this.state.page >= this.state.total_pages - 1}\n                  onClick={e => this.setState({ curent_page : this.state.page +1 , isloaded : false})}\n                />\n\n                {/*Last Page*/}\n                <Pagination.Last\n                  onClick={e => this.setState({ curent_page : this.state.total_pages - 1 , isloaded : false})}\n                />\n              </Pagination>\n            </Row>\n           </Container>\n           <Container>\n             {/*Record Grid*/}\n             <Row className=\"justify-content-md-center\" className=\"spacing\">\n             {this.state.objects.map((location) => (\n                <Col className=\"spacing\" lg=\"4\" sm=\"6\" xs=\"12\">\n                <Card body style={{ backgroundColor: '#00', borderColor: '#2255', height: '37rem' }}>\n                <a style={{ cursor: 'pointer' }} href={\"/Location/\" + location.id}>\n                <CardImg src={\n                   \"https://maps.googleapis.com/maps/api/staticmap?center=\"+\n                                   location.latitude+\",\"+location.longitude+\n                                   \"&zoom=12&size=400x400\"+\n                                   \"&markers=color:green%7Clabel:G%7C\"+\n                                   location.latitude+\",\"+location.longitude +\n                                   \"&key=AIzaSyB-U0Z7cqufI-MHmRwfLmgqDCyQmOlIq48\"}\n\n                                   alt=\"Italian Trulli\" />\n                  <CardHeader>\n                    {/* The dynamic link is arranged this way through the NavBar.js\n                    and back to the Location component*/}\n                    <h5>{location.city}</h5>\n                    <h6 class = \"card-subtitle mb-2 text-muted\">{location.state_name}</h6>\n                  </CardHeader>\n                  <CardBody>\n                  <CardText>\n                    <p>\n                    County: {location.county_name}\n                    <br/>Latitude: {location.latitude}\n                    <br/>Longitude: {location.longitude}\n                    <br/>Population: {location.population}\n                    <br/>Density (per sq. mile): {location.density}\n                    <br/>Time Zone: {location.timezone}\n                    </p>\n                  </CardText>\n                  </CardBody>\n               </a>\n               </Card>\n                <p />\n                </Col>\n             ))}\n             </Row>\n         </Container>\n        </div>\n      );\n    } else {\n      this.componentDidMount();\n      return (\n        <div>\n         <center><img src = \"https://i.makeagif.com/media/9-30-2017/bhAyTs.gif\"/></center>\n        </div>\n      );\n   }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}